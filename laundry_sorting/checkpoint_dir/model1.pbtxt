node {
  name: "s"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 400
        }
        dim {
          size: 300
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "s_"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 400
        }
        dim {
          size: 300
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "a"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "r"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "done"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "eval_net_0/w1/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "eval_net_0/w1/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/w1/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "eval_net_0/w1/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "eval_net_0/w1/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "eval_net_0/w1/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "eval_net_0/w1/Initializer/truncated_normal/TruncatedNormal"
  input: "eval_net_0/w1/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w1"
      }
    }
  }
}
node {
  name: "eval_net_0/w1/Initializer/truncated_normal"
  op: "Add"
  input: "eval_net_0/w1/Initializer/truncated_normal/mul"
  input: "eval_net_0/w1/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w1"
      }
    }
  }
}
node {
  name: "eval_net_0/w1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/w1/Assign"
  op: "Assign"
  input: "eval_net_0/w1"
  input: "eval_net_0/w1/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/w1/read"
  op: "Identity"
  input: "eval_net_0/w1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w1"
      }
    }
  }
}
node {
  name: "eval_net_0/b1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/b1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/b1/Assign"
  op: "Assign"
  input: "eval_net_0/b1"
  input: "eval_net_0/b1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/b1/read"
  op: "Identity"
  input: "eval_net_0/b1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
}
node {
  name: "eval_net_0/Conv2D"
  op: "Conv2D"
  input: "s"
  input: "eval_net_0/w1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/add"
  op: "AddV2"
  input: "eval_net_0/Conv2D"
  input: "eval_net_0/b1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_0/Relu"
  op: "Relu"
  input: "eval_net_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_0/w2/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "eval_net_0/w2/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/w2/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "eval_net_0/w2/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "eval_net_0/w2/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "eval_net_0/w2/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "eval_net_0/w2/Initializer/truncated_normal/TruncatedNormal"
  input: "eval_net_0/w2/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w2"
      }
    }
  }
}
node {
  name: "eval_net_0/w2/Initializer/truncated_normal"
  op: "Add"
  input: "eval_net_0/w2/Initializer/truncated_normal/mul"
  input: "eval_net_0/w2/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w2"
      }
    }
  }
}
node {
  name: "eval_net_0/w2"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/w2/Assign"
  op: "Assign"
  input: "eval_net_0/w2"
  input: "eval_net_0/w2/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/w2/read"
  op: "Identity"
  input: "eval_net_0/w2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w2"
      }
    }
  }
}
node {
  name: "eval_net_0/b2/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/b2"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/b2/Assign"
  op: "Assign"
  input: "eval_net_0/b2"
  input: "eval_net_0/b2/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/b2/read"
  op: "Identity"
  input: "eval_net_0/b2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b2"
      }
    }
  }
}
node {
  name: "eval_net_0/Conv2D_1"
  op: "Conv2D"
  input: "eval_net_0/Relu"
  input: "eval_net_0/w2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/add_1"
  op: "AddV2"
  input: "eval_net_0/Conv2D_1"
  input: "eval_net_0/b2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_0/Relu_1"
  op: "Relu"
  input: "eval_net_0/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_0/w3/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "eval_net_0/w3/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/w3/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "eval_net_0/w3/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "eval_net_0/w3/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "eval_net_0/w3/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "eval_net_0/w3/Initializer/truncated_normal/TruncatedNormal"
  input: "eval_net_0/w3/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w3"
      }
    }
  }
}
node {
  name: "eval_net_0/w3/Initializer/truncated_normal"
  op: "Add"
  input: "eval_net_0/w3/Initializer/truncated_normal/mul"
  input: "eval_net_0/w3/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w3"
      }
    }
  }
}
node {
  name: "eval_net_0/w3"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/w3/Assign"
  op: "Assign"
  input: "eval_net_0/w3"
  input: "eval_net_0/w3/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/w3/read"
  op: "Identity"
  input: "eval_net_0/w3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w3"
      }
    }
  }
}
node {
  name: "eval_net_0/b3/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/b3"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/b3/Assign"
  op: "Assign"
  input: "eval_net_0/b3"
  input: "eval_net_0/b3/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/b3/read"
  op: "Identity"
  input: "eval_net_0/b3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b3"
      }
    }
  }
}
node {
  name: "eval_net_0/Conv2D_2"
  op: "Conv2D"
  input: "eval_net_0/Relu_1"
  input: "eval_net_0/w3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/add_2"
  op: "AddV2"
  input: "eval_net_0/Conv2D_2"
  input: "eval_net_0/b3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_0/Relu_2"
  op: "Relu"
  input: "eval_net_0/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_0/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\207\001\000"
      }
    }
  }
}
node {
  name: "eval_net_0/Reshape"
  op: "Reshape"
  input: "eval_net_0/Relu_2"
  input: "eval_net_0/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "eval_net_0/fc_w1/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\207\001\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "eval_net_0/fc_w1/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/fc_w1/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "eval_net_0/fc_w1/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "eval_net_0/fc_w1/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "eval_net_0/fc_w1/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "eval_net_0/fc_w1/Initializer/truncated_normal/TruncatedNormal"
  input: "eval_net_0/fc_w1/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_w1"
      }
    }
  }
}
node {
  name: "eval_net_0/fc_w1/Initializer/truncated_normal"
  op: "Add"
  input: "eval_net_0/fc_w1/Initializer/truncated_normal/mul"
  input: "eval_net_0/fc_w1/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_w1"
      }
    }
  }
}
node {
  name: "eval_net_0/fc_w1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100096
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/fc_w1/Assign"
  op: "Assign"
  input: "eval_net_0/fc_w1"
  input: "eval_net_0/fc_w1/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/fc_w1/read"
  op: "Identity"
  input: "eval_net_0/fc_w1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_w1"
      }
    }
  }
}
node {
  name: "eval_net_0/fc_b1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/fc_b1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_b1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/fc_b1/Assign"
  op: "Assign"
  input: "eval_net_0/fc_b1"
  input: "eval_net_0/fc_b1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/fc_b1/read"
  op: "Identity"
  input: "eval_net_0/fc_b1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_b1"
      }
    }
  }
}
node {
  name: "eval_net_0/MatMul"
  op: "MatMul"
  input: "eval_net_0/Reshape"
  input: "eval_net_0/fc_w1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "eval_net_0/add_3"
  op: "AddV2"
  input: "eval_net_0/MatMul"
  input: "eval_net_0/fc_b1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_0/Relu_3"
  op: "Relu"
  input: "eval_net_0/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_0/q_w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "eval_net_0/q_w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/q_w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "eval_net_0/q_w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "eval_net_0/q_w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "eval_net_0/q_w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "eval_net_0/q_w/Initializer/truncated_normal/TruncatedNormal"
  input: "eval_net_0/q_w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_w"
      }
    }
  }
}
node {
  name: "eval_net_0/q_w/Initializer/truncated_normal"
  op: "Add"
  input: "eval_net_0/q_w/Initializer/truncated_normal/mul"
  input: "eval_net_0/q_w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_w"
      }
    }
  }
}
node {
  name: "eval_net_0/q_w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/q_w/Assign"
  op: "Assign"
  input: "eval_net_0/q_w"
  input: "eval_net_0/q_w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/q_w/read"
  op: "Identity"
  input: "eval_net_0/q_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_w"
      }
    }
  }
}
node {
  name: "eval_net_0/q_b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/q_b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/q_b/Assign"
  op: "Assign"
  input: "eval_net_0/q_b"
  input: "eval_net_0/q_b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/q_b/read"
  op: "Identity"
  input: "eval_net_0/q_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_b"
      }
    }
  }
}
node {
  name: "eval_net_0/matmul_1"
  op: "MatMul"
  input: "eval_net_0/Relu_3"
  input: "eval_net_0/q_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "eval_net_0/add_4"
  op: "AddV2"
  input: "eval_net_0/matmul_1"
  input: "eval_net_0/q_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_0/w1/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "target_net_0/w1/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/w1/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "target_net_0/w1/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "target_net_0/w1/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "target_net_0/w1/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "target_net_0/w1/Initializer/truncated_normal/TruncatedNormal"
  input: "target_net_0/w1/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
}
node {
  name: "target_net_0/w1/Initializer/truncated_normal"
  op: "Add"
  input: "target_net_0/w1/Initializer/truncated_normal/mul"
  input: "target_net_0/w1/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
}
node {
  name: "target_net_0/w1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/w1/Assign"
  op: "Assign"
  input: "target_net_0/w1"
  input: "target_net_0/w1/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/w1/read"
  op: "Identity"
  input: "target_net_0/w1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
}
node {
  name: "target_net_0/b1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/b1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/b1/Assign"
  op: "Assign"
  input: "target_net_0/b1"
  input: "target_net_0/b1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/b1/read"
  op: "Identity"
  input: "target_net_0/b1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b1"
      }
    }
  }
}
node {
  name: "target_net_0/Conv2D"
  op: "Conv2D"
  input: "s_"
  input: "target_net_0/w1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/add"
  op: "AddV2"
  input: "target_net_0/Conv2D"
  input: "target_net_0/b1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_0/Relu"
  op: "Relu"
  input: "target_net_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_0/w2/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "target_net_0/w2/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/w2/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "target_net_0/w2/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "target_net_0/w2/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "target_net_0/w2/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "target_net_0/w2/Initializer/truncated_normal/TruncatedNormal"
  input: "target_net_0/w2/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
}
node {
  name: "target_net_0/w2/Initializer/truncated_normal"
  op: "Add"
  input: "target_net_0/w2/Initializer/truncated_normal/mul"
  input: "target_net_0/w2/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
}
node {
  name: "target_net_0/w2"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/w2/Assign"
  op: "Assign"
  input: "target_net_0/w2"
  input: "target_net_0/w2/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/w2/read"
  op: "Identity"
  input: "target_net_0/w2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
}
node {
  name: "target_net_0/b2/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/b2"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/b2/Assign"
  op: "Assign"
  input: "target_net_0/b2"
  input: "target_net_0/b2/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/b2/read"
  op: "Identity"
  input: "target_net_0/b2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b2"
      }
    }
  }
}
node {
  name: "target_net_0/Conv2D_1"
  op: "Conv2D"
  input: "target_net_0/Relu"
  input: "target_net_0/w2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/add_1"
  op: "AddV2"
  input: "target_net_0/Conv2D_1"
  input: "target_net_0/b2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_0/Relu_1"
  op: "Relu"
  input: "target_net_0/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_0/w3/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "target_net_0/w3/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/w3/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "target_net_0/w3/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "target_net_0/w3/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "target_net_0/w3/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "target_net_0/w3/Initializer/truncated_normal/TruncatedNormal"
  input: "target_net_0/w3/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
}
node {
  name: "target_net_0/w3/Initializer/truncated_normal"
  op: "Add"
  input: "target_net_0/w3/Initializer/truncated_normal/mul"
  input: "target_net_0/w3/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
}
node {
  name: "target_net_0/w3"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/w3/Assign"
  op: "Assign"
  input: "target_net_0/w3"
  input: "target_net_0/w3/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/w3/read"
  op: "Identity"
  input: "target_net_0/w3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
}
node {
  name: "target_net_0/b3/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/b3"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/b3/Assign"
  op: "Assign"
  input: "target_net_0/b3"
  input: "target_net_0/b3/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/b3/read"
  op: "Identity"
  input: "target_net_0/b3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b3"
      }
    }
  }
}
node {
  name: "target_net_0/Conv2D_2"
  op: "Conv2D"
  input: "target_net_0/Relu_1"
  input: "target_net_0/w3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/add_2"
  op: "AddV2"
  input: "target_net_0/Conv2D_2"
  input: "target_net_0/b3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_0/Relu_2"
  op: "Relu"
  input: "target_net_0/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_0/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\207\001\000"
      }
    }
  }
}
node {
  name: "target_net_0/Reshape"
  op: "Reshape"
  input: "target_net_0/Relu_2"
  input: "target_net_0/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "target_net_0/fc_w1/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\207\001\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "target_net_0/fc_w1/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/fc_w1/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "target_net_0/fc_w1/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "target_net_0/fc_w1/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "target_net_0/fc_w1/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "target_net_0/fc_w1/Initializer/truncated_normal/TruncatedNormal"
  input: "target_net_0/fc_w1/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
}
node {
  name: "target_net_0/fc_w1/Initializer/truncated_normal"
  op: "Add"
  input: "target_net_0/fc_w1/Initializer/truncated_normal/mul"
  input: "target_net_0/fc_w1/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
}
node {
  name: "target_net_0/fc_w1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100096
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/fc_w1/Assign"
  op: "Assign"
  input: "target_net_0/fc_w1"
  input: "target_net_0/fc_w1/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/fc_w1/read"
  op: "Identity"
  input: "target_net_0/fc_w1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
}
node {
  name: "target_net_0/fc_b1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/fc_b1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_b1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/fc_b1/Assign"
  op: "Assign"
  input: "target_net_0/fc_b1"
  input: "target_net_0/fc_b1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/fc_b1/read"
  op: "Identity"
  input: "target_net_0/fc_b1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_b1"
      }
    }
  }
}
node {
  name: "target_net_0/MatMul"
  op: "MatMul"
  input: "target_net_0/Reshape"
  input: "target_net_0/fc_w1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "target_net_0/add_3"
  op: "AddV2"
  input: "target_net_0/MatMul"
  input: "target_net_0/fc_b1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_0/Relu_3"
  op: "Relu"
  input: "target_net_0/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_0/q_w/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "target_net_0/q_w/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/q_w/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "target_net_0/q_w/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "target_net_0/q_w/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "target_net_0/q_w/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "target_net_0/q_w/Initializer/truncated_normal/TruncatedNormal"
  input: "target_net_0/q_w/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
}
node {
  name: "target_net_0/q_w/Initializer/truncated_normal"
  op: "Add"
  input: "target_net_0/q_w/Initializer/truncated_normal/mul"
  input: "target_net_0/q_w/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
}
node {
  name: "target_net_0/q_w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/q_w/Assign"
  op: "Assign"
  input: "target_net_0/q_w"
  input: "target_net_0/q_w/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/q_w/read"
  op: "Identity"
  input: "target_net_0/q_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
}
node {
  name: "target_net_0/q_b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/q_b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/q_b/Assign"
  op: "Assign"
  input: "target_net_0/q_b"
  input: "target_net_0/q_b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/q_b/read"
  op: "Identity"
  input: "target_net_0/q_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_b"
      }
    }
  }
}
node {
  name: "target_net_0/matmul_1"
  op: "MatMul"
  input: "target_net_0/Relu_3"
  input: "target_net_0/q_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "target_net_0/add_4"
  op: "AddV2"
  input: "target_net_0/matmul_1"
  input: "target_net_0/q_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Max/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Max"
  op: "Max"
  input: "target_net_0/add_4"
  input: "Max/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "mul/x"
  input: "Max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "sub/x"
  input: "done"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "mul"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add"
  op: "AddV2"
  input: "r"
  input: "mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_2"
  op: "Mul"
  input: "a"
  input: "eval_net_0/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum"
  op: "Sum"
  input: "mul_2"
  input: "Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "SquaredDifference"
  op: "SquaredDifference"
  input: "add"
  input: "Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "SquaredDifference"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape"
  op: "Shape"
  input: "SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/Mean_grad/Reshape"
  input: "gradients/Mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape_1"
  op: "Shape"
  input: "SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/Mean_grad/Shape_1"
  input: "gradients/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/Mean_grad/Shape_2"
  input: "gradients/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/Mean_grad/Prod_1"
  input: "gradients/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Mean_grad/Prod"
  input: "gradients/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/Mean_grad/Tile"
  input: "gradients/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/Mean_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/SquaredDifference_grad/scalar"
  input: "gradients/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/sub"
  op: "Sub"
  input: "add"
  input: "Sum"
  input: "^gradients/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/SquaredDifference_grad/Mul"
  input: "gradients/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/SquaredDifference_grad/Shape"
  input: "gradients/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/SquaredDifference_grad/mul_1"
  input: "gradients/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/SquaredDifference_grad/Sum"
  input: "gradients/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/SquaredDifference_grad/mul_1"
  input: "gradients/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/SquaredDifference_grad/Sum_1"
  input: "gradients/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/SquaredDifference_grad/Neg"
  input: "^gradients/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/SquaredDifference_grad/Reshape"
  input: "^gradients/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/SquaredDifference_grad/Neg"
  input: "^gradients/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/add_grad/Shape"
  op: "Shape"
  input: "r"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/Shape_1"
  op: "Shape"
  input: "mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_grad/Shape"
  input: "gradients/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/Sum"
  op: "Sum"
  input: "gradients/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_grad/Sum"
  input: "gradients/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_grad/Sum_1"
  input: "gradients/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_grad/Reshape"
  input: "^gradients/add_grad/Reshape_1"
}
node {
  name: "gradients/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_grad/Reshape"
  input: "^gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_grad/Reshape_1"
  input: "^gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Shape"
  op: "Shape"
  input: "mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Sum_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/SquaredDifference_grad/tuple/control_dependency_1"
  input: "gradients/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_1_grad/Shape"
  op: "Shape"
  input: "mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_1_grad/Shape_1"
  op: "Shape"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_1_grad/Shape"
  input: "gradients/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/add_grad/tuple/control_dependency_1"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/mul_1_grad/Mul"
  input: "gradients/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_1_grad/Sum"
  input: "gradients/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_1_grad/Mul_1"
  op: "Mul"
  input: "mul"
  input: "gradients/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_1_grad/Mul_1"
  input: "gradients/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mul_1_grad/Sum_1"
  input: "gradients/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_1_grad/Reshape"
  input: "^gradients/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_1_grad/Reshape"
  input: "^gradients/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_1_grad/Reshape_1"
  input: "^gradients/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/mul_2_grad/Shape"
  op: "Shape"
  input: "a"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_2_grad/Shape_1"
  op: "Shape"
  input: "eval_net_0/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_2_grad/Shape"
  input: "gradients/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/Sum_grad/BroadcastTo"
  input: "eval_net_0/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/mul_2_grad/Mul"
  input: "gradients/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_2_grad/Sum"
  input: "gradients/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_2_grad/Mul_1"
  op: "Mul"
  input: "a"
  input: "gradients/Sum_grad/BroadcastTo"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_2_grad/Mul_1"
  input: "gradients/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mul_2_grad/Sum_1"
  input: "gradients/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_2_grad/Reshape"
  input: "^gradients/mul_2_grad/Reshape_1"
}
node {
  name: "gradients/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_2_grad/Reshape"
  input: "^gradients/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_2_grad/Reshape_1"
  input: "^gradients/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Shape"
  op: "Shape"
  input: "mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_grad/Shape_1"
  op: "Shape"
  input: "Max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_grad/Shape"
  input: "gradients/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_grad/Mul"
  op: "Mul"
  input: "gradients/mul_1_grad/tuple/control_dependency"
  input: "Max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mul_grad/Sum"
  op: "Sum"
  input: "gradients/mul_grad/Mul"
  input: "gradients/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_grad/Sum"
  input: "gradients/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_grad/Mul_1"
  op: "Mul"
  input: "mul/x"
  input: "gradients/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_grad/Mul_1"
  input: "gradients/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mul_grad/Sum_1"
  input: "gradients/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_grad/Reshape"
  input: "^gradients/mul_grad/Reshape_1"
}
node {
  name: "gradients/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_grad/Reshape"
  input: "^gradients/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_grad/Reshape_1"
  input: "^gradients/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/eval_net_0/add_4_grad/Shape"
  op: "Shape"
  input: "eval_net_0/matmul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_4_grad/Shape_1"
  op: "Shape"
  input: "eval_net_0/q_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/eval_net_0/add_4_grad/Shape"
  input: "gradients/eval_net_0/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/mul_2_grad/tuple/control_dependency_1"
  input: "gradients/eval_net_0/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/eval_net_0/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/eval_net_0/add_4_grad/Sum"
  input: "gradients/eval_net_0/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_2_grad/tuple/control_dependency_1"
  input: "gradients/eval_net_0/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/eval_net_0/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/eval_net_0/add_4_grad/Sum_1"
  input: "gradients/eval_net_0/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/eval_net_0/add_4_grad/Reshape"
  input: "^gradients/eval_net_0/add_4_grad/Reshape_1"
}
node {
  name: "gradients/eval_net_0/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/eval_net_0/add_4_grad/Reshape"
  input: "^gradients/eval_net_0/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/eval_net_0/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/eval_net_0/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/eval_net_0/add_4_grad/Reshape_1"
  input: "^gradients/eval_net_0/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/eval_net_0/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Max_grad/Shape"
  op: "Shape"
  input: "target_net_0/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Max_grad/Shape_1"
  op: "Shape"
  input: "Max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Max_grad/Equal"
  op: "Equal"
  input: "Max"
  input: "target_net_0/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Max_grad/Cast"
  op: "Cast"
  input: "gradients/Max_grad/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Max_grad/Sum"
  op: "Sum"
  input: "gradients/Max_grad/Cast"
  input: "Max/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Max_grad/Reshape"
  op: "Reshape"
  input: "gradients/Max_grad/Sum"
  input: "gradients/Max_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Max_grad/truediv"
  op: "RealDiv"
  input: "gradients/Max_grad/Cast"
  input: "gradients/Max_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Max_grad/mul"
  op: "Mul"
  input: "gradients/Max_grad/truediv"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/eval_net_0/matmul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/eval_net_0/add_4_grad/tuple/control_dependency"
  input: "eval_net_0/q_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/eval_net_0/matmul_1_grad/MatMul_1"
  op: "MatMul"
  input: "eval_net_0/Relu_3"
  input: "gradients/eval_net_0/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/eval_net_0/matmul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/eval_net_0/matmul_1_grad/MatMul"
  input: "^gradients/eval_net_0/matmul_1_grad/MatMul_1"
}
node {
  name: "gradients/eval_net_0/matmul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/eval_net_0/matmul_1_grad/MatMul"
  input: "^gradients/eval_net_0/matmul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/eval_net_0/matmul_1_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/eval_net_0/matmul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/eval_net_0/matmul_1_grad/MatMul_1"
  input: "^gradients/eval_net_0/matmul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/eval_net_0/matmul_1_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/target_net_0/add_4_grad/Shape"
  op: "Shape"
  input: "target_net_0/matmul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_4_grad/Shape_1"
  op: "Shape"
  input: "target_net_0/q_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/target_net_0/add_4_grad/Shape"
  input: "gradients/target_net_0/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/Max_grad/mul"
  input: "gradients/target_net_0/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/target_net_0/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/target_net_0/add_4_grad/Sum"
  input: "gradients/target_net_0/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/Max_grad/mul"
  input: "gradients/target_net_0/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/target_net_0/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/target_net_0/add_4_grad/Sum_1"
  input: "gradients/target_net_0/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/target_net_0/add_4_grad/Reshape"
  input: "^gradients/target_net_0/add_4_grad/Reshape_1"
}
node {
  name: "gradients/target_net_0/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/target_net_0/add_4_grad/Reshape"
  input: "^gradients/target_net_0/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/target_net_0/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/target_net_0/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/target_net_0/add_4_grad/Reshape_1"
  input: "^gradients/target_net_0/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/target_net_0/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/eval_net_0/Relu_3_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/eval_net_0/matmul_1_grad/tuple/control_dependency"
  input: "eval_net_0/Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/target_net_0/matmul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/target_net_0/add_4_grad/tuple/control_dependency"
  input: "target_net_0/q_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/target_net_0/matmul_1_grad/MatMul_1"
  op: "MatMul"
  input: "target_net_0/Relu_3"
  input: "gradients/target_net_0/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/target_net_0/matmul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/target_net_0/matmul_1_grad/MatMul"
  input: "^gradients/target_net_0/matmul_1_grad/MatMul_1"
}
node {
  name: "gradients/target_net_0/matmul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/target_net_0/matmul_1_grad/MatMul"
  input: "^gradients/target_net_0/matmul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/target_net_0/matmul_1_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/target_net_0/matmul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/target_net_0/matmul_1_grad/MatMul_1"
  input: "^gradients/target_net_0/matmul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/target_net_0/matmul_1_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/eval_net_0/add_3_grad/Shape"
  op: "Shape"
  input: "eval_net_0/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_3_grad/Shape_1"
  op: "Shape"
  input: "eval_net_0/fc_b1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/eval_net_0/add_3_grad/Shape"
  input: "gradients/eval_net_0/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_3_grad/Sum"
  op: "Sum"
  input: "gradients/eval_net_0/Relu_3_grad/ReluGrad"
  input: "gradients/eval_net_0/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/eval_net_0/add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/eval_net_0/add_3_grad/Sum"
  input: "gradients/eval_net_0/add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/eval_net_0/Relu_3_grad/ReluGrad"
  input: "gradients/eval_net_0/add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/eval_net_0/add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/eval_net_0/add_3_grad/Sum_1"
  input: "gradients/eval_net_0/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/eval_net_0/add_3_grad/Reshape"
  input: "^gradients/eval_net_0/add_3_grad/Reshape_1"
}
node {
  name: "gradients/eval_net_0/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/eval_net_0/add_3_grad/Reshape"
  input: "^gradients/eval_net_0/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/eval_net_0/add_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/eval_net_0/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/eval_net_0/add_3_grad/Reshape_1"
  input: "^gradients/eval_net_0/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/eval_net_0/add_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/target_net_0/Relu_3_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/target_net_0/matmul_1_grad/tuple/control_dependency"
  input: "target_net_0/Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/eval_net_0/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/eval_net_0/add_3_grad/tuple/control_dependency"
  input: "eval_net_0/fc_w1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/eval_net_0/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "eval_net_0/Reshape"
  input: "gradients/eval_net_0/add_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/eval_net_0/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/eval_net_0/MatMul_grad/MatMul"
  input: "^gradients/eval_net_0/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/eval_net_0/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/eval_net_0/MatMul_grad/MatMul"
  input: "^gradients/eval_net_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/eval_net_0/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/eval_net_0/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/eval_net_0/MatMul_grad/MatMul_1"
  input: "^gradients/eval_net_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/eval_net_0/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/target_net_0/add_3_grad/Shape"
  op: "Shape"
  input: "target_net_0/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_3_grad/Shape_1"
  op: "Shape"
  input: "target_net_0/fc_b1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/target_net_0/add_3_grad/Shape"
  input: "gradients/target_net_0/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_3_grad/Sum"
  op: "Sum"
  input: "gradients/target_net_0/Relu_3_grad/ReluGrad"
  input: "gradients/target_net_0/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/target_net_0/add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/target_net_0/add_3_grad/Sum"
  input: "gradients/target_net_0/add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/target_net_0/Relu_3_grad/ReluGrad"
  input: "gradients/target_net_0/add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/target_net_0/add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/target_net_0/add_3_grad/Sum_1"
  input: "gradients/target_net_0/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/target_net_0/add_3_grad/Reshape"
  input: "^gradients/target_net_0/add_3_grad/Reshape_1"
}
node {
  name: "gradients/target_net_0/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/target_net_0/add_3_grad/Reshape"
  input: "^gradients/target_net_0/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/target_net_0/add_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/target_net_0/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/target_net_0/add_3_grad/Reshape_1"
  input: "^gradients/target_net_0/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/target_net_0/add_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/eval_net_0/Reshape_grad/Shape"
  op: "Shape"
  input: "eval_net_0/Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/eval_net_0/MatMul_grad/tuple/control_dependency"
  input: "gradients/eval_net_0/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/target_net_0/add_3_grad/tuple/control_dependency"
  input: "target_net_0/fc_w1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/target_net_0/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "target_net_0/Reshape"
  input: "gradients/target_net_0/add_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/target_net_0/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/target_net_0/MatMul_grad/MatMul"
  input: "^gradients/target_net_0/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/target_net_0/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/target_net_0/MatMul_grad/MatMul"
  input: "^gradients/target_net_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/target_net_0/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/target_net_0/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/target_net_0/MatMul_grad/MatMul_1"
  input: "^gradients/target_net_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/target_net_0/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/eval_net_0/Relu_2_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/eval_net_0/Reshape_grad/Reshape"
  input: "eval_net_0/Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/target_net_0/Reshape_grad/Shape"
  op: "Shape"
  input: "target_net_0/Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/target_net_0/MatMul_grad/tuple/control_dependency"
  input: "gradients/target_net_0/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_2_grad/Shape"
  op: "Shape"
  input: "eval_net_0/Conv2D_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_2_grad/Shape_1"
  op: "Shape"
  input: "eval_net_0/b3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/eval_net_0/add_2_grad/Shape"
  input: "gradients/eval_net_0/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/eval_net_0/Relu_2_grad/ReluGrad"
  input: "gradients/eval_net_0/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/eval_net_0/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/eval_net_0/add_2_grad/Sum"
  input: "gradients/eval_net_0/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/eval_net_0/Relu_2_grad/ReluGrad"
  input: "gradients/eval_net_0/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/eval_net_0/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/eval_net_0/add_2_grad/Sum_1"
  input: "gradients/eval_net_0/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/eval_net_0/add_2_grad/Reshape"
  input: "^gradients/eval_net_0/add_2_grad/Reshape_1"
}
node {
  name: "gradients/eval_net_0/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/eval_net_0/add_2_grad/Reshape"
  input: "^gradients/eval_net_0/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/eval_net_0/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/eval_net_0/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/eval_net_0/add_2_grad/Reshape_1"
  input: "^gradients/eval_net_0/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/eval_net_0/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/target_net_0/Relu_2_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/target_net_0/Reshape_grad/Reshape"
  input: "target_net_0/Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/eval_net_0/Conv2D_2_grad/ShapeN"
  op: "ShapeN"
  input: "eval_net_0/Relu_1"
  input: "eval_net_0/w3/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/Conv2D_2_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/eval_net_0/Conv2D_2_grad/ShapeN"
  input: "eval_net_0/w3/read"
  input: "gradients/eval_net_0/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/eval_net_0/Conv2D_2_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "eval_net_0/Relu_1"
  input: "gradients/eval_net_0/Conv2D_2_grad/ShapeN:1"
  input: "gradients/eval_net_0/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/eval_net_0/Conv2D_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/eval_net_0/Conv2D_2_grad/Conv2DBackpropFilter"
  input: "^gradients/eval_net_0/Conv2D_2_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/eval_net_0/Conv2D_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/eval_net_0/Conv2D_2_grad/Conv2DBackpropInput"
  input: "^gradients/eval_net_0/Conv2D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/eval_net_0/Conv2D_2_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/eval_net_0/Conv2D_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/eval_net_0/Conv2D_2_grad/Conv2DBackpropFilter"
  input: "^gradients/eval_net_0/Conv2D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/eval_net_0/Conv2D_2_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/target_net_0/add_2_grad/Shape"
  op: "Shape"
  input: "target_net_0/Conv2D_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_2_grad/Shape_1"
  op: "Shape"
  input: "target_net_0/b3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/target_net_0/add_2_grad/Shape"
  input: "gradients/target_net_0/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/target_net_0/Relu_2_grad/ReluGrad"
  input: "gradients/target_net_0/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/target_net_0/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/target_net_0/add_2_grad/Sum"
  input: "gradients/target_net_0/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/target_net_0/Relu_2_grad/ReluGrad"
  input: "gradients/target_net_0/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/target_net_0/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/target_net_0/add_2_grad/Sum_1"
  input: "gradients/target_net_0/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/target_net_0/add_2_grad/Reshape"
  input: "^gradients/target_net_0/add_2_grad/Reshape_1"
}
node {
  name: "gradients/target_net_0/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/target_net_0/add_2_grad/Reshape"
  input: "^gradients/target_net_0/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/target_net_0/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/target_net_0/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/target_net_0/add_2_grad/Reshape_1"
  input: "^gradients/target_net_0/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/target_net_0/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/eval_net_0/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/eval_net_0/Conv2D_2_grad/tuple/control_dependency"
  input: "eval_net_0/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/target_net_0/Conv2D_2_grad/ShapeN"
  op: "ShapeN"
  input: "target_net_0/Relu_1"
  input: "target_net_0/w3/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/Conv2D_2_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/target_net_0/Conv2D_2_grad/ShapeN"
  input: "target_net_0/w3/read"
  input: "gradients/target_net_0/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/target_net_0/Conv2D_2_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "target_net_0/Relu_1"
  input: "gradients/target_net_0/Conv2D_2_grad/ShapeN:1"
  input: "gradients/target_net_0/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/target_net_0/Conv2D_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/target_net_0/Conv2D_2_grad/Conv2DBackpropFilter"
  input: "^gradients/target_net_0/Conv2D_2_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/target_net_0/Conv2D_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/target_net_0/Conv2D_2_grad/Conv2DBackpropInput"
  input: "^gradients/target_net_0/Conv2D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/target_net_0/Conv2D_2_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/target_net_0/Conv2D_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/target_net_0/Conv2D_2_grad/Conv2DBackpropFilter"
  input: "^gradients/target_net_0/Conv2D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/target_net_0/Conv2D_2_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/eval_net_0/add_1_grad/Shape"
  op: "Shape"
  input: "eval_net_0/Conv2D_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_1_grad/Shape_1"
  op: "Shape"
  input: "eval_net_0/b2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/eval_net_0/add_1_grad/Shape"
  input: "gradients/eval_net_0/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/eval_net_0/Relu_1_grad/ReluGrad"
  input: "gradients/eval_net_0/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/eval_net_0/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/eval_net_0/add_1_grad/Sum"
  input: "gradients/eval_net_0/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/eval_net_0/Relu_1_grad/ReluGrad"
  input: "gradients/eval_net_0/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/eval_net_0/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/eval_net_0/add_1_grad/Sum_1"
  input: "gradients/eval_net_0/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/eval_net_0/add_1_grad/Reshape"
  input: "^gradients/eval_net_0/add_1_grad/Reshape_1"
}
node {
  name: "gradients/eval_net_0/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/eval_net_0/add_1_grad/Reshape"
  input: "^gradients/eval_net_0/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/eval_net_0/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/eval_net_0/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/eval_net_0/add_1_grad/Reshape_1"
  input: "^gradients/eval_net_0/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/eval_net_0/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/target_net_0/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/target_net_0/Conv2D_2_grad/tuple/control_dependency"
  input: "target_net_0/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/eval_net_0/Conv2D_1_grad/ShapeN"
  op: "ShapeN"
  input: "eval_net_0/Relu"
  input: "eval_net_0/w2/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/Conv2D_1_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/eval_net_0/Conv2D_1_grad/ShapeN"
  input: "eval_net_0/w2/read"
  input: "gradients/eval_net_0/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/eval_net_0/Conv2D_1_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "eval_net_0/Relu"
  input: "gradients/eval_net_0/Conv2D_1_grad/ShapeN:1"
  input: "gradients/eval_net_0/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/eval_net_0/Conv2D_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/eval_net_0/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^gradients/eval_net_0/Conv2D_1_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/eval_net_0/Conv2D_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/eval_net_0/Conv2D_1_grad/Conv2DBackpropInput"
  input: "^gradients/eval_net_0/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/eval_net_0/Conv2D_1_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/eval_net_0/Conv2D_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/eval_net_0/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^gradients/eval_net_0/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/eval_net_0/Conv2D_1_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/target_net_0/add_1_grad/Shape"
  op: "Shape"
  input: "target_net_0/Conv2D_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_1_grad/Shape_1"
  op: "Shape"
  input: "target_net_0/b2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/target_net_0/add_1_grad/Shape"
  input: "gradients/target_net_0/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/target_net_0/Relu_1_grad/ReluGrad"
  input: "gradients/target_net_0/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/target_net_0/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/target_net_0/add_1_grad/Sum"
  input: "gradients/target_net_0/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/target_net_0/Relu_1_grad/ReluGrad"
  input: "gradients/target_net_0/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/target_net_0/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/target_net_0/add_1_grad/Sum_1"
  input: "gradients/target_net_0/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/target_net_0/add_1_grad/Reshape"
  input: "^gradients/target_net_0/add_1_grad/Reshape_1"
}
node {
  name: "gradients/target_net_0/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/target_net_0/add_1_grad/Reshape"
  input: "^gradients/target_net_0/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/target_net_0/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/target_net_0/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/target_net_0/add_1_grad/Reshape_1"
  input: "^gradients/target_net_0/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/target_net_0/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/eval_net_0/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/eval_net_0/Conv2D_1_grad/tuple/control_dependency"
  input: "eval_net_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/target_net_0/Conv2D_1_grad/ShapeN"
  op: "ShapeN"
  input: "target_net_0/Relu"
  input: "target_net_0/w2/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/Conv2D_1_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/target_net_0/Conv2D_1_grad/ShapeN"
  input: "target_net_0/w2/read"
  input: "gradients/target_net_0/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/target_net_0/Conv2D_1_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "target_net_0/Relu"
  input: "gradients/target_net_0/Conv2D_1_grad/ShapeN:1"
  input: "gradients/target_net_0/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/target_net_0/Conv2D_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/target_net_0/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^gradients/target_net_0/Conv2D_1_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/target_net_0/Conv2D_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/target_net_0/Conv2D_1_grad/Conv2DBackpropInput"
  input: "^gradients/target_net_0/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/target_net_0/Conv2D_1_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/target_net_0/Conv2D_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/target_net_0/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^gradients/target_net_0/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/target_net_0/Conv2D_1_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/eval_net_0/add_grad/Shape"
  op: "Shape"
  input: "eval_net_0/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_grad/Shape_1"
  op: "Shape"
  input: "eval_net_0/b1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/eval_net_0/add_grad/Shape"
  input: "gradients/eval_net_0/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_grad/Sum"
  op: "Sum"
  input: "gradients/eval_net_0/Relu_grad/ReluGrad"
  input: "gradients/eval_net_0/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/eval_net_0/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/eval_net_0/add_grad/Sum"
  input: "gradients/eval_net_0/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/eval_net_0/Relu_grad/ReluGrad"
  input: "gradients/eval_net_0/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/eval_net_0/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/eval_net_0/add_grad/Sum_1"
  input: "gradients/eval_net_0/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/eval_net_0/add_grad/Reshape"
  input: "^gradients/eval_net_0/add_grad/Reshape_1"
}
node {
  name: "gradients/eval_net_0/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/eval_net_0/add_grad/Reshape"
  input: "^gradients/eval_net_0/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/eval_net_0/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/eval_net_0/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/eval_net_0/add_grad/Reshape_1"
  input: "^gradients/eval_net_0/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/eval_net_0/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/target_net_0/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/target_net_0/Conv2D_1_grad/tuple/control_dependency"
  input: "target_net_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/eval_net_0/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "s"
  input: "eval_net_0/w1/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/eval_net_0/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/eval_net_0/Conv2D_grad/ShapeN"
  input: "eval_net_0/w1/read"
  input: "gradients/eval_net_0/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/eval_net_0/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "s"
  input: "gradients/eval_net_0/Conv2D_grad/ShapeN:1"
  input: "gradients/eval_net_0/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/eval_net_0/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/eval_net_0/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/eval_net_0/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/eval_net_0/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/eval_net_0/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/eval_net_0/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/eval_net_0/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/eval_net_0/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/eval_net_0/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/eval_net_0/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/eval_net_0/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/target_net_0/add_grad/Shape"
  op: "Shape"
  input: "target_net_0/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_grad/Shape_1"
  op: "Shape"
  input: "target_net_0/b1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/target_net_0/add_grad/Shape"
  input: "gradients/target_net_0/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_grad/Sum"
  op: "Sum"
  input: "gradients/target_net_0/Relu_grad/ReluGrad"
  input: "gradients/target_net_0/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/target_net_0/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/target_net_0/add_grad/Sum"
  input: "gradients/target_net_0/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/target_net_0/Relu_grad/ReluGrad"
  input: "gradients/target_net_0/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/target_net_0/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/target_net_0/add_grad/Sum_1"
  input: "gradients/target_net_0/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/target_net_0/add_grad/Reshape"
  input: "^gradients/target_net_0/add_grad/Reshape_1"
}
node {
  name: "gradients/target_net_0/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/target_net_0/add_grad/Reshape"
  input: "^gradients/target_net_0/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/target_net_0/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/target_net_0/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/target_net_0/add_grad/Reshape_1"
  input: "^gradients/target_net_0/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/target_net_0/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/target_net_0/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "s_"
  input: "target_net_0/w1/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/target_net_0/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/target_net_0/Conv2D_grad/ShapeN"
  input: "target_net_0/w1/read"
  input: "gradients/target_net_0/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/target_net_0/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "s_"
  input: "gradients/target_net_0/Conv2D_grad/ShapeN:1"
  input: "gradients/target_net_0/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/target_net_0/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/target_net_0/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/target_net_0/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/target_net_0/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/target_net_0/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/target_net_0/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/target_net_0/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/target_net_0/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/target_net_0/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/target_net_0/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/target_net_0/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
}
node {
  name: "eval_net_0/w1/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "eval_net_0/w1/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/w1/Adam/Initializer/zeros"
  op: "Fill"
  input: "eval_net_0/w1/Adam/Initializer/zeros/shape_as_tensor"
  input: "eval_net_0/w1/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "eval_net_0/w1/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/w1/Adam/Assign"
  op: "Assign"
  input: "eval_net_0/w1/Adam"
  input: "eval_net_0/w1/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/w1/Adam/read"
  op: "Identity"
  input: "eval_net_0/w1/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w1"
      }
    }
  }
}
node {
  name: "eval_net_0/w1/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "eval_net_0/w1/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/w1/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "eval_net_0/w1/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "eval_net_0/w1/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "eval_net_0/w1/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/w1/Adam_1/Assign"
  op: "Assign"
  input: "eval_net_0/w1/Adam_1"
  input: "eval_net_0/w1/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/w1/Adam_1/read"
  op: "Identity"
  input: "eval_net_0/w1/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w1"
      }
    }
  }
}
node {
  name: "eval_net_0/b1/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/b1/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/b1/Adam/Assign"
  op: "Assign"
  input: "eval_net_0/b1/Adam"
  input: "eval_net_0/b1/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/b1/Adam/read"
  op: "Identity"
  input: "eval_net_0/b1/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
}
node {
  name: "eval_net_0/b1/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/b1/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/b1/Adam_1/Assign"
  op: "Assign"
  input: "eval_net_0/b1/Adam_1"
  input: "eval_net_0/b1/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/b1/Adam_1/read"
  op: "Identity"
  input: "eval_net_0/b1/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
}
node {
  name: "eval_net_0/w2/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "eval_net_0/w2/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/w2/Adam/Initializer/zeros"
  op: "Fill"
  input: "eval_net_0/w2/Adam/Initializer/zeros/shape_as_tensor"
  input: "eval_net_0/w2/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w2"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "eval_net_0/w2/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/w2/Adam/Assign"
  op: "Assign"
  input: "eval_net_0/w2/Adam"
  input: "eval_net_0/w2/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/w2/Adam/read"
  op: "Identity"
  input: "eval_net_0/w2/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w2"
      }
    }
  }
}
node {
  name: "eval_net_0/w2/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "eval_net_0/w2/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/w2/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "eval_net_0/w2/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "eval_net_0/w2/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w2"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "eval_net_0/w2/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/w2/Adam_1/Assign"
  op: "Assign"
  input: "eval_net_0/w2/Adam_1"
  input: "eval_net_0/w2/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/w2/Adam_1/read"
  op: "Identity"
  input: "eval_net_0/w2/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w2"
      }
    }
  }
}
node {
  name: "eval_net_0/b2/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/b2/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/b2/Adam/Assign"
  op: "Assign"
  input: "eval_net_0/b2/Adam"
  input: "eval_net_0/b2/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/b2/Adam/read"
  op: "Identity"
  input: "eval_net_0/b2/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b2"
      }
    }
  }
}
node {
  name: "eval_net_0/b2/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/b2/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/b2/Adam_1/Assign"
  op: "Assign"
  input: "eval_net_0/b2/Adam_1"
  input: "eval_net_0/b2/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/b2/Adam_1/read"
  op: "Identity"
  input: "eval_net_0/b2/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b2"
      }
    }
  }
}
node {
  name: "eval_net_0/w3/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "eval_net_0/w3/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/w3/Adam/Initializer/zeros"
  op: "Fill"
  input: "eval_net_0/w3/Adam/Initializer/zeros/shape_as_tensor"
  input: "eval_net_0/w3/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w3"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "eval_net_0/w3/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/w3/Adam/Assign"
  op: "Assign"
  input: "eval_net_0/w3/Adam"
  input: "eval_net_0/w3/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/w3/Adam/read"
  op: "Identity"
  input: "eval_net_0/w3/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w3"
      }
    }
  }
}
node {
  name: "eval_net_0/w3/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "eval_net_0/w3/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/w3/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "eval_net_0/w3/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "eval_net_0/w3/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w3"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "eval_net_0/w3/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/w3/Adam_1/Assign"
  op: "Assign"
  input: "eval_net_0/w3/Adam_1"
  input: "eval_net_0/w3/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/w3/Adam_1/read"
  op: "Identity"
  input: "eval_net_0/w3/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w3"
      }
    }
  }
}
node {
  name: "eval_net_0/b3/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/b3/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/b3/Adam/Assign"
  op: "Assign"
  input: "eval_net_0/b3/Adam"
  input: "eval_net_0/b3/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/b3/Adam/read"
  op: "Identity"
  input: "eval_net_0/b3/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b3"
      }
    }
  }
}
node {
  name: "eval_net_0/b3/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/b3/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/b3/Adam_1/Assign"
  op: "Assign"
  input: "eval_net_0/b3/Adam_1"
  input: "eval_net_0/b3/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/b3/Adam_1/read"
  op: "Identity"
  input: "eval_net_0/b3/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b3"
      }
    }
  }
}
node {
  name: "eval_net_0/fc_w1/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\207\001\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "eval_net_0/fc_w1/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/fc_w1/Adam/Initializer/zeros"
  op: "Fill"
  input: "eval_net_0/fc_w1/Adam/Initializer/zeros/shape_as_tensor"
  input: "eval_net_0/fc_w1/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "eval_net_0/fc_w1/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100096
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/fc_w1/Adam/Assign"
  op: "Assign"
  input: "eval_net_0/fc_w1/Adam"
  input: "eval_net_0/fc_w1/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/fc_w1/Adam/read"
  op: "Identity"
  input: "eval_net_0/fc_w1/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_w1"
      }
    }
  }
}
node {
  name: "eval_net_0/fc_w1/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\207\001\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "eval_net_0/fc_w1/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/fc_w1/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "eval_net_0/fc_w1/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "eval_net_0/fc_w1/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "eval_net_0/fc_w1/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100096
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/fc_w1/Adam_1/Assign"
  op: "Assign"
  input: "eval_net_0/fc_w1/Adam_1"
  input: "eval_net_0/fc_w1/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/fc_w1/Adam_1/read"
  op: "Identity"
  input: "eval_net_0/fc_w1/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_w1"
      }
    }
  }
}
node {
  name: "eval_net_0/fc_b1/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/fc_b1/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_b1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/fc_b1/Adam/Assign"
  op: "Assign"
  input: "eval_net_0/fc_b1/Adam"
  input: "eval_net_0/fc_b1/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/fc_b1/Adam/read"
  op: "Identity"
  input: "eval_net_0/fc_b1/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_b1"
      }
    }
  }
}
node {
  name: "eval_net_0/fc_b1/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/fc_b1/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_b1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/fc_b1/Adam_1/Assign"
  op: "Assign"
  input: "eval_net_0/fc_b1/Adam_1"
  input: "eval_net_0/fc_b1/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/fc_b1/Adam_1/read"
  op: "Identity"
  input: "eval_net_0/fc_b1/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_b1"
      }
    }
  }
}
node {
  name: "eval_net_0/q_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "eval_net_0/q_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/q_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "eval_net_0/q_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "eval_net_0/q_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "eval_net_0/q_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/q_w/Adam/Assign"
  op: "Assign"
  input: "eval_net_0/q_w/Adam"
  input: "eval_net_0/q_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/q_w/Adam/read"
  op: "Identity"
  input: "eval_net_0/q_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_w"
      }
    }
  }
}
node {
  name: "eval_net_0/q_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "eval_net_0/q_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/q_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "eval_net_0/q_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "eval_net_0/q_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "eval_net_0/q_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/q_w/Adam_1/Assign"
  op: "Assign"
  input: "eval_net_0/q_w/Adam_1"
  input: "eval_net_0/q_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/q_w/Adam_1/read"
  op: "Identity"
  input: "eval_net_0/q_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_w"
      }
    }
  }
}
node {
  name: "eval_net_0/q_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/q_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/q_b/Adam/Assign"
  op: "Assign"
  input: "eval_net_0/q_b/Adam"
  input: "eval_net_0/q_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/q_b/Adam/read"
  op: "Identity"
  input: "eval_net_0/q_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_b"
      }
    }
  }
}
node {
  name: "eval_net_0/q_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_0/q_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_0/q_b/Adam_1/Assign"
  op: "Assign"
  input: "eval_net_0/q_b/Adam_1"
  input: "eval_net_0/q_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_0/q_b/Adam_1/read"
  op: "Identity"
  input: "eval_net_0/q_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_b"
      }
    }
  }
}
node {
  name: "target_net_0/w1/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "target_net_0/w1/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/w1/Adam/Initializer/zeros"
  op: "Fill"
  input: "target_net_0/w1/Adam/Initializer/zeros/shape_as_tensor"
  input: "target_net_0/w1/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "target_net_0/w1/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/w1/Adam/Assign"
  op: "Assign"
  input: "target_net_0/w1/Adam"
  input: "target_net_0/w1/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/w1/Adam/read"
  op: "Identity"
  input: "target_net_0/w1/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
}
node {
  name: "target_net_0/w1/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "target_net_0/w1/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/w1/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "target_net_0/w1/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "target_net_0/w1/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "target_net_0/w1/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/w1/Adam_1/Assign"
  op: "Assign"
  input: "target_net_0/w1/Adam_1"
  input: "target_net_0/w1/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/w1/Adam_1/read"
  op: "Identity"
  input: "target_net_0/w1/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
}
node {
  name: "target_net_0/b1/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/b1/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/b1/Adam/Assign"
  op: "Assign"
  input: "target_net_0/b1/Adam"
  input: "target_net_0/b1/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/b1/Adam/read"
  op: "Identity"
  input: "target_net_0/b1/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b1"
      }
    }
  }
}
node {
  name: "target_net_0/b1/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/b1/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/b1/Adam_1/Assign"
  op: "Assign"
  input: "target_net_0/b1/Adam_1"
  input: "target_net_0/b1/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/b1/Adam_1/read"
  op: "Identity"
  input: "target_net_0/b1/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b1"
      }
    }
  }
}
node {
  name: "target_net_0/w2/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "target_net_0/w2/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/w2/Adam/Initializer/zeros"
  op: "Fill"
  input: "target_net_0/w2/Adam/Initializer/zeros/shape_as_tensor"
  input: "target_net_0/w2/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "target_net_0/w2/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/w2/Adam/Assign"
  op: "Assign"
  input: "target_net_0/w2/Adam"
  input: "target_net_0/w2/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/w2/Adam/read"
  op: "Identity"
  input: "target_net_0/w2/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
}
node {
  name: "target_net_0/w2/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "target_net_0/w2/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/w2/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "target_net_0/w2/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "target_net_0/w2/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "target_net_0/w2/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/w2/Adam_1/Assign"
  op: "Assign"
  input: "target_net_0/w2/Adam_1"
  input: "target_net_0/w2/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/w2/Adam_1/read"
  op: "Identity"
  input: "target_net_0/w2/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
}
node {
  name: "target_net_0/b2/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/b2/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/b2/Adam/Assign"
  op: "Assign"
  input: "target_net_0/b2/Adam"
  input: "target_net_0/b2/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/b2/Adam/read"
  op: "Identity"
  input: "target_net_0/b2/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b2"
      }
    }
  }
}
node {
  name: "target_net_0/b2/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/b2/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/b2/Adam_1/Assign"
  op: "Assign"
  input: "target_net_0/b2/Adam_1"
  input: "target_net_0/b2/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/b2/Adam_1/read"
  op: "Identity"
  input: "target_net_0/b2/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b2"
      }
    }
  }
}
node {
  name: "target_net_0/w3/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "target_net_0/w3/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/w3/Adam/Initializer/zeros"
  op: "Fill"
  input: "target_net_0/w3/Adam/Initializer/zeros/shape_as_tensor"
  input: "target_net_0/w3/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "target_net_0/w3/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/w3/Adam/Assign"
  op: "Assign"
  input: "target_net_0/w3/Adam"
  input: "target_net_0/w3/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/w3/Adam/read"
  op: "Identity"
  input: "target_net_0/w3/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
}
node {
  name: "target_net_0/w3/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "target_net_0/w3/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/w3/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "target_net_0/w3/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "target_net_0/w3/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "target_net_0/w3/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/w3/Adam_1/Assign"
  op: "Assign"
  input: "target_net_0/w3/Adam_1"
  input: "target_net_0/w3/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/w3/Adam_1/read"
  op: "Identity"
  input: "target_net_0/w3/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
}
node {
  name: "target_net_0/b3/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/b3/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/b3/Adam/Assign"
  op: "Assign"
  input: "target_net_0/b3/Adam"
  input: "target_net_0/b3/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/b3/Adam/read"
  op: "Identity"
  input: "target_net_0/b3/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b3"
      }
    }
  }
}
node {
  name: "target_net_0/b3/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/b3/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/b3/Adam_1/Assign"
  op: "Assign"
  input: "target_net_0/b3/Adam_1"
  input: "target_net_0/b3/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/b3/Adam_1/read"
  op: "Identity"
  input: "target_net_0/b3/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b3"
      }
    }
  }
}
node {
  name: "target_net_0/fc_w1/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\207\001\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "target_net_0/fc_w1/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/fc_w1/Adam/Initializer/zeros"
  op: "Fill"
  input: "target_net_0/fc_w1/Adam/Initializer/zeros/shape_as_tensor"
  input: "target_net_0/fc_w1/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "target_net_0/fc_w1/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100096
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/fc_w1/Adam/Assign"
  op: "Assign"
  input: "target_net_0/fc_w1/Adam"
  input: "target_net_0/fc_w1/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/fc_w1/Adam/read"
  op: "Identity"
  input: "target_net_0/fc_w1/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
}
node {
  name: "target_net_0/fc_w1/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\207\001\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "target_net_0/fc_w1/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/fc_w1/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "target_net_0/fc_w1/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "target_net_0/fc_w1/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "target_net_0/fc_w1/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100096
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/fc_w1/Adam_1/Assign"
  op: "Assign"
  input: "target_net_0/fc_w1/Adam_1"
  input: "target_net_0/fc_w1/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/fc_w1/Adam_1/read"
  op: "Identity"
  input: "target_net_0/fc_w1/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
}
node {
  name: "target_net_0/fc_b1/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/fc_b1/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_b1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/fc_b1/Adam/Assign"
  op: "Assign"
  input: "target_net_0/fc_b1/Adam"
  input: "target_net_0/fc_b1/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/fc_b1/Adam/read"
  op: "Identity"
  input: "target_net_0/fc_b1/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_b1"
      }
    }
  }
}
node {
  name: "target_net_0/fc_b1/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/fc_b1/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_b1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/fc_b1/Adam_1/Assign"
  op: "Assign"
  input: "target_net_0/fc_b1/Adam_1"
  input: "target_net_0/fc_b1/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/fc_b1/Adam_1/read"
  op: "Identity"
  input: "target_net_0/fc_b1/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_b1"
      }
    }
  }
}
node {
  name: "target_net_0/q_w/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "target_net_0/q_w/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/q_w/Adam/Initializer/zeros"
  op: "Fill"
  input: "target_net_0/q_w/Adam/Initializer/zeros/shape_as_tensor"
  input: "target_net_0/q_w/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "target_net_0/q_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/q_w/Adam/Assign"
  op: "Assign"
  input: "target_net_0/q_w/Adam"
  input: "target_net_0/q_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/q_w/Adam/read"
  op: "Identity"
  input: "target_net_0/q_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
}
node {
  name: "target_net_0/q_w/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "target_net_0/q_w/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/q_w/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "target_net_0/q_w/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "target_net_0/q_w/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "target_net_0/q_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/q_w/Adam_1/Assign"
  op: "Assign"
  input: "target_net_0/q_w/Adam_1"
  input: "target_net_0/q_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/q_w/Adam_1/read"
  op: "Identity"
  input: "target_net_0/q_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
}
node {
  name: "target_net_0/q_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/q_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/q_b/Adam/Assign"
  op: "Assign"
  input: "target_net_0/q_b/Adam"
  input: "target_net_0/q_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/q_b/Adam/read"
  op: "Identity"
  input: "target_net_0/q_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_b"
      }
    }
  }
}
node {
  name: "target_net_0/q_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_0/q_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_0/q_b/Adam_1/Assign"
  op: "Assign"
  input: "target_net_0/q_b/Adam_1"
  input: "target_net_0/q_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_0/q_b/Adam_1/read"
  op: "Identity"
  input: "target_net_0/q_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_b"
      }
    }
  }
}
node {
  name: "Adam/learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam/update_eval_net_0/w1/ApplyAdam"
  op: "ApplyAdam"
  input: "eval_net_0/w1"
  input: "eval_net_0/w1/Adam"
  input: "eval_net_0/w1/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/eval_net_0/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_eval_net_0/b1/ApplyAdam"
  op: "ApplyAdam"
  input: "eval_net_0/b1"
  input: "eval_net_0/b1/Adam"
  input: "eval_net_0/b1/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/eval_net_0/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_eval_net_0/w2/ApplyAdam"
  op: "ApplyAdam"
  input: "eval_net_0/w2"
  input: "eval_net_0/w2/Adam"
  input: "eval_net_0/w2/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/eval_net_0/Conv2D_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_eval_net_0/b2/ApplyAdam"
  op: "ApplyAdam"
  input: "eval_net_0/b2"
  input: "eval_net_0/b2/Adam"
  input: "eval_net_0/b2/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/eval_net_0/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_eval_net_0/w3/ApplyAdam"
  op: "ApplyAdam"
  input: "eval_net_0/w3"
  input: "eval_net_0/w3/Adam"
  input: "eval_net_0/w3/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/eval_net_0/Conv2D_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/w3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_eval_net_0/b3/ApplyAdam"
  op: "ApplyAdam"
  input: "eval_net_0/b3"
  input: "eval_net_0/b3/Adam"
  input: "eval_net_0/b3/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/eval_net_0/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_eval_net_0/fc_w1/ApplyAdam"
  op: "ApplyAdam"
  input: "eval_net_0/fc_w1"
  input: "eval_net_0/fc_w1/Adam"
  input: "eval_net_0/fc_w1/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/eval_net_0/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_eval_net_0/fc_b1/ApplyAdam"
  op: "ApplyAdam"
  input: "eval_net_0/fc_b1"
  input: "eval_net_0/fc_b1/Adam"
  input: "eval_net_0/fc_b1/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/eval_net_0/add_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/fc_b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_eval_net_0/q_w/ApplyAdam"
  op: "ApplyAdam"
  input: "eval_net_0/q_w"
  input: "eval_net_0/q_w/Adam"
  input: "eval_net_0/q_w/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/eval_net_0/matmul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_eval_net_0/q_b/ApplyAdam"
  op: "ApplyAdam"
  input: "eval_net_0/q_b"
  input: "eval_net_0/q_b/Adam"
  input: "eval_net_0/q_b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/eval_net_0/add_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_target_net_0/w1/ApplyAdam"
  op: "ApplyAdam"
  input: "target_net_0/w1"
  input: "target_net_0/w1/Adam"
  input: "target_net_0/w1/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/target_net_0/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_target_net_0/b1/ApplyAdam"
  op: "ApplyAdam"
  input: "target_net_0/b1"
  input: "target_net_0/b1/Adam"
  input: "target_net_0/b1/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/target_net_0/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_target_net_0/w2/ApplyAdam"
  op: "ApplyAdam"
  input: "target_net_0/w2"
  input: "target_net_0/w2/Adam"
  input: "target_net_0/w2/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/target_net_0/Conv2D_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_target_net_0/b2/ApplyAdam"
  op: "ApplyAdam"
  input: "target_net_0/b2"
  input: "target_net_0/b2/Adam"
  input: "target_net_0/b2/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/target_net_0/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_target_net_0/w3/ApplyAdam"
  op: "ApplyAdam"
  input: "target_net_0/w3"
  input: "target_net_0/w3/Adam"
  input: "target_net_0/w3/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/target_net_0/Conv2D_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_target_net_0/b3/ApplyAdam"
  op: "ApplyAdam"
  input: "target_net_0/b3"
  input: "target_net_0/b3/Adam"
  input: "target_net_0/b3/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/target_net_0/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_target_net_0/fc_w1/ApplyAdam"
  op: "ApplyAdam"
  input: "target_net_0/fc_w1"
  input: "target_net_0/fc_w1/Adam"
  input: "target_net_0/fc_w1/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/target_net_0/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_target_net_0/fc_b1/ApplyAdam"
  op: "ApplyAdam"
  input: "target_net_0/fc_b1"
  input: "target_net_0/fc_b1/Adam"
  input: "target_net_0/fc_b1/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/target_net_0/add_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_target_net_0/q_w/ApplyAdam"
  op: "ApplyAdam"
  input: "target_net_0/q_w"
  input: "target_net_0/q_w/Adam"
  input: "target_net_0/q_w/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/target_net_0/matmul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_target_net_0/q_b/ApplyAdam"
  op: "ApplyAdam"
  input: "target_net_0/q_b"
  input: "target_net_0/q_b/Adam"
  input: "target_net_0/q_b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/target_net_0/add_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "Adam/beta1"
  input: "^Adam/update_eval_net_0/b1/ApplyAdam"
  input: "^Adam/update_eval_net_0/b2/ApplyAdam"
  input: "^Adam/update_eval_net_0/b3/ApplyAdam"
  input: "^Adam/update_eval_net_0/fc_b1/ApplyAdam"
  input: "^Adam/update_eval_net_0/fc_w1/ApplyAdam"
  input: "^Adam/update_eval_net_0/q_b/ApplyAdam"
  input: "^Adam/update_eval_net_0/q_w/ApplyAdam"
  input: "^Adam/update_eval_net_0/w1/ApplyAdam"
  input: "^Adam/update_eval_net_0/w2/ApplyAdam"
  input: "^Adam/update_eval_net_0/w3/ApplyAdam"
  input: "^Adam/update_target_net_0/b1/ApplyAdam"
  input: "^Adam/update_target_net_0/b2/ApplyAdam"
  input: "^Adam/update_target_net_0/b3/ApplyAdam"
  input: "^Adam/update_target_net_0/fc_b1/ApplyAdam"
  input: "^Adam/update_target_net_0/fc_w1/ApplyAdam"
  input: "^Adam/update_target_net_0/q_b/ApplyAdam"
  input: "^Adam/update_target_net_0/q_w/ApplyAdam"
  input: "^Adam/update_target_net_0/w1/ApplyAdam"
  input: "^Adam/update_target_net_0/w2/ApplyAdam"
  input: "^Adam/update_target_net_0/w3/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
}
node {
  name: "Adam/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "Adam/beta2"
  input: "^Adam/update_eval_net_0/b1/ApplyAdam"
  input: "^Adam/update_eval_net_0/b2/ApplyAdam"
  input: "^Adam/update_eval_net_0/b3/ApplyAdam"
  input: "^Adam/update_eval_net_0/fc_b1/ApplyAdam"
  input: "^Adam/update_eval_net_0/fc_w1/ApplyAdam"
  input: "^Adam/update_eval_net_0/q_b/ApplyAdam"
  input: "^Adam/update_eval_net_0/q_w/ApplyAdam"
  input: "^Adam/update_eval_net_0/w1/ApplyAdam"
  input: "^Adam/update_eval_net_0/w2/ApplyAdam"
  input: "^Adam/update_eval_net_0/w3/ApplyAdam"
  input: "^Adam/update_target_net_0/b1/ApplyAdam"
  input: "^Adam/update_target_net_0/b2/ApplyAdam"
  input: "^Adam/update_target_net_0/b3/ApplyAdam"
  input: "^Adam/update_target_net_0/fc_b1/ApplyAdam"
  input: "^Adam/update_target_net_0/fc_w1/ApplyAdam"
  input: "^Adam/update_target_net_0/q_b/ApplyAdam"
  input: "^Adam/update_target_net_0/q_w/ApplyAdam"
  input: "^Adam/update_target_net_0/w1/ApplyAdam"
  input: "^Adam/update_target_net_0/w2/ApplyAdam"
  input: "^Adam/update_target_net_0/w3/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
}
node {
  name: "Adam/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_0/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam"
  op: "NoOp"
  input: "^Adam/Assign"
  input: "^Adam/Assign_1"
  input: "^Adam/update_eval_net_0/b1/ApplyAdam"
  input: "^Adam/update_eval_net_0/b2/ApplyAdam"
  input: "^Adam/update_eval_net_0/b3/ApplyAdam"
  input: "^Adam/update_eval_net_0/fc_b1/ApplyAdam"
  input: "^Adam/update_eval_net_0/fc_w1/ApplyAdam"
  input: "^Adam/update_eval_net_0/q_b/ApplyAdam"
  input: "^Adam/update_eval_net_0/q_w/ApplyAdam"
  input: "^Adam/update_eval_net_0/w1/ApplyAdam"
  input: "^Adam/update_eval_net_0/w2/ApplyAdam"
  input: "^Adam/update_eval_net_0/w3/ApplyAdam"
  input: "^Adam/update_target_net_0/b1/ApplyAdam"
  input: "^Adam/update_target_net_0/b2/ApplyAdam"
  input: "^Adam/update_target_net_0/b3/ApplyAdam"
  input: "^Adam/update_target_net_0/fc_b1/ApplyAdam"
  input: "^Adam/update_target_net_0/fc_w1/ApplyAdam"
  input: "^Adam/update_target_net_0/q_b/ApplyAdam"
  input: "^Adam/update_target_net_0/q_w/ApplyAdam"
  input: "^Adam/update_target_net_0/w1/ApplyAdam"
  input: "^Adam/update_target_net_0/w2/ApplyAdam"
  input: "^Adam/update_target_net_0/w3/ApplyAdam"
}
node {
  name: "Assign"
  op: "Assign"
  input: "target_net_0/w1"
  input: "eval_net_0/w1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_1"
  op: "Assign"
  input: "target_net_0/b1"
  input: "eval_net_0/b1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_2"
  op: "Assign"
  input: "target_net_0/w2"
  input: "eval_net_0/w2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_3"
  op: "Assign"
  input: "target_net_0/b2"
  input: "eval_net_0/b2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_4"
  op: "Assign"
  input: "target_net_0/w3"
  input: "eval_net_0/w3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_5"
  op: "Assign"
  input: "target_net_0/b3"
  input: "eval_net_0/b3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_6"
  op: "Assign"
  input: "target_net_0/fc_w1"
  input: "eval_net_0/fc_w1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_7"
  op: "Assign"
  input: "target_net_0/fc_b1"
  input: "eval_net_0/fc_b1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_8"
  op: "Assign"
  input: "target_net_0/q_w"
  input: "eval_net_0/q_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_9"
  op: "Assign"
  input: "target_net_0/q_b"
  input: "eval_net_0/q_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_10"
  op: "Assign"
  input: "target_net_0/w1/Adam"
  input: "eval_net_0/w1/Adam/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_11"
  op: "Assign"
  input: "target_net_0/w1/Adam_1"
  input: "eval_net_0/w1/Adam_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_12"
  op: "Assign"
  input: "target_net_0/b1/Adam"
  input: "eval_net_0/b1/Adam/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_13"
  op: "Assign"
  input: "target_net_0/b1/Adam_1"
  input: "eval_net_0/b1/Adam_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_14"
  op: "Assign"
  input: "target_net_0/w2/Adam"
  input: "eval_net_0/w2/Adam/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_15"
  op: "Assign"
  input: "target_net_0/w2/Adam_1"
  input: "eval_net_0/w2/Adam_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_16"
  op: "Assign"
  input: "target_net_0/b2/Adam"
  input: "eval_net_0/b2/Adam/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_17"
  op: "Assign"
  input: "target_net_0/b2/Adam_1"
  input: "eval_net_0/b2/Adam_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_18"
  op: "Assign"
  input: "target_net_0/w3/Adam"
  input: "eval_net_0/w3/Adam/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_19"
  op: "Assign"
  input: "target_net_0/w3/Adam_1"
  input: "eval_net_0/w3/Adam_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/w3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_20"
  op: "Assign"
  input: "target_net_0/b3/Adam"
  input: "eval_net_0/b3/Adam/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_21"
  op: "Assign"
  input: "target_net_0/b3/Adam_1"
  input: "eval_net_0/b3/Adam_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/b3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_22"
  op: "Assign"
  input: "target_net_0/fc_w1/Adam"
  input: "eval_net_0/fc_w1/Adam/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_23"
  op: "Assign"
  input: "target_net_0/fc_w1/Adam_1"
  input: "eval_net_0/fc_w1/Adam_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_24"
  op: "Assign"
  input: "target_net_0/fc_b1/Adam"
  input: "eval_net_0/fc_b1/Adam/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_25"
  op: "Assign"
  input: "target_net_0/fc_b1/Adam_1"
  input: "eval_net_0/fc_b1/Adam_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/fc_b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_26"
  op: "Assign"
  input: "target_net_0/q_w/Adam"
  input: "eval_net_0/q_w/Adam/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_27"
  op: "Assign"
  input: "target_net_0/q_w/Adam_1"
  input: "eval_net_0/q_w/Adam_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_28"
  op: "Assign"
  input: "target_net_0/q_b/Adam"
  input: "eval_net_0/q_b/Adam/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_29"
  op: "Assign"
  input: "target_net_0/q_b/Adam_1"
  input: "eval_net_0/q_b/Adam_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_0/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^eval_net_0/b1/Adam/Assign"
  input: "^eval_net_0/b1/Adam_1/Assign"
  input: "^eval_net_0/b1/Assign"
  input: "^eval_net_0/b2/Adam/Assign"
  input: "^eval_net_0/b2/Adam_1/Assign"
  input: "^eval_net_0/b2/Assign"
  input: "^eval_net_0/b3/Adam/Assign"
  input: "^eval_net_0/b3/Adam_1/Assign"
  input: "^eval_net_0/b3/Assign"
  input: "^eval_net_0/fc_b1/Adam/Assign"
  input: "^eval_net_0/fc_b1/Adam_1/Assign"
  input: "^eval_net_0/fc_b1/Assign"
  input: "^eval_net_0/fc_w1/Adam/Assign"
  input: "^eval_net_0/fc_w1/Adam_1/Assign"
  input: "^eval_net_0/fc_w1/Assign"
  input: "^eval_net_0/q_b/Adam/Assign"
  input: "^eval_net_0/q_b/Adam_1/Assign"
  input: "^eval_net_0/q_b/Assign"
  input: "^eval_net_0/q_w/Adam/Assign"
  input: "^eval_net_0/q_w/Adam_1/Assign"
  input: "^eval_net_0/q_w/Assign"
  input: "^eval_net_0/w1/Adam/Assign"
  input: "^eval_net_0/w1/Adam_1/Assign"
  input: "^eval_net_0/w1/Assign"
  input: "^eval_net_0/w2/Adam/Assign"
  input: "^eval_net_0/w2/Adam_1/Assign"
  input: "^eval_net_0/w2/Assign"
  input: "^eval_net_0/w3/Adam/Assign"
  input: "^eval_net_0/w3/Adam_1/Assign"
  input: "^eval_net_0/w3/Assign"
  input: "^target_net_0/b1/Adam/Assign"
  input: "^target_net_0/b1/Adam_1/Assign"
  input: "^target_net_0/b1/Assign"
  input: "^target_net_0/b2/Adam/Assign"
  input: "^target_net_0/b2/Adam_1/Assign"
  input: "^target_net_0/b2/Assign"
  input: "^target_net_0/b3/Adam/Assign"
  input: "^target_net_0/b3/Adam_1/Assign"
  input: "^target_net_0/b3/Assign"
  input: "^target_net_0/fc_b1/Adam/Assign"
  input: "^target_net_0/fc_b1/Adam_1/Assign"
  input: "^target_net_0/fc_b1/Assign"
  input: "^target_net_0/fc_w1/Adam/Assign"
  input: "^target_net_0/fc_w1/Adam_1/Assign"
  input: "^target_net_0/fc_w1/Assign"
  input: "^target_net_0/q_b/Adam/Assign"
  input: "^target_net_0/q_b/Adam_1/Assign"
  input: "^target_net_0/q_b/Assign"
  input: "^target_net_0/q_w/Adam/Assign"
  input: "^target_net_0/q_w/Adam_1/Assign"
  input: "^target_net_0/q_w/Assign"
  input: "^target_net_0/w1/Adam/Assign"
  input: "^target_net_0/w1/Adam_1/Assign"
  input: "^target_net_0/w1/Assign"
  input: "^target_net_0/w2/Adam/Assign"
  input: "^target_net_0/w2/Adam_1/Assign"
  input: "^target_net_0/w2/Assign"
  input: "^target_net_0/w3/Adam/Assign"
  input: "^target_net_0/w3/Adam_1/Assign"
  input: "^target_net_0/w3/Assign"
}
node {
  name: "eval_net_1/w1/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "eval_net_1/w1/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.051754917949438095
      }
    }
  }
}
node {
  name: "eval_net_1/w1/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.051754917949438095
      }
    }
  }
}
node {
  name: "eval_net_1/w1/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "eval_net_1/w1/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "eval_net_1/w1/Initializer/random_uniform/sub"
  op: "Sub"
  input: "eval_net_1/w1/Initializer/random_uniform/max"
  input: "eval_net_1/w1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w1"
      }
    }
  }
}
node {
  name: "eval_net_1/w1/Initializer/random_uniform/mul"
  op: "Mul"
  input: "eval_net_1/w1/Initializer/random_uniform/RandomUniform"
  input: "eval_net_1/w1/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w1"
      }
    }
  }
}
node {
  name: "eval_net_1/w1/Initializer/random_uniform"
  op: "Add"
  input: "eval_net_1/w1/Initializer/random_uniform/mul"
  input: "eval_net_1/w1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w1"
      }
    }
  }
}
node {
  name: "eval_net_1/w1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_1/w1/Assign"
  op: "Assign"
  input: "eval_net_1/w1"
  input: "eval_net_1/w1/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/w1/read"
  op: "Identity"
  input: "eval_net_1/w1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w1"
      }
    }
  }
}
node {
  name: "eval_net_1/Assign"
  op: "Assign"
  input: "eval_net_1/w1"
  input: "target_net_0/w1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/b1/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "eval_net_1/b1/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3061862289905548
      }
    }
  }
}
node {
  name: "eval_net_1/b1/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3061862289905548
      }
    }
  }
}
node {
  name: "eval_net_1/b1/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "eval_net_1/b1/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "eval_net_1/b1/Initializer/random_uniform/sub"
  op: "Sub"
  input: "eval_net_1/b1/Initializer/random_uniform/max"
  input: "eval_net_1/b1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b1"
      }
    }
  }
}
node {
  name: "eval_net_1/b1/Initializer/random_uniform/mul"
  op: "Mul"
  input: "eval_net_1/b1/Initializer/random_uniform/RandomUniform"
  input: "eval_net_1/b1/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b1"
      }
    }
  }
}
node {
  name: "eval_net_1/b1/Initializer/random_uniform"
  op: "Add"
  input: "eval_net_1/b1/Initializer/random_uniform/mul"
  input: "eval_net_1/b1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b1"
      }
    }
  }
}
node {
  name: "eval_net_1/b1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_1/b1/Assign"
  op: "Assign"
  input: "eval_net_1/b1"
  input: "eval_net_1/b1/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/b1/read"
  op: "Identity"
  input: "eval_net_1/b1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b1"
      }
    }
  }
}
node {
  name: "eval_net_1/Assign_1"
  op: "Assign"
  input: "eval_net_1/b1"
  input: "target_net_0/b1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/Conv2D"
  op: "Conv2D"
  input: "s"
  input: "eval_net_1/Assign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/add"
  op: "AddV2"
  input: "eval_net_1/Conv2D"
  input: "eval_net_1/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_1/Relu"
  op: "Relu"
  input: "eval_net_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_1/w2/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "eval_net_1/w2/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "eval_net_1/w2/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "eval_net_1/w2/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "eval_net_1/w2/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "eval_net_1/w2/Initializer/random_uniform/sub"
  op: "Sub"
  input: "eval_net_1/w2/Initializer/random_uniform/max"
  input: "eval_net_1/w2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w2"
      }
    }
  }
}
node {
  name: "eval_net_1/w2/Initializer/random_uniform/mul"
  op: "Mul"
  input: "eval_net_1/w2/Initializer/random_uniform/RandomUniform"
  input: "eval_net_1/w2/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w2"
      }
    }
  }
}
node {
  name: "eval_net_1/w2/Initializer/random_uniform"
  op: "Add"
  input: "eval_net_1/w2/Initializer/random_uniform/mul"
  input: "eval_net_1/w2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w2"
      }
    }
  }
}
node {
  name: "eval_net_1/w2"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_1/w2/Assign"
  op: "Assign"
  input: "eval_net_1/w2"
  input: "eval_net_1/w2/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/w2/read"
  op: "Identity"
  input: "eval_net_1/w2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w2"
      }
    }
  }
}
node {
  name: "eval_net_1/Assign_2"
  op: "Assign"
  input: "eval_net_1/w2"
  input: "target_net_0/w2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/b2/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "eval_net_1/b2/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "eval_net_1/b2/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "eval_net_1/b2/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "eval_net_1/b2/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "eval_net_1/b2/Initializer/random_uniform/sub"
  op: "Sub"
  input: "eval_net_1/b2/Initializer/random_uniform/max"
  input: "eval_net_1/b2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b2"
      }
    }
  }
}
node {
  name: "eval_net_1/b2/Initializer/random_uniform/mul"
  op: "Mul"
  input: "eval_net_1/b2/Initializer/random_uniform/RandomUniform"
  input: "eval_net_1/b2/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b2"
      }
    }
  }
}
node {
  name: "eval_net_1/b2/Initializer/random_uniform"
  op: "Add"
  input: "eval_net_1/b2/Initializer/random_uniform/mul"
  input: "eval_net_1/b2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b2"
      }
    }
  }
}
node {
  name: "eval_net_1/b2"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_1/b2/Assign"
  op: "Assign"
  input: "eval_net_1/b2"
  input: "eval_net_1/b2/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/b2/read"
  op: "Identity"
  input: "eval_net_1/b2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b2"
      }
    }
  }
}
node {
  name: "eval_net_1/Assign_3"
  op: "Assign"
  input: "eval_net_1/b2"
  input: "target_net_0/b2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/Conv2D_1"
  op: "Conv2D"
  input: "eval_net_1/Relu"
  input: "eval_net_1/Assign_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/add_1"
  op: "AddV2"
  input: "eval_net_1/Conv2D_1"
  input: "eval_net_1/Assign_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_1/Relu_1"
  op: "Relu"
  input: "eval_net_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_1/w3/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "eval_net_1/w3/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "eval_net_1/w3/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "eval_net_1/w3/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "eval_net_1/w3/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "eval_net_1/w3/Initializer/random_uniform/sub"
  op: "Sub"
  input: "eval_net_1/w3/Initializer/random_uniform/max"
  input: "eval_net_1/w3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w3"
      }
    }
  }
}
node {
  name: "eval_net_1/w3/Initializer/random_uniform/mul"
  op: "Mul"
  input: "eval_net_1/w3/Initializer/random_uniform/RandomUniform"
  input: "eval_net_1/w3/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w3"
      }
    }
  }
}
node {
  name: "eval_net_1/w3/Initializer/random_uniform"
  op: "Add"
  input: "eval_net_1/w3/Initializer/random_uniform/mul"
  input: "eval_net_1/w3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w3"
      }
    }
  }
}
node {
  name: "eval_net_1/w3"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_1/w3/Assign"
  op: "Assign"
  input: "eval_net_1/w3"
  input: "eval_net_1/w3/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/w3/read"
  op: "Identity"
  input: "eval_net_1/w3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w3"
      }
    }
  }
}
node {
  name: "eval_net_1/Assign_4"
  op: "Assign"
  input: "eval_net_1/w3"
  input: "target_net_0/w3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/w3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/b3/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "eval_net_1/b3/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "eval_net_1/b3/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "eval_net_1/b3/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "eval_net_1/b3/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "eval_net_1/b3/Initializer/random_uniform/sub"
  op: "Sub"
  input: "eval_net_1/b3/Initializer/random_uniform/max"
  input: "eval_net_1/b3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b3"
      }
    }
  }
}
node {
  name: "eval_net_1/b3/Initializer/random_uniform/mul"
  op: "Mul"
  input: "eval_net_1/b3/Initializer/random_uniform/RandomUniform"
  input: "eval_net_1/b3/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b3"
      }
    }
  }
}
node {
  name: "eval_net_1/b3/Initializer/random_uniform"
  op: "Add"
  input: "eval_net_1/b3/Initializer/random_uniform/mul"
  input: "eval_net_1/b3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b3"
      }
    }
  }
}
node {
  name: "eval_net_1/b3"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_1/b3/Assign"
  op: "Assign"
  input: "eval_net_1/b3"
  input: "eval_net_1/b3/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/b3/read"
  op: "Identity"
  input: "eval_net_1/b3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b3"
      }
    }
  }
}
node {
  name: "eval_net_1/Assign_5"
  op: "Assign"
  input: "eval_net_1/b3"
  input: "target_net_0/b3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/b3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/Conv2D_2"
  op: "Conv2D"
  input: "eval_net_1/Relu_1"
  input: "eval_net_1/Assign_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/add_2"
  op: "AddV2"
  input: "eval_net_1/Conv2D_2"
  input: "eval_net_1/Assign_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_1/Relu_2"
  op: "Relu"
  input: "eval_net_1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\207\001\000"
      }
    }
  }
}
node {
  name: "eval_net_1/Reshape"
  op: "Reshape"
  input: "eval_net_1/Relu_2"
  input: "eval_net_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "eval_net_1/fc_w1/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\207\001\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "eval_net_1/fc_w1/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.007722525857388973
      }
    }
  }
}
node {
  name: "eval_net_1/fc_w1/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.007722525857388973
      }
    }
  }
}
node {
  name: "eval_net_1/fc_w1/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "eval_net_1/fc_w1/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "eval_net_1/fc_w1/Initializer/random_uniform/sub"
  op: "Sub"
  input: "eval_net_1/fc_w1/Initializer/random_uniform/max"
  input: "eval_net_1/fc_w1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/fc_w1"
      }
    }
  }
}
node {
  name: "eval_net_1/fc_w1/Initializer/random_uniform/mul"
  op: "Mul"
  input: "eval_net_1/fc_w1/Initializer/random_uniform/RandomUniform"
  input: "eval_net_1/fc_w1/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/fc_w1"
      }
    }
  }
}
node {
  name: "eval_net_1/fc_w1/Initializer/random_uniform"
  op: "Add"
  input: "eval_net_1/fc_w1/Initializer/random_uniform/mul"
  input: "eval_net_1/fc_w1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/fc_w1"
      }
    }
  }
}
node {
  name: "eval_net_1/fc_w1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/fc_w1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100096
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_1/fc_w1/Assign"
  op: "Assign"
  input: "eval_net_1/fc_w1"
  input: "eval_net_1/fc_w1/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/fc_w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/fc_w1/read"
  op: "Identity"
  input: "eval_net_1/fc_w1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/fc_w1"
      }
    }
  }
}
node {
  name: "eval_net_1/Assign_6"
  op: "Assign"
  input: "eval_net_1/fc_w1"
  input: "target_net_0/fc_w1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/fc_w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/fc_b1/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/fc_b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "eval_net_1/fc_b1/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/fc_b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "eval_net_1/fc_b1/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/fc_b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "eval_net_1/fc_b1/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "eval_net_1/fc_b1/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/fc_b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "eval_net_1/fc_b1/Initializer/random_uniform/sub"
  op: "Sub"
  input: "eval_net_1/fc_b1/Initializer/random_uniform/max"
  input: "eval_net_1/fc_b1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/fc_b1"
      }
    }
  }
}
node {
  name: "eval_net_1/fc_b1/Initializer/random_uniform/mul"
  op: "Mul"
  input: "eval_net_1/fc_b1/Initializer/random_uniform/RandomUniform"
  input: "eval_net_1/fc_b1/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/fc_b1"
      }
    }
  }
}
node {
  name: "eval_net_1/fc_b1/Initializer/random_uniform"
  op: "Add"
  input: "eval_net_1/fc_b1/Initializer/random_uniform/mul"
  input: "eval_net_1/fc_b1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/fc_b1"
      }
    }
  }
}
node {
  name: "eval_net_1/fc_b1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/fc_b1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_1/fc_b1/Assign"
  op: "Assign"
  input: "eval_net_1/fc_b1"
  input: "eval_net_1/fc_b1/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/fc_b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/fc_b1/read"
  op: "Identity"
  input: "eval_net_1/fc_b1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/fc_b1"
      }
    }
  }
}
node {
  name: "eval_net_1/Assign_7"
  op: "Assign"
  input: "eval_net_1/fc_b1"
  input: "target_net_0/fc_b1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/fc_b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/MatMul"
  op: "MatMul"
  input: "eval_net_1/Reshape"
  input: "eval_net_1/Assign_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "eval_net_1/add_3"
  op: "AddV2"
  input: "eval_net_1/MatMul"
  input: "eval_net_1/Assign_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_1/Relu_3"
  op: "Relu"
  input: "eval_net_1/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "eval_net_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "eval_net_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "eval_net_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "eval_net_1/truncated_normal/mul"
  op: "Mul"
  input: "eval_net_1/truncated_normal/TruncatedNormal"
  input: "eval_net_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_1/truncated_normal"
  op: "Add"
  input: "eval_net_1/truncated_normal/mul"
  input: "eval_net_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_1/q_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_1/q_w/Assign"
  op: "Assign"
  input: "eval_net_1/q_w"
  input: "eval_net_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/q_w/read"
  op: "Identity"
  input: "eval_net_1/q_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_w"
      }
    }
  }
}
node {
  name: "eval_net_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_1/q_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_1/q_b/Assign"
  op: "Assign"
  input: "eval_net_1/q_b"
  input: "eval_net_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/q_b/read"
  op: "Identity"
  input: "eval_net_1/q_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_b"
      }
    }
  }
}
node {
  name: "eval_net_1/matmul_1"
  op: "MatMul"
  input: "eval_net_1/Relu_3"
  input: "eval_net_1/q_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "eval_net_1/add_4"
  op: "AddV2"
  input: "eval_net_1/matmul_1"
  input: "eval_net_1/q_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_1/w1/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "target_net_1/w1/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.051754917949438095
      }
    }
  }
}
node {
  name: "target_net_1/w1/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.051754917949438095
      }
    }
  }
}
node {
  name: "target_net_1/w1/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "target_net_1/w1/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "target_net_1/w1/Initializer/random_uniform/sub"
  op: "Sub"
  input: "target_net_1/w1/Initializer/random_uniform/max"
  input: "target_net_1/w1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w1"
      }
    }
  }
}
node {
  name: "target_net_1/w1/Initializer/random_uniform/mul"
  op: "Mul"
  input: "target_net_1/w1/Initializer/random_uniform/RandomUniform"
  input: "target_net_1/w1/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w1"
      }
    }
  }
}
node {
  name: "target_net_1/w1/Initializer/random_uniform"
  op: "Add"
  input: "target_net_1/w1/Initializer/random_uniform/mul"
  input: "target_net_1/w1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w1"
      }
    }
  }
}
node {
  name: "target_net_1/w1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_1/w1/Assign"
  op: "Assign"
  input: "target_net_1/w1"
  input: "target_net_1/w1/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/w1/read"
  op: "Identity"
  input: "target_net_1/w1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w1"
      }
    }
  }
}
node {
  name: "target_net_1/Assign"
  op: "Assign"
  input: "target_net_1/w1"
  input: "eval_net_1/Assign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/b1/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "target_net_1/b1/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3061862289905548
      }
    }
  }
}
node {
  name: "target_net_1/b1/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3061862289905548
      }
    }
  }
}
node {
  name: "target_net_1/b1/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "target_net_1/b1/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "target_net_1/b1/Initializer/random_uniform/sub"
  op: "Sub"
  input: "target_net_1/b1/Initializer/random_uniform/max"
  input: "target_net_1/b1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b1"
      }
    }
  }
}
node {
  name: "target_net_1/b1/Initializer/random_uniform/mul"
  op: "Mul"
  input: "target_net_1/b1/Initializer/random_uniform/RandomUniform"
  input: "target_net_1/b1/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b1"
      }
    }
  }
}
node {
  name: "target_net_1/b1/Initializer/random_uniform"
  op: "Add"
  input: "target_net_1/b1/Initializer/random_uniform/mul"
  input: "target_net_1/b1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b1"
      }
    }
  }
}
node {
  name: "target_net_1/b1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_1/b1/Assign"
  op: "Assign"
  input: "target_net_1/b1"
  input: "target_net_1/b1/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/b1/read"
  op: "Identity"
  input: "target_net_1/b1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b1"
      }
    }
  }
}
node {
  name: "target_net_1/Assign_1"
  op: "Assign"
  input: "target_net_1/b1"
  input: "eval_net_1/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/Conv2D"
  op: "Conv2D"
  input: "s_"
  input: "target_net_1/Assign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/add"
  op: "AddV2"
  input: "target_net_1/Conv2D"
  input: "target_net_1/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_1/Relu"
  op: "Relu"
  input: "target_net_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_1/w2/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "target_net_1/w2/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "target_net_1/w2/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "target_net_1/w2/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "target_net_1/w2/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "target_net_1/w2/Initializer/random_uniform/sub"
  op: "Sub"
  input: "target_net_1/w2/Initializer/random_uniform/max"
  input: "target_net_1/w2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w2"
      }
    }
  }
}
node {
  name: "target_net_1/w2/Initializer/random_uniform/mul"
  op: "Mul"
  input: "target_net_1/w2/Initializer/random_uniform/RandomUniform"
  input: "target_net_1/w2/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w2"
      }
    }
  }
}
node {
  name: "target_net_1/w2/Initializer/random_uniform"
  op: "Add"
  input: "target_net_1/w2/Initializer/random_uniform/mul"
  input: "target_net_1/w2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w2"
      }
    }
  }
}
node {
  name: "target_net_1/w2"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_1/w2/Assign"
  op: "Assign"
  input: "target_net_1/w2"
  input: "target_net_1/w2/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/w2/read"
  op: "Identity"
  input: "target_net_1/w2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w2"
      }
    }
  }
}
node {
  name: "target_net_1/Assign_2"
  op: "Assign"
  input: "target_net_1/w2"
  input: "eval_net_1/Assign_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/b2/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "target_net_1/b2/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "target_net_1/b2/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "target_net_1/b2/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "target_net_1/b2/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "target_net_1/b2/Initializer/random_uniform/sub"
  op: "Sub"
  input: "target_net_1/b2/Initializer/random_uniform/max"
  input: "target_net_1/b2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b2"
      }
    }
  }
}
node {
  name: "target_net_1/b2/Initializer/random_uniform/mul"
  op: "Mul"
  input: "target_net_1/b2/Initializer/random_uniform/RandomUniform"
  input: "target_net_1/b2/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b2"
      }
    }
  }
}
node {
  name: "target_net_1/b2/Initializer/random_uniform"
  op: "Add"
  input: "target_net_1/b2/Initializer/random_uniform/mul"
  input: "target_net_1/b2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b2"
      }
    }
  }
}
node {
  name: "target_net_1/b2"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_1/b2/Assign"
  op: "Assign"
  input: "target_net_1/b2"
  input: "target_net_1/b2/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/b2/read"
  op: "Identity"
  input: "target_net_1/b2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b2"
      }
    }
  }
}
node {
  name: "target_net_1/Assign_3"
  op: "Assign"
  input: "target_net_1/b2"
  input: "eval_net_1/Assign_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/Conv2D_1"
  op: "Conv2D"
  input: "target_net_1/Relu"
  input: "target_net_1/Assign_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/add_1"
  op: "AddV2"
  input: "target_net_1/Conv2D_1"
  input: "target_net_1/Assign_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_1/Relu_1"
  op: "Relu"
  input: "target_net_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_1/w3/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "target_net_1/w3/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "target_net_1/w3/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "target_net_1/w3/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "target_net_1/w3/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "target_net_1/w3/Initializer/random_uniform/sub"
  op: "Sub"
  input: "target_net_1/w3/Initializer/random_uniform/max"
  input: "target_net_1/w3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w3"
      }
    }
  }
}
node {
  name: "target_net_1/w3/Initializer/random_uniform/mul"
  op: "Mul"
  input: "target_net_1/w3/Initializer/random_uniform/RandomUniform"
  input: "target_net_1/w3/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w3"
      }
    }
  }
}
node {
  name: "target_net_1/w3/Initializer/random_uniform"
  op: "Add"
  input: "target_net_1/w3/Initializer/random_uniform/mul"
  input: "target_net_1/w3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w3"
      }
    }
  }
}
node {
  name: "target_net_1/w3"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_1/w3/Assign"
  op: "Assign"
  input: "target_net_1/w3"
  input: "target_net_1/w3/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/w3/read"
  op: "Identity"
  input: "target_net_1/w3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w3"
      }
    }
  }
}
node {
  name: "target_net_1/Assign_4"
  op: "Assign"
  input: "target_net_1/w3"
  input: "eval_net_1/Assign_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/b3/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "target_net_1/b3/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "target_net_1/b3/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "target_net_1/b3/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "target_net_1/b3/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "target_net_1/b3/Initializer/random_uniform/sub"
  op: "Sub"
  input: "target_net_1/b3/Initializer/random_uniform/max"
  input: "target_net_1/b3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b3"
      }
    }
  }
}
node {
  name: "target_net_1/b3/Initializer/random_uniform/mul"
  op: "Mul"
  input: "target_net_1/b3/Initializer/random_uniform/RandomUniform"
  input: "target_net_1/b3/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b3"
      }
    }
  }
}
node {
  name: "target_net_1/b3/Initializer/random_uniform"
  op: "Add"
  input: "target_net_1/b3/Initializer/random_uniform/mul"
  input: "target_net_1/b3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b3"
      }
    }
  }
}
node {
  name: "target_net_1/b3"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_1/b3/Assign"
  op: "Assign"
  input: "target_net_1/b3"
  input: "target_net_1/b3/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/b3/read"
  op: "Identity"
  input: "target_net_1/b3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b3"
      }
    }
  }
}
node {
  name: "target_net_1/Assign_5"
  op: "Assign"
  input: "target_net_1/b3"
  input: "eval_net_1/Assign_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/Conv2D_2"
  op: "Conv2D"
  input: "target_net_1/Relu_1"
  input: "target_net_1/Assign_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/add_2"
  op: "AddV2"
  input: "target_net_1/Conv2D_2"
  input: "target_net_1/Assign_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_1/Relu_2"
  op: "Relu"
  input: "target_net_1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\207\001\000"
      }
    }
  }
}
node {
  name: "target_net_1/Reshape"
  op: "Reshape"
  input: "target_net_1/Relu_2"
  input: "target_net_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "target_net_1/fc_w1/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\207\001\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "target_net_1/fc_w1/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.007722525857388973
      }
    }
  }
}
node {
  name: "target_net_1/fc_w1/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.007722525857388973
      }
    }
  }
}
node {
  name: "target_net_1/fc_w1/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "target_net_1/fc_w1/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "target_net_1/fc_w1/Initializer/random_uniform/sub"
  op: "Sub"
  input: "target_net_1/fc_w1/Initializer/random_uniform/max"
  input: "target_net_1/fc_w1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/fc_w1"
      }
    }
  }
}
node {
  name: "target_net_1/fc_w1/Initializer/random_uniform/mul"
  op: "Mul"
  input: "target_net_1/fc_w1/Initializer/random_uniform/RandomUniform"
  input: "target_net_1/fc_w1/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/fc_w1"
      }
    }
  }
}
node {
  name: "target_net_1/fc_w1/Initializer/random_uniform"
  op: "Add"
  input: "target_net_1/fc_w1/Initializer/random_uniform/mul"
  input: "target_net_1/fc_w1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/fc_w1"
      }
    }
  }
}
node {
  name: "target_net_1/fc_w1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/fc_w1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100096
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_1/fc_w1/Assign"
  op: "Assign"
  input: "target_net_1/fc_w1"
  input: "target_net_1/fc_w1/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/fc_w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/fc_w1/read"
  op: "Identity"
  input: "target_net_1/fc_w1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/fc_w1"
      }
    }
  }
}
node {
  name: "target_net_1/Assign_6"
  op: "Assign"
  input: "target_net_1/fc_w1"
  input: "eval_net_1/Assign_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/fc_w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/fc_b1/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/fc_b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "target_net_1/fc_b1/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/fc_b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "target_net_1/fc_b1/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/fc_b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "target_net_1/fc_b1/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "target_net_1/fc_b1/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/fc_b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "target_net_1/fc_b1/Initializer/random_uniform/sub"
  op: "Sub"
  input: "target_net_1/fc_b1/Initializer/random_uniform/max"
  input: "target_net_1/fc_b1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/fc_b1"
      }
    }
  }
}
node {
  name: "target_net_1/fc_b1/Initializer/random_uniform/mul"
  op: "Mul"
  input: "target_net_1/fc_b1/Initializer/random_uniform/RandomUniform"
  input: "target_net_1/fc_b1/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/fc_b1"
      }
    }
  }
}
node {
  name: "target_net_1/fc_b1/Initializer/random_uniform"
  op: "Add"
  input: "target_net_1/fc_b1/Initializer/random_uniform/mul"
  input: "target_net_1/fc_b1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/fc_b1"
      }
    }
  }
}
node {
  name: "target_net_1/fc_b1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/fc_b1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_1/fc_b1/Assign"
  op: "Assign"
  input: "target_net_1/fc_b1"
  input: "target_net_1/fc_b1/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/fc_b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/fc_b1/read"
  op: "Identity"
  input: "target_net_1/fc_b1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/fc_b1"
      }
    }
  }
}
node {
  name: "target_net_1/Assign_7"
  op: "Assign"
  input: "target_net_1/fc_b1"
  input: "eval_net_1/Assign_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/fc_b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/MatMul"
  op: "MatMul"
  input: "target_net_1/Reshape"
  input: "target_net_1/Assign_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "target_net_1/add_3"
  op: "AddV2"
  input: "target_net_1/MatMul"
  input: "target_net_1/Assign_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_1/Relu_3"
  op: "Relu"
  input: "target_net_1/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "target_net_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "target_net_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "target_net_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "target_net_1/truncated_normal/mul"
  op: "Mul"
  input: "target_net_1/truncated_normal/TruncatedNormal"
  input: "target_net_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_1/truncated_normal"
  op: "Add"
  input: "target_net_1/truncated_normal/mul"
  input: "target_net_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_1/q_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_1/q_w/Assign"
  op: "Assign"
  input: "target_net_1/q_w"
  input: "target_net_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/q_w/read"
  op: "Identity"
  input: "target_net_1/q_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_w"
      }
    }
  }
}
node {
  name: "target_net_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_1/q_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_1/q_b/Assign"
  op: "Assign"
  input: "target_net_1/q_b"
  input: "target_net_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/q_b/read"
  op: "Identity"
  input: "target_net_1/q_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_b"
      }
    }
  }
}
node {
  name: "target_net_1/matmul_1"
  op: "MatMul"
  input: "target_net_1/Relu_3"
  input: "target_net_1/q_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "target_net_1/add_4"
  op: "AddV2"
  input: "target_net_1/matmul_1"
  input: "target_net_1/q_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Max_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Max_1"
  op: "Max"
  input: "target_net_1/add_4"
  input: "Max_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "mul_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mul_3"
  op: "Mul"
  input: "mul_3/x"
  input: "Max_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sub_1"
  op: "Sub"
  input: "sub_1/x"
  input: "done"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_4"
  op: "Mul"
  input: "mul_3"
  input: "sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_1"
  op: "AddV2"
  input: "r"
  input: "mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_5"
  op: "Mul"
  input: "a"
  input: "eval_net_1/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_1"
  op: "Sum"
  input: "mul_5"
  input: "Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "SquaredDifference_1"
  op: "SquaredDifference"
  input: "add_1"
  input: "Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Mean_1"
  op: "Mean"
  input: "SquaredDifference_1"
  input: "Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients_1/Fill"
  op: "Fill"
  input: "gradients_1/Shape"
  input: "gradients_1/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/Mean_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/Mean_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/Fill"
  input: "gradients_1/Mean_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/Mean_1_grad/Shape"
  op: "Shape"
  input: "SquaredDifference_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/Mean_1_grad/Tile"
  op: "Tile"
  input: "gradients_1/Mean_1_grad/Reshape"
  input: "gradients_1/Mean_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/Mean_1_grad/Shape_1"
  op: "Shape"
  input: "SquaredDifference_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/Mean_1_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/Mean_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/Mean_1_grad/Prod"
  op: "Prod"
  input: "gradients_1/Mean_1_grad/Shape_1"
  input: "gradients_1/Mean_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/Mean_1_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/Mean_1_grad/Prod_1"
  op: "Prod"
  input: "gradients_1/Mean_1_grad/Shape_2"
  input: "gradients_1/Mean_1_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/Mean_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/Mean_1_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/Mean_1_grad/Prod_1"
  input: "gradients_1/Mean_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/Mean_1_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/Mean_1_grad/Prod"
  input: "gradients_1/Mean_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/Mean_1_grad/Cast"
  op: "Cast"
  input: "gradients_1/Mean_1_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/Mean_1_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/Mean_1_grad/Tile"
  input: "gradients_1/Mean_1_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/SquaredDifference_1_grad/scalar"
  op: "Const"
  input: "^gradients_1/Mean_1_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients_1/SquaredDifference_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/SquaredDifference_1_grad/scalar"
  input: "gradients_1/Mean_1_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/SquaredDifference_1_grad/sub"
  op: "Sub"
  input: "add_1"
  input: "Sum_1"
  input: "^gradients_1/Mean_1_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/SquaredDifference_1_grad/mul_1"
  op: "Mul"
  input: "gradients_1/SquaredDifference_1_grad/Mul"
  input: "gradients_1/SquaredDifference_1_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/SquaredDifference_1_grad/Shape"
  op: "Shape"
  input: "add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/SquaredDifference_1_grad/Shape_1"
  op: "Shape"
  input: "Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/SquaredDifference_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/SquaredDifference_1_grad/Shape"
  input: "gradients_1/SquaredDifference_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/SquaredDifference_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/SquaredDifference_1_grad/mul_1"
  input: "gradients_1/SquaredDifference_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/SquaredDifference_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/SquaredDifference_1_grad/Sum"
  input: "gradients_1/SquaredDifference_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/SquaredDifference_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/SquaredDifference_1_grad/mul_1"
  input: "gradients_1/SquaredDifference_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/SquaredDifference_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/SquaredDifference_1_grad/Sum_1"
  input: "gradients_1/SquaredDifference_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/SquaredDifference_1_grad/Neg"
  op: "Neg"
  input: "gradients_1/SquaredDifference_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/SquaredDifference_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/SquaredDifference_1_grad/Neg"
  input: "^gradients_1/SquaredDifference_1_grad/Reshape"
}
node {
  name: "gradients_1/SquaredDifference_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/SquaredDifference_1_grad/Reshape"
  input: "^gradients_1/SquaredDifference_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/SquaredDifference_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/SquaredDifference_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/SquaredDifference_1_grad/Neg"
  input: "^gradients_1/SquaredDifference_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/SquaredDifference_1_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients_1/add_1_grad/Shape"
  op: "Shape"
  input: "r"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/add_1_grad/Shape_1"
  op: "Shape"
  input: "mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/add_1_grad/Shape"
  input: "gradients_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/add_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/SquaredDifference_1_grad/tuple/control_dependency"
  input: "gradients_1/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/add_1_grad/Sum"
  input: "gradients_1/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/SquaredDifference_1_grad/tuple/control_dependency"
  input: "gradients_1/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/add_1_grad/Sum_1"
  input: "gradients_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/add_1_grad/Reshape"
  input: "^gradients_1/add_1_grad/Reshape_1"
}
node {
  name: "gradients_1/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/add_1_grad/Reshape"
  input: "^gradients_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/add_1_grad/Reshape_1"
  input: "^gradients_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/Sum_1_grad/Shape"
  op: "Shape"
  input: "mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/Sum_1_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients_1/SquaredDifference_1_grad/tuple/control_dependency_1"
  input: "gradients_1/Sum_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/mul_4_grad/Shape"
  op: "Shape"
  input: "mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/mul_4_grad/Shape_1"
  op: "Shape"
  input: "sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/mul_4_grad/Shape"
  input: "gradients_1/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/mul_4_grad/Mul"
  op: "Mul"
  input: "gradients_1/add_1_grad/tuple/control_dependency_1"
  input: "sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients_1/mul_4_grad/Mul"
  input: "gradients_1/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/mul_4_grad/Sum"
  input: "gradients_1/mul_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/mul_4_grad/Mul_1"
  op: "Mul"
  input: "mul_3"
  input: "gradients_1/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/mul_4_grad/Mul_1"
  input: "gradients_1/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/mul_4_grad/Sum_1"
  input: "gradients_1/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/mul_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/mul_4_grad/Reshape"
  input: "^gradients_1/mul_4_grad/Reshape_1"
}
node {
  name: "gradients_1/mul_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/mul_4_grad/Reshape"
  input: "^gradients_1/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/mul_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/mul_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/mul_4_grad/Reshape_1"
  input: "^gradients_1/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/mul_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/mul_5_grad/Shape"
  op: "Shape"
  input: "a"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/mul_5_grad/Shape_1"
  op: "Shape"
  input: "eval_net_1/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/mul_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/mul_5_grad/Shape"
  input: "gradients_1/mul_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/mul_5_grad/Mul"
  op: "Mul"
  input: "gradients_1/Sum_1_grad/BroadcastTo"
  input: "eval_net_1/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/mul_5_grad/Sum"
  op: "Sum"
  input: "gradients_1/mul_5_grad/Mul"
  input: "gradients_1/mul_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/mul_5_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/mul_5_grad/Sum"
  input: "gradients_1/mul_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/mul_5_grad/Mul_1"
  op: "Mul"
  input: "a"
  input: "gradients_1/Sum_1_grad/BroadcastTo"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/mul_5_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/mul_5_grad/Mul_1"
  input: "gradients_1/mul_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/mul_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/mul_5_grad/Sum_1"
  input: "gradients_1/mul_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/mul_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/mul_5_grad/Reshape"
  input: "^gradients_1/mul_5_grad/Reshape_1"
}
node {
  name: "gradients_1/mul_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/mul_5_grad/Reshape"
  input: "^gradients_1/mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/mul_5_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/mul_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/mul_5_grad/Reshape_1"
  input: "^gradients_1/mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/mul_5_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/mul_3_grad/Shape"
  op: "Shape"
  input: "mul_3/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/mul_3_grad/Shape_1"
  op: "Shape"
  input: "Max_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/mul_3_grad/Shape"
  input: "gradients_1/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients_1/mul_4_grad/tuple/control_dependency"
  input: "Max_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients_1/mul_3_grad/Mul"
  input: "gradients_1/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/mul_3_grad/Sum"
  input: "gradients_1/mul_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/mul_3_grad/Mul_1"
  op: "Mul"
  input: "mul_3/x"
  input: "gradients_1/mul_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/mul_3_grad/Mul_1"
  input: "gradients_1/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/mul_3_grad/Sum_1"
  input: "gradients_1/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/mul_3_grad/Reshape"
  input: "^gradients_1/mul_3_grad/Reshape_1"
}
node {
  name: "gradients_1/mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/mul_3_grad/Reshape"
  input: "^gradients_1/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/mul_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/mul_3_grad/Reshape_1"
  input: "^gradients_1/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/mul_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_4_grad/Shape"
  op: "Shape"
  input: "eval_net_1/matmul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_4_grad/Shape_1"
  op: "Shape"
  input: "eval_net_1/q_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/eval_net_1/add_4_grad/Shape"
  input: "gradients_1/eval_net_1/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_4_grad/Sum"
  op: "Sum"
  input: "gradients_1/mul_5_grad/tuple/control_dependency_1"
  input: "gradients_1/eval_net_1/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/eval_net_1/add_4_grad/Sum"
  input: "gradients_1/eval_net_1/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/mul_5_grad/tuple/control_dependency_1"
  input: "gradients_1/eval_net_1/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/eval_net_1/add_4_grad/Sum_1"
  input: "gradients_1/eval_net_1/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/eval_net_1/add_4_grad/Reshape"
  input: "^gradients_1/eval_net_1/add_4_grad/Reshape_1"
}
node {
  name: "gradients_1/eval_net_1/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/eval_net_1/add_4_grad/Reshape"
  input: "^gradients_1/eval_net_1/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/eval_net_1/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/eval_net_1/add_4_grad/Reshape_1"
  input: "^gradients_1/eval_net_1/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/eval_net_1/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/Max_1_grad/Shape"
  op: "Shape"
  input: "target_net_1/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/Max_1_grad/Shape_1"
  op: "Shape"
  input: "Max_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/Max_1_grad/Equal"
  op: "Equal"
  input: "Max_1"
  input: "target_net_1/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/Max_1_grad/Cast"
  op: "Cast"
  input: "gradients_1/Max_1_grad/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/Max_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/Max_1_grad/Cast"
  input: "Max_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/Max_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/Max_1_grad/Sum"
  input: "gradients_1/Max_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/Max_1_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/Max_1_grad/Cast"
  input: "gradients_1/Max_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/Max_1_grad/mul"
  op: "Mul"
  input: "gradients_1/Max_1_grad/truediv"
  input: "gradients_1/mul_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/eval_net_1/matmul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/eval_net_1/add_4_grad/tuple/control_dependency"
  input: "eval_net_1/q_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/eval_net_1/matmul_1_grad/MatMul_1"
  op: "MatMul"
  input: "eval_net_1/Relu_3"
  input: "gradients_1/eval_net_1/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/eval_net_1/matmul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/eval_net_1/matmul_1_grad/MatMul"
  input: "^gradients_1/eval_net_1/matmul_1_grad/MatMul_1"
}
node {
  name: "gradients_1/eval_net_1/matmul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/eval_net_1/matmul_1_grad/MatMul"
  input: "^gradients_1/eval_net_1/matmul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/eval_net_1/matmul_1_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients_1/eval_net_1/matmul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/eval_net_1/matmul_1_grad/MatMul_1"
  input: "^gradients_1/eval_net_1/matmul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/eval_net_1/matmul_1_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_4_grad/Shape"
  op: "Shape"
  input: "target_net_1/matmul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_4_grad/Shape_1"
  op: "Shape"
  input: "target_net_1/q_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/target_net_1/add_4_grad/Shape"
  input: "gradients_1/target_net_1/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_4_grad/Sum"
  op: "Sum"
  input: "gradients_1/Max_1_grad/mul"
  input: "gradients_1/target_net_1/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/target_net_1/add_4_grad/Sum"
  input: "gradients_1/target_net_1/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/Max_1_grad/mul"
  input: "gradients_1/target_net_1/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/target_net_1/add_4_grad/Sum_1"
  input: "gradients_1/target_net_1/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/target_net_1/add_4_grad/Reshape"
  input: "^gradients_1/target_net_1/add_4_grad/Reshape_1"
}
node {
  name: "gradients_1/target_net_1/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/target_net_1/add_4_grad/Reshape"
  input: "^gradients_1/target_net_1/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/target_net_1/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/target_net_1/add_4_grad/Reshape_1"
  input: "^gradients_1/target_net_1/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/target_net_1/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/eval_net_1/Relu_3_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/eval_net_1/matmul_1_grad/tuple/control_dependency"
  input: "eval_net_1/Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/target_net_1/matmul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/target_net_1/add_4_grad/tuple/control_dependency"
  input: "target_net_1/q_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/target_net_1/matmul_1_grad/MatMul_1"
  op: "MatMul"
  input: "target_net_1/Relu_3"
  input: "gradients_1/target_net_1/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/target_net_1/matmul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/target_net_1/matmul_1_grad/MatMul"
  input: "^gradients_1/target_net_1/matmul_1_grad/MatMul_1"
}
node {
  name: "gradients_1/target_net_1/matmul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/target_net_1/matmul_1_grad/MatMul"
  input: "^gradients_1/target_net_1/matmul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/target_net_1/matmul_1_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients_1/target_net_1/matmul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/target_net_1/matmul_1_grad/MatMul_1"
  input: "^gradients_1/target_net_1/matmul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/target_net_1/matmul_1_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_3_grad/Shape"
  op: "Shape"
  input: "eval_net_1/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_3_grad/Shape_1"
  op: "Shape"
  input: "eval_net_1/Assign_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/eval_net_1/add_3_grad/Shape"
  input: "gradients_1/eval_net_1/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_3_grad/Sum"
  op: "Sum"
  input: "gradients_1/eval_net_1/Relu_3_grad/ReluGrad"
  input: "gradients_1/eval_net_1/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/eval_net_1/add_3_grad/Sum"
  input: "gradients_1/eval_net_1/add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/eval_net_1/Relu_3_grad/ReluGrad"
  input: "gradients_1/eval_net_1/add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/eval_net_1/add_3_grad/Sum_1"
  input: "gradients_1/eval_net_1/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/eval_net_1/add_3_grad/Reshape"
  input: "^gradients_1/eval_net_1/add_3_grad/Reshape_1"
}
node {
  name: "gradients_1/eval_net_1/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/eval_net_1/add_3_grad/Reshape"
  input: "^gradients_1/eval_net_1/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/eval_net_1/add_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/eval_net_1/add_3_grad/Reshape_1"
  input: "^gradients_1/eval_net_1/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/eval_net_1/add_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/target_net_1/Relu_3_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/target_net_1/matmul_1_grad/tuple/control_dependency"
  input: "target_net_1/Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/eval_net_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/eval_net_1/add_3_grad/tuple/control_dependency"
  input: "eval_net_1/Assign_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/eval_net_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "eval_net_1/Reshape"
  input: "gradients_1/eval_net_1/add_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/eval_net_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/eval_net_1/MatMul_grad/MatMul"
  input: "^gradients_1/eval_net_1/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_1/eval_net_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/eval_net_1/MatMul_grad/MatMul"
  input: "^gradients_1/eval_net_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/eval_net_1/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients_1/eval_net_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/eval_net_1/MatMul_grad/MatMul_1"
  input: "^gradients_1/eval_net_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/eval_net_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_3_grad/Shape"
  op: "Shape"
  input: "target_net_1/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_3_grad/Shape_1"
  op: "Shape"
  input: "target_net_1/Assign_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/target_net_1/add_3_grad/Shape"
  input: "gradients_1/target_net_1/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_3_grad/Sum"
  op: "Sum"
  input: "gradients_1/target_net_1/Relu_3_grad/ReluGrad"
  input: "gradients_1/target_net_1/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/target_net_1/add_3_grad/Sum"
  input: "gradients_1/target_net_1/add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/target_net_1/Relu_3_grad/ReluGrad"
  input: "gradients_1/target_net_1/add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/target_net_1/add_3_grad/Sum_1"
  input: "gradients_1/target_net_1/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/target_net_1/add_3_grad/Reshape"
  input: "^gradients_1/target_net_1/add_3_grad/Reshape_1"
}
node {
  name: "gradients_1/target_net_1/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/target_net_1/add_3_grad/Reshape"
  input: "^gradients_1/target_net_1/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/target_net_1/add_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/target_net_1/add_3_grad/Reshape_1"
  input: "^gradients_1/target_net_1/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/target_net_1/add_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/eval_net_1/Reshape_grad/Shape"
  op: "Shape"
  input: "eval_net_1/Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/eval_net_1/MatMul_grad/tuple/control_dependency"
  input: "gradients_1/eval_net_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/target_net_1/add_3_grad/tuple/control_dependency"
  input: "target_net_1/Assign_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/target_net_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "target_net_1/Reshape"
  input: "gradients_1/target_net_1/add_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/target_net_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/target_net_1/MatMul_grad/MatMul"
  input: "^gradients_1/target_net_1/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_1/target_net_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/target_net_1/MatMul_grad/MatMul"
  input: "^gradients_1/target_net_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/target_net_1/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients_1/target_net_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/target_net_1/MatMul_grad/MatMul_1"
  input: "^gradients_1/target_net_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/target_net_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients_1/eval_net_1/Relu_2_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/eval_net_1/Reshape_grad/Reshape"
  input: "eval_net_1/Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/target_net_1/Reshape_grad/Shape"
  op: "Shape"
  input: "target_net_1/Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/target_net_1/MatMul_grad/tuple/control_dependency"
  input: "gradients_1/target_net_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_2_grad/Shape"
  op: "Shape"
  input: "eval_net_1/Conv2D_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_2_grad/Shape_1"
  op: "Shape"
  input: "eval_net_1/Assign_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/eval_net_1/add_2_grad/Shape"
  input: "gradients_1/eval_net_1/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_2_grad/Sum"
  op: "Sum"
  input: "gradients_1/eval_net_1/Relu_2_grad/ReluGrad"
  input: "gradients_1/eval_net_1/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/eval_net_1/add_2_grad/Sum"
  input: "gradients_1/eval_net_1/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/eval_net_1/Relu_2_grad/ReluGrad"
  input: "gradients_1/eval_net_1/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/eval_net_1/add_2_grad/Sum_1"
  input: "gradients_1/eval_net_1/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/eval_net_1/add_2_grad/Reshape"
  input: "^gradients_1/eval_net_1/add_2_grad/Reshape_1"
}
node {
  name: "gradients_1/eval_net_1/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/eval_net_1/add_2_grad/Reshape"
  input: "^gradients_1/eval_net_1/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/eval_net_1/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/eval_net_1/add_2_grad/Reshape_1"
  input: "^gradients_1/eval_net_1/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/eval_net_1/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/target_net_1/Relu_2_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/target_net_1/Reshape_grad/Reshape"
  input: "target_net_1/Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/eval_net_1/Conv2D_2_grad/ShapeN"
  op: "ShapeN"
  input: "eval_net_1/Relu_1"
  input: "eval_net_1/Assign_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/Conv2D_2_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_1/eval_net_1/Conv2D_2_grad/ShapeN"
  input: "eval_net_1/Assign_4"
  input: "gradients_1/eval_net_1/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/eval_net_1/Conv2D_2_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "eval_net_1/Relu_1"
  input: "gradients_1/eval_net_1/Conv2D_2_grad/ShapeN:1"
  input: "gradients_1/eval_net_1/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/eval_net_1/Conv2D_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/eval_net_1/Conv2D_2_grad/Conv2DBackpropFilter"
  input: "^gradients_1/eval_net_1/Conv2D_2_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_1/eval_net_1/Conv2D_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/eval_net_1/Conv2D_2_grad/Conv2DBackpropInput"
  input: "^gradients_1/eval_net_1/Conv2D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/eval_net_1/Conv2D_2_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_1/eval_net_1/Conv2D_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/eval_net_1/Conv2D_2_grad/Conv2DBackpropFilter"
  input: "^gradients_1/eval_net_1/Conv2D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/eval_net_1/Conv2D_2_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_2_grad/Shape"
  op: "Shape"
  input: "target_net_1/Conv2D_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_2_grad/Shape_1"
  op: "Shape"
  input: "target_net_1/Assign_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/target_net_1/add_2_grad/Shape"
  input: "gradients_1/target_net_1/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_2_grad/Sum"
  op: "Sum"
  input: "gradients_1/target_net_1/Relu_2_grad/ReluGrad"
  input: "gradients_1/target_net_1/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/target_net_1/add_2_grad/Sum"
  input: "gradients_1/target_net_1/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/target_net_1/Relu_2_grad/ReluGrad"
  input: "gradients_1/target_net_1/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/target_net_1/add_2_grad/Sum_1"
  input: "gradients_1/target_net_1/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/target_net_1/add_2_grad/Reshape"
  input: "^gradients_1/target_net_1/add_2_grad/Reshape_1"
}
node {
  name: "gradients_1/target_net_1/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/target_net_1/add_2_grad/Reshape"
  input: "^gradients_1/target_net_1/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/target_net_1/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/target_net_1/add_2_grad/Reshape_1"
  input: "^gradients_1/target_net_1/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/target_net_1/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/eval_net_1/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/eval_net_1/Conv2D_2_grad/tuple/control_dependency"
  input: "eval_net_1/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/target_net_1/Conv2D_2_grad/ShapeN"
  op: "ShapeN"
  input: "target_net_1/Relu_1"
  input: "target_net_1/Assign_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/Conv2D_2_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_1/target_net_1/Conv2D_2_grad/ShapeN"
  input: "target_net_1/Assign_4"
  input: "gradients_1/target_net_1/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/target_net_1/Conv2D_2_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "target_net_1/Relu_1"
  input: "gradients_1/target_net_1/Conv2D_2_grad/ShapeN:1"
  input: "gradients_1/target_net_1/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/target_net_1/Conv2D_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/target_net_1/Conv2D_2_grad/Conv2DBackpropFilter"
  input: "^gradients_1/target_net_1/Conv2D_2_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_1/target_net_1/Conv2D_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/target_net_1/Conv2D_2_grad/Conv2DBackpropInput"
  input: "^gradients_1/target_net_1/Conv2D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/target_net_1/Conv2D_2_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_1/target_net_1/Conv2D_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/target_net_1/Conv2D_2_grad/Conv2DBackpropFilter"
  input: "^gradients_1/target_net_1/Conv2D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/target_net_1/Conv2D_2_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_1_grad/Shape"
  op: "Shape"
  input: "eval_net_1/Conv2D_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_1_grad/Shape_1"
  op: "Shape"
  input: "eval_net_1/Assign_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/eval_net_1/add_1_grad/Shape"
  input: "gradients_1/eval_net_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/eval_net_1/Relu_1_grad/ReluGrad"
  input: "gradients_1/eval_net_1/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/eval_net_1/add_1_grad/Sum"
  input: "gradients_1/eval_net_1/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/eval_net_1/Relu_1_grad/ReluGrad"
  input: "gradients_1/eval_net_1/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/eval_net_1/add_1_grad/Sum_1"
  input: "gradients_1/eval_net_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/eval_net_1/add_1_grad/Reshape"
  input: "^gradients_1/eval_net_1/add_1_grad/Reshape_1"
}
node {
  name: "gradients_1/eval_net_1/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/eval_net_1/add_1_grad/Reshape"
  input: "^gradients_1/eval_net_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/eval_net_1/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/eval_net_1/add_1_grad/Reshape_1"
  input: "^gradients_1/eval_net_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/eval_net_1/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/target_net_1/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/target_net_1/Conv2D_2_grad/tuple/control_dependency"
  input: "target_net_1/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/eval_net_1/Conv2D_1_grad/ShapeN"
  op: "ShapeN"
  input: "eval_net_1/Relu"
  input: "eval_net_1/Assign_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/Conv2D_1_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_1/eval_net_1/Conv2D_1_grad/ShapeN"
  input: "eval_net_1/Assign_2"
  input: "gradients_1/eval_net_1/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/eval_net_1/Conv2D_1_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "eval_net_1/Relu"
  input: "gradients_1/eval_net_1/Conv2D_1_grad/ShapeN:1"
  input: "gradients_1/eval_net_1/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/eval_net_1/Conv2D_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/eval_net_1/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^gradients_1/eval_net_1/Conv2D_1_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_1/eval_net_1/Conv2D_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/eval_net_1/Conv2D_1_grad/Conv2DBackpropInput"
  input: "^gradients_1/eval_net_1/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/eval_net_1/Conv2D_1_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_1/eval_net_1/Conv2D_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/eval_net_1/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^gradients_1/eval_net_1/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/eval_net_1/Conv2D_1_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_1_grad/Shape"
  op: "Shape"
  input: "target_net_1/Conv2D_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_1_grad/Shape_1"
  op: "Shape"
  input: "target_net_1/Assign_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/target_net_1/add_1_grad/Shape"
  input: "gradients_1/target_net_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/target_net_1/Relu_1_grad/ReluGrad"
  input: "gradients_1/target_net_1/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/target_net_1/add_1_grad/Sum"
  input: "gradients_1/target_net_1/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/target_net_1/Relu_1_grad/ReluGrad"
  input: "gradients_1/target_net_1/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/target_net_1/add_1_grad/Sum_1"
  input: "gradients_1/target_net_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/target_net_1/add_1_grad/Reshape"
  input: "^gradients_1/target_net_1/add_1_grad/Reshape_1"
}
node {
  name: "gradients_1/target_net_1/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/target_net_1/add_1_grad/Reshape"
  input: "^gradients_1/target_net_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/target_net_1/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/target_net_1/add_1_grad/Reshape_1"
  input: "^gradients_1/target_net_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/target_net_1/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/eval_net_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/eval_net_1/Conv2D_1_grad/tuple/control_dependency"
  input: "eval_net_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/target_net_1/Conv2D_1_grad/ShapeN"
  op: "ShapeN"
  input: "target_net_1/Relu"
  input: "target_net_1/Assign_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/Conv2D_1_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_1/target_net_1/Conv2D_1_grad/ShapeN"
  input: "target_net_1/Assign_2"
  input: "gradients_1/target_net_1/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/target_net_1/Conv2D_1_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "target_net_1/Relu"
  input: "gradients_1/target_net_1/Conv2D_1_grad/ShapeN:1"
  input: "gradients_1/target_net_1/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/target_net_1/Conv2D_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/target_net_1/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^gradients_1/target_net_1/Conv2D_1_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_1/target_net_1/Conv2D_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/target_net_1/Conv2D_1_grad/Conv2DBackpropInput"
  input: "^gradients_1/target_net_1/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/target_net_1/Conv2D_1_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_1/target_net_1/Conv2D_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/target_net_1/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^gradients_1/target_net_1/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/target_net_1/Conv2D_1_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_grad/Shape"
  op: "Shape"
  input: "eval_net_1/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_grad/Shape_1"
  op: "Shape"
  input: "eval_net_1/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/eval_net_1/add_grad/Shape"
  input: "gradients_1/eval_net_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_grad/Sum"
  op: "Sum"
  input: "gradients_1/eval_net_1/Relu_grad/ReluGrad"
  input: "gradients_1/eval_net_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/eval_net_1/add_grad/Sum"
  input: "gradients_1/eval_net_1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/eval_net_1/Relu_grad/ReluGrad"
  input: "gradients_1/eval_net_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/eval_net_1/add_grad/Sum_1"
  input: "gradients_1/eval_net_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/eval_net_1/add_grad/Reshape"
  input: "^gradients_1/eval_net_1/add_grad/Reshape_1"
}
node {
  name: "gradients_1/eval_net_1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/eval_net_1/add_grad/Reshape"
  input: "^gradients_1/eval_net_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/eval_net_1/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/eval_net_1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/eval_net_1/add_grad/Reshape_1"
  input: "^gradients_1/eval_net_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/eval_net_1/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/target_net_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/target_net_1/Conv2D_1_grad/tuple/control_dependency"
  input: "target_net_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/eval_net_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "s"
  input: "eval_net_1/Assign"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/eval_net_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_1/eval_net_1/Conv2D_grad/ShapeN"
  input: "eval_net_1/Assign"
  input: "gradients_1/eval_net_1/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/eval_net_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "s"
  input: "gradients_1/eval_net_1/Conv2D_grad/ShapeN:1"
  input: "gradients_1/eval_net_1/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/eval_net_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/eval_net_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients_1/eval_net_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_1/eval_net_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/eval_net_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients_1/eval_net_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/eval_net_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_1/eval_net_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/eval_net_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients_1/eval_net_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/eval_net_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_grad/Shape"
  op: "Shape"
  input: "target_net_1/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_grad/Shape_1"
  op: "Shape"
  input: "target_net_1/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/target_net_1/add_grad/Shape"
  input: "gradients_1/target_net_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_grad/Sum"
  op: "Sum"
  input: "gradients_1/target_net_1/Relu_grad/ReluGrad"
  input: "gradients_1/target_net_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/target_net_1/add_grad/Sum"
  input: "gradients_1/target_net_1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/target_net_1/Relu_grad/ReluGrad"
  input: "gradients_1/target_net_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/target_net_1/add_grad/Sum_1"
  input: "gradients_1/target_net_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/target_net_1/add_grad/Reshape"
  input: "^gradients_1/target_net_1/add_grad/Reshape_1"
}
node {
  name: "gradients_1/target_net_1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/target_net_1/add_grad/Reshape"
  input: "^gradients_1/target_net_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/target_net_1/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/target_net_1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/target_net_1/add_grad/Reshape_1"
  input: "^gradients_1/target_net_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/target_net_1/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/target_net_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "s_"
  input: "target_net_1/Assign"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/target_net_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_1/target_net_1/Conv2D_grad/ShapeN"
  input: "target_net_1/Assign"
  input: "gradients_1/target_net_1/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/target_net_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "s_"
  input: "gradients_1/target_net_1/Conv2D_grad/ShapeN:1"
  input: "gradients_1/target_net_1/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/target_net_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/target_net_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients_1/target_net_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_1/target_net_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/target_net_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients_1/target_net_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/target_net_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_1/target_net_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/target_net_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients_1/target_net_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/target_net_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "beta1_power_1/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power_1/Assign"
  op: "Assign"
  input: "beta1_power_1"
  input: "beta1_power_1/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power_1/read"
  op: "Identity"
  input: "beta1_power_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_b"
      }
    }
  }
}
node {
  name: "beta2_power_1/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power_1/Assign"
  op: "Assign"
  input: "beta2_power_1"
  input: "beta2_power_1/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power_1/read"
  op: "Identity"
  input: "beta2_power_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_b"
      }
    }
  }
}
node {
  name: "eval_net_1/q_w/opt/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "eval_net_1/q_w/opt/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_1/q_w/opt/Initializer/zeros"
  op: "Fill"
  input: "eval_net_1/q_w/opt/Initializer/zeros/shape_as_tensor"
  input: "eval_net_1/q_w/opt/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "eval_net_1/q_w/opt"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_1/q_w/opt/Assign"
  op: "Assign"
  input: "eval_net_1/q_w/opt"
  input: "eval_net_1/q_w/opt/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/q_w/opt/read"
  op: "Identity"
  input: "eval_net_1/q_w/opt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_w"
      }
    }
  }
}
node {
  name: "eval_net_1/q_w/opt_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "eval_net_1/q_w/opt_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_1/q_w/opt_1/Initializer/zeros"
  op: "Fill"
  input: "eval_net_1/q_w/opt_1/Initializer/zeros/shape_as_tensor"
  input: "eval_net_1/q_w/opt_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "eval_net_1/q_w/opt_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_1/q_w/opt_1/Assign"
  op: "Assign"
  input: "eval_net_1/q_w/opt_1"
  input: "eval_net_1/q_w/opt_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/q_w/opt_1/read"
  op: "Identity"
  input: "eval_net_1/q_w/opt_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_w"
      }
    }
  }
}
node {
  name: "eval_net_1/q_b/opt/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_1/q_b/opt"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_1/q_b/opt/Assign"
  op: "Assign"
  input: "eval_net_1/q_b/opt"
  input: "eval_net_1/q_b/opt/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/q_b/opt/read"
  op: "Identity"
  input: "eval_net_1/q_b/opt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_b"
      }
    }
  }
}
node {
  name: "eval_net_1/q_b/opt_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_1/q_b/opt_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_1/q_b/opt_1/Assign"
  op: "Assign"
  input: "eval_net_1/q_b/opt_1"
  input: "eval_net_1/q_b/opt_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_1/q_b/opt_1/read"
  op: "Identity"
  input: "eval_net_1/q_b/opt_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_b"
      }
    }
  }
}
node {
  name: "target_net_1/q_w/opt/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "target_net_1/q_w/opt/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_1/q_w/opt/Initializer/zeros"
  op: "Fill"
  input: "target_net_1/q_w/opt/Initializer/zeros/shape_as_tensor"
  input: "target_net_1/q_w/opt/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "target_net_1/q_w/opt"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_1/q_w/opt/Assign"
  op: "Assign"
  input: "target_net_1/q_w/opt"
  input: "target_net_1/q_w/opt/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/q_w/opt/read"
  op: "Identity"
  input: "target_net_1/q_w/opt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_w"
      }
    }
  }
}
node {
  name: "target_net_1/q_w/opt_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "target_net_1/q_w/opt_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_1/q_w/opt_1/Initializer/zeros"
  op: "Fill"
  input: "target_net_1/q_w/opt_1/Initializer/zeros/shape_as_tensor"
  input: "target_net_1/q_w/opt_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "target_net_1/q_w/opt_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_1/q_w/opt_1/Assign"
  op: "Assign"
  input: "target_net_1/q_w/opt_1"
  input: "target_net_1/q_w/opt_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/q_w/opt_1/read"
  op: "Identity"
  input: "target_net_1/q_w/opt_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_w"
      }
    }
  }
}
node {
  name: "target_net_1/q_b/opt/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_1/q_b/opt"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_1/q_b/opt/Assign"
  op: "Assign"
  input: "target_net_1/q_b/opt"
  input: "target_net_1/q_b/opt/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/q_b/opt/read"
  op: "Identity"
  input: "target_net_1/q_b/opt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_b"
      }
    }
  }
}
node {
  name: "target_net_1/q_b/opt_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_1/q_b/opt_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_1/q_b/opt_1/Assign"
  op: "Assign"
  input: "target_net_1/q_b/opt_1"
  input: "target_net_1/q_b/opt_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_1/q_b/opt_1/read"
  op: "Identity"
  input: "target_net_1/q_b/opt_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_b"
      }
    }
  }
}
node {
  name: "opt/learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "opt/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "opt/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "opt/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "opt/update_eval_net_1/q_w/ApplyAdam"
  op: "ApplyAdam"
  input: "eval_net_1/q_w"
  input: "eval_net_1/q_w/opt"
  input: "eval_net_1/q_w/opt_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "opt/learning_rate"
  input: "opt/beta1"
  input: "opt/beta2"
  input: "opt/epsilon"
  input: "gradients_1/eval_net_1/matmul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "opt/update_eval_net_1/q_b/ApplyAdam"
  op: "ApplyAdam"
  input: "eval_net_1/q_b"
  input: "eval_net_1/q_b/opt"
  input: "eval_net_1/q_b/opt_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "opt/learning_rate"
  input: "opt/beta1"
  input: "opt/beta2"
  input: "opt/epsilon"
  input: "gradients_1/eval_net_1/add_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "opt/update_target_net_1/q_w/ApplyAdam"
  op: "ApplyAdam"
  input: "target_net_1/q_w"
  input: "target_net_1/q_w/opt"
  input: "target_net_1/q_w/opt_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "opt/learning_rate"
  input: "opt/beta1"
  input: "opt/beta2"
  input: "opt/epsilon"
  input: "gradients_1/target_net_1/matmul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "opt/update_target_net_1/q_b/ApplyAdam"
  op: "ApplyAdam"
  input: "target_net_1/q_b"
  input: "target_net_1/q_b/opt"
  input: "target_net_1/q_b/opt_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "opt/learning_rate"
  input: "opt/beta1"
  input: "opt/beta2"
  input: "opt/epsilon"
  input: "gradients_1/target_net_1/add_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "opt/mul"
  op: "Mul"
  input: "beta1_power_1/read"
  input: "opt/beta1"
  input: "^opt/update_eval_net_1/q_b/ApplyAdam"
  input: "^opt/update_eval_net_1/q_w/ApplyAdam"
  input: "^opt/update_target_net_1/q_b/ApplyAdam"
  input: "^opt/update_target_net_1/q_w/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_b"
      }
    }
  }
}
node {
  name: "opt/Assign"
  op: "Assign"
  input: "beta1_power_1"
  input: "opt/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "opt/mul_1"
  op: "Mul"
  input: "beta2_power_1/read"
  input: "opt/beta2"
  input: "^opt/update_eval_net_1/q_b/ApplyAdam"
  input: "^opt/update_eval_net_1/q_w/ApplyAdam"
  input: "^opt/update_target_net_1/q_b/ApplyAdam"
  input: "^opt/update_target_net_1/q_w/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_b"
      }
    }
  }
}
node {
  name: "opt/Assign_1"
  op: "Assign"
  input: "beta2_power_1"
  input: "opt/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_1/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "opt"
  op: "NoOp"
  input: "^opt/Assign"
  input: "^opt/Assign_1"
  input: "^opt/update_eval_net_1/q_b/ApplyAdam"
  input: "^opt/update_eval_net_1/q_w/ApplyAdam"
  input: "^opt/update_target_net_1/q_b/ApplyAdam"
  input: "^opt/update_target_net_1/q_w/ApplyAdam"
}
node {
  name: "Assign_30"
  op: "Assign"
  input: "target_net_1/w1"
  input: "eval_net_1/w1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_31"
  op: "Assign"
  input: "target_net_1/b1"
  input: "eval_net_1/b1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_32"
  op: "Assign"
  input: "target_net_1/w2"
  input: "eval_net_1/w2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_33"
  op: "Assign"
  input: "target_net_1/b2"
  input: "eval_net_1/b2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_34"
  op: "Assign"
  input: "target_net_1/w3"
  input: "eval_net_1/w3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/w3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_35"
  op: "Assign"
  input: "target_net_1/b3"
  input: "eval_net_1/b3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/b3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_36"
  op: "Assign"
  input: "target_net_1/fc_w1"
  input: "eval_net_1/fc_w1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/fc_w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_37"
  op: "Assign"
  input: "target_net_1/fc_b1"
  input: "eval_net_1/fc_b1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/fc_b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_38"
  op: "Assign"
  input: "target_net_1/q_w"
  input: "eval_net_1/q_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_39"
  op: "Assign"
  input: "target_net_1/q_b"
  input: "eval_net_1/q_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_40"
  op: "Assign"
  input: "target_net_1/q_w/opt"
  input: "eval_net_1/q_w/opt/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_41"
  op: "Assign"
  input: "target_net_1/q_w/opt_1"
  input: "eval_net_1/q_w/opt_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_42"
  op: "Assign"
  input: "target_net_1/q_b/opt"
  input: "eval_net_1/q_b/opt/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_43"
  op: "Assign"
  input: "target_net_1/q_b/opt_1"
  input: "eval_net_1/q_b/opt_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_1/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^beta1_power/Assign"
  input: "^beta1_power_1/Assign"
  input: "^beta2_power/Assign"
  input: "^beta2_power_1/Assign"
  input: "^eval_net_0/b1/Adam/Assign"
  input: "^eval_net_0/b1/Adam_1/Assign"
  input: "^eval_net_0/b1/Assign"
  input: "^eval_net_0/b2/Adam/Assign"
  input: "^eval_net_0/b2/Adam_1/Assign"
  input: "^eval_net_0/b2/Assign"
  input: "^eval_net_0/b3/Adam/Assign"
  input: "^eval_net_0/b3/Adam_1/Assign"
  input: "^eval_net_0/b3/Assign"
  input: "^eval_net_0/fc_b1/Adam/Assign"
  input: "^eval_net_0/fc_b1/Adam_1/Assign"
  input: "^eval_net_0/fc_b1/Assign"
  input: "^eval_net_0/fc_w1/Adam/Assign"
  input: "^eval_net_0/fc_w1/Adam_1/Assign"
  input: "^eval_net_0/fc_w1/Assign"
  input: "^eval_net_0/q_b/Adam/Assign"
  input: "^eval_net_0/q_b/Adam_1/Assign"
  input: "^eval_net_0/q_b/Assign"
  input: "^eval_net_0/q_w/Adam/Assign"
  input: "^eval_net_0/q_w/Adam_1/Assign"
  input: "^eval_net_0/q_w/Assign"
  input: "^eval_net_0/w1/Adam/Assign"
  input: "^eval_net_0/w1/Adam_1/Assign"
  input: "^eval_net_0/w1/Assign"
  input: "^eval_net_0/w2/Adam/Assign"
  input: "^eval_net_0/w2/Adam_1/Assign"
  input: "^eval_net_0/w2/Assign"
  input: "^eval_net_0/w3/Adam/Assign"
  input: "^eval_net_0/w3/Adam_1/Assign"
  input: "^eval_net_0/w3/Assign"
  input: "^eval_net_1/b1/Assign"
  input: "^eval_net_1/b2/Assign"
  input: "^eval_net_1/b3/Assign"
  input: "^eval_net_1/fc_b1/Assign"
  input: "^eval_net_1/fc_w1/Assign"
  input: "^eval_net_1/q_b/Assign"
  input: "^eval_net_1/q_b/opt/Assign"
  input: "^eval_net_1/q_b/opt_1/Assign"
  input: "^eval_net_1/q_w/Assign"
  input: "^eval_net_1/q_w/opt/Assign"
  input: "^eval_net_1/q_w/opt_1/Assign"
  input: "^eval_net_1/w1/Assign"
  input: "^eval_net_1/w2/Assign"
  input: "^eval_net_1/w3/Assign"
  input: "^target_net_0/b1/Adam/Assign"
  input: "^target_net_0/b1/Adam_1/Assign"
  input: "^target_net_0/b1/Assign"
  input: "^target_net_0/b2/Adam/Assign"
  input: "^target_net_0/b2/Adam_1/Assign"
  input: "^target_net_0/b2/Assign"
  input: "^target_net_0/b3/Adam/Assign"
  input: "^target_net_0/b3/Adam_1/Assign"
  input: "^target_net_0/b3/Assign"
  input: "^target_net_0/fc_b1/Adam/Assign"
  input: "^target_net_0/fc_b1/Adam_1/Assign"
  input: "^target_net_0/fc_b1/Assign"
  input: "^target_net_0/fc_w1/Adam/Assign"
  input: "^target_net_0/fc_w1/Adam_1/Assign"
  input: "^target_net_0/fc_w1/Assign"
  input: "^target_net_0/q_b/Adam/Assign"
  input: "^target_net_0/q_b/Adam_1/Assign"
  input: "^target_net_0/q_b/Assign"
  input: "^target_net_0/q_w/Adam/Assign"
  input: "^target_net_0/q_w/Adam_1/Assign"
  input: "^target_net_0/q_w/Assign"
  input: "^target_net_0/w1/Adam/Assign"
  input: "^target_net_0/w1/Adam_1/Assign"
  input: "^target_net_0/w1/Assign"
  input: "^target_net_0/w2/Adam/Assign"
  input: "^target_net_0/w2/Adam_1/Assign"
  input: "^target_net_0/w2/Assign"
  input: "^target_net_0/w3/Adam/Assign"
  input: "^target_net_0/w3/Adam_1/Assign"
  input: "^target_net_0/w3/Assign"
  input: "^target_net_1/b1/Assign"
  input: "^target_net_1/b2/Assign"
  input: "^target_net_1/b3/Assign"
  input: "^target_net_1/fc_b1/Assign"
  input: "^target_net_1/fc_w1/Assign"
  input: "^target_net_1/q_b/Assign"
  input: "^target_net_1/q_b/opt/Assign"
  input: "^target_net_1/q_b/opt_1/Assign"
  input: "^target_net_1/q_w/Assign"
  input: "^target_net_1/q_w/opt/Assign"
  input: "^target_net_1/q_w/opt_1/Assign"
  input: "^target_net_1/w1/Assign"
  input: "^target_net_1/w2/Assign"
  input: "^target_net_1/w3/Assign"
}
node {
  name: "eval_net_2/w1/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "eval_net_2/w1/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.051754917949438095
      }
    }
  }
}
node {
  name: "eval_net_2/w1/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.051754917949438095
      }
    }
  }
}
node {
  name: "eval_net_2/w1/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "eval_net_2/w1/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "eval_net_2/w1/Initializer/random_uniform/sub"
  op: "Sub"
  input: "eval_net_2/w1/Initializer/random_uniform/max"
  input: "eval_net_2/w1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w1"
      }
    }
  }
}
node {
  name: "eval_net_2/w1/Initializer/random_uniform/mul"
  op: "Mul"
  input: "eval_net_2/w1/Initializer/random_uniform/RandomUniform"
  input: "eval_net_2/w1/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w1"
      }
    }
  }
}
node {
  name: "eval_net_2/w1/Initializer/random_uniform"
  op: "Add"
  input: "eval_net_2/w1/Initializer/random_uniform/mul"
  input: "eval_net_2/w1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w1"
      }
    }
  }
}
node {
  name: "eval_net_2/w1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_2/w1/Assign"
  op: "Assign"
  input: "eval_net_2/w1"
  input: "eval_net_2/w1/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/w1/read"
  op: "Identity"
  input: "eval_net_2/w1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w1"
      }
    }
  }
}
node {
  name: "eval_net_2/Assign"
  op: "Assign"
  input: "eval_net_2/w1"
  input: "target_net_1/Assign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/b1/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "eval_net_2/b1/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3061862289905548
      }
    }
  }
}
node {
  name: "eval_net_2/b1/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3061862289905548
      }
    }
  }
}
node {
  name: "eval_net_2/b1/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "eval_net_2/b1/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "eval_net_2/b1/Initializer/random_uniform/sub"
  op: "Sub"
  input: "eval_net_2/b1/Initializer/random_uniform/max"
  input: "eval_net_2/b1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b1"
      }
    }
  }
}
node {
  name: "eval_net_2/b1/Initializer/random_uniform/mul"
  op: "Mul"
  input: "eval_net_2/b1/Initializer/random_uniform/RandomUniform"
  input: "eval_net_2/b1/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b1"
      }
    }
  }
}
node {
  name: "eval_net_2/b1/Initializer/random_uniform"
  op: "Add"
  input: "eval_net_2/b1/Initializer/random_uniform/mul"
  input: "eval_net_2/b1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b1"
      }
    }
  }
}
node {
  name: "eval_net_2/b1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_2/b1/Assign"
  op: "Assign"
  input: "eval_net_2/b1"
  input: "eval_net_2/b1/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/b1/read"
  op: "Identity"
  input: "eval_net_2/b1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b1"
      }
    }
  }
}
node {
  name: "eval_net_2/Assign_1"
  op: "Assign"
  input: "eval_net_2/b1"
  input: "target_net_1/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/Conv2D"
  op: "Conv2D"
  input: "s"
  input: "eval_net_2/Assign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/add"
  op: "AddV2"
  input: "eval_net_2/Conv2D"
  input: "eval_net_2/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_2/Relu"
  op: "Relu"
  input: "eval_net_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_2/w2/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "eval_net_2/w2/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "eval_net_2/w2/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "eval_net_2/w2/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "eval_net_2/w2/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "eval_net_2/w2/Initializer/random_uniform/sub"
  op: "Sub"
  input: "eval_net_2/w2/Initializer/random_uniform/max"
  input: "eval_net_2/w2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w2"
      }
    }
  }
}
node {
  name: "eval_net_2/w2/Initializer/random_uniform/mul"
  op: "Mul"
  input: "eval_net_2/w2/Initializer/random_uniform/RandomUniform"
  input: "eval_net_2/w2/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w2"
      }
    }
  }
}
node {
  name: "eval_net_2/w2/Initializer/random_uniform"
  op: "Add"
  input: "eval_net_2/w2/Initializer/random_uniform/mul"
  input: "eval_net_2/w2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w2"
      }
    }
  }
}
node {
  name: "eval_net_2/w2"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_2/w2/Assign"
  op: "Assign"
  input: "eval_net_2/w2"
  input: "eval_net_2/w2/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/w2/read"
  op: "Identity"
  input: "eval_net_2/w2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w2"
      }
    }
  }
}
node {
  name: "eval_net_2/Assign_2"
  op: "Assign"
  input: "eval_net_2/w2"
  input: "target_net_1/Assign_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/b2/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "eval_net_2/b2/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "eval_net_2/b2/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "eval_net_2/b2/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "eval_net_2/b2/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "eval_net_2/b2/Initializer/random_uniform/sub"
  op: "Sub"
  input: "eval_net_2/b2/Initializer/random_uniform/max"
  input: "eval_net_2/b2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b2"
      }
    }
  }
}
node {
  name: "eval_net_2/b2/Initializer/random_uniform/mul"
  op: "Mul"
  input: "eval_net_2/b2/Initializer/random_uniform/RandomUniform"
  input: "eval_net_2/b2/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b2"
      }
    }
  }
}
node {
  name: "eval_net_2/b2/Initializer/random_uniform"
  op: "Add"
  input: "eval_net_2/b2/Initializer/random_uniform/mul"
  input: "eval_net_2/b2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b2"
      }
    }
  }
}
node {
  name: "eval_net_2/b2"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_2/b2/Assign"
  op: "Assign"
  input: "eval_net_2/b2"
  input: "eval_net_2/b2/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/b2/read"
  op: "Identity"
  input: "eval_net_2/b2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b2"
      }
    }
  }
}
node {
  name: "eval_net_2/Assign_3"
  op: "Assign"
  input: "eval_net_2/b2"
  input: "target_net_1/Assign_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/Conv2D_1"
  op: "Conv2D"
  input: "eval_net_2/Relu"
  input: "eval_net_2/Assign_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/add_1"
  op: "AddV2"
  input: "eval_net_2/Conv2D_1"
  input: "eval_net_2/Assign_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_2/Relu_1"
  op: "Relu"
  input: "eval_net_2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_2/w3/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "eval_net_2/w3/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "eval_net_2/w3/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "eval_net_2/w3/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "eval_net_2/w3/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "eval_net_2/w3/Initializer/random_uniform/sub"
  op: "Sub"
  input: "eval_net_2/w3/Initializer/random_uniform/max"
  input: "eval_net_2/w3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w3"
      }
    }
  }
}
node {
  name: "eval_net_2/w3/Initializer/random_uniform/mul"
  op: "Mul"
  input: "eval_net_2/w3/Initializer/random_uniform/RandomUniform"
  input: "eval_net_2/w3/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w3"
      }
    }
  }
}
node {
  name: "eval_net_2/w3/Initializer/random_uniform"
  op: "Add"
  input: "eval_net_2/w3/Initializer/random_uniform/mul"
  input: "eval_net_2/w3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w3"
      }
    }
  }
}
node {
  name: "eval_net_2/w3"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_2/w3/Assign"
  op: "Assign"
  input: "eval_net_2/w3"
  input: "eval_net_2/w3/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/w3/read"
  op: "Identity"
  input: "eval_net_2/w3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w3"
      }
    }
  }
}
node {
  name: "eval_net_2/Assign_4"
  op: "Assign"
  input: "eval_net_2/w3"
  input: "target_net_1/Assign_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/w3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/b3/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "eval_net_2/b3/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "eval_net_2/b3/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "eval_net_2/b3/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "eval_net_2/b3/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "eval_net_2/b3/Initializer/random_uniform/sub"
  op: "Sub"
  input: "eval_net_2/b3/Initializer/random_uniform/max"
  input: "eval_net_2/b3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b3"
      }
    }
  }
}
node {
  name: "eval_net_2/b3/Initializer/random_uniform/mul"
  op: "Mul"
  input: "eval_net_2/b3/Initializer/random_uniform/RandomUniform"
  input: "eval_net_2/b3/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b3"
      }
    }
  }
}
node {
  name: "eval_net_2/b3/Initializer/random_uniform"
  op: "Add"
  input: "eval_net_2/b3/Initializer/random_uniform/mul"
  input: "eval_net_2/b3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b3"
      }
    }
  }
}
node {
  name: "eval_net_2/b3"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_2/b3/Assign"
  op: "Assign"
  input: "eval_net_2/b3"
  input: "eval_net_2/b3/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/b3/read"
  op: "Identity"
  input: "eval_net_2/b3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b3"
      }
    }
  }
}
node {
  name: "eval_net_2/Assign_5"
  op: "Assign"
  input: "eval_net_2/b3"
  input: "target_net_1/Assign_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/b3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/Conv2D_2"
  op: "Conv2D"
  input: "eval_net_2/Relu_1"
  input: "eval_net_2/Assign_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/add_2"
  op: "AddV2"
  input: "eval_net_2/Conv2D_2"
  input: "eval_net_2/Assign_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_2/Relu_2"
  op: "Relu"
  input: "eval_net_2/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_2/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\207\001\000"
      }
    }
  }
}
node {
  name: "eval_net_2/Reshape"
  op: "Reshape"
  input: "eval_net_2/Relu_2"
  input: "eval_net_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "eval_net_2/fc_w1/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\207\001\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "eval_net_2/fc_w1/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.007722525857388973
      }
    }
  }
}
node {
  name: "eval_net_2/fc_w1/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.007722525857388973
      }
    }
  }
}
node {
  name: "eval_net_2/fc_w1/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "eval_net_2/fc_w1/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "eval_net_2/fc_w1/Initializer/random_uniform/sub"
  op: "Sub"
  input: "eval_net_2/fc_w1/Initializer/random_uniform/max"
  input: "eval_net_2/fc_w1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/fc_w1"
      }
    }
  }
}
node {
  name: "eval_net_2/fc_w1/Initializer/random_uniform/mul"
  op: "Mul"
  input: "eval_net_2/fc_w1/Initializer/random_uniform/RandomUniform"
  input: "eval_net_2/fc_w1/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/fc_w1"
      }
    }
  }
}
node {
  name: "eval_net_2/fc_w1/Initializer/random_uniform"
  op: "Add"
  input: "eval_net_2/fc_w1/Initializer/random_uniform/mul"
  input: "eval_net_2/fc_w1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/fc_w1"
      }
    }
  }
}
node {
  name: "eval_net_2/fc_w1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/fc_w1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100096
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_2/fc_w1/Assign"
  op: "Assign"
  input: "eval_net_2/fc_w1"
  input: "eval_net_2/fc_w1/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/fc_w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/fc_w1/read"
  op: "Identity"
  input: "eval_net_2/fc_w1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/fc_w1"
      }
    }
  }
}
node {
  name: "eval_net_2/Assign_6"
  op: "Assign"
  input: "eval_net_2/fc_w1"
  input: "target_net_1/Assign_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/fc_w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/fc_b1/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/fc_b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "eval_net_2/fc_b1/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/fc_b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "eval_net_2/fc_b1/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/fc_b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "eval_net_2/fc_b1/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "eval_net_2/fc_b1/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/fc_b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "eval_net_2/fc_b1/Initializer/random_uniform/sub"
  op: "Sub"
  input: "eval_net_2/fc_b1/Initializer/random_uniform/max"
  input: "eval_net_2/fc_b1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/fc_b1"
      }
    }
  }
}
node {
  name: "eval_net_2/fc_b1/Initializer/random_uniform/mul"
  op: "Mul"
  input: "eval_net_2/fc_b1/Initializer/random_uniform/RandomUniform"
  input: "eval_net_2/fc_b1/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/fc_b1"
      }
    }
  }
}
node {
  name: "eval_net_2/fc_b1/Initializer/random_uniform"
  op: "Add"
  input: "eval_net_2/fc_b1/Initializer/random_uniform/mul"
  input: "eval_net_2/fc_b1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/fc_b1"
      }
    }
  }
}
node {
  name: "eval_net_2/fc_b1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/fc_b1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_2/fc_b1/Assign"
  op: "Assign"
  input: "eval_net_2/fc_b1"
  input: "eval_net_2/fc_b1/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/fc_b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/fc_b1/read"
  op: "Identity"
  input: "eval_net_2/fc_b1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/fc_b1"
      }
    }
  }
}
node {
  name: "eval_net_2/Assign_7"
  op: "Assign"
  input: "eval_net_2/fc_b1"
  input: "target_net_1/Assign_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/fc_b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/MatMul"
  op: "MatMul"
  input: "eval_net_2/Reshape"
  input: "eval_net_2/Assign_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "eval_net_2/add_3"
  op: "AddV2"
  input: "eval_net_2/MatMul"
  input: "eval_net_2/Assign_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_2/Relu_3"
  op: "Relu"
  input: "eval_net_2/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_2/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "eval_net_2/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_2/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "eval_net_2/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "eval_net_2/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "eval_net_2/truncated_normal/mul"
  op: "Mul"
  input: "eval_net_2/truncated_normal/TruncatedNormal"
  input: "eval_net_2/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_2/truncated_normal"
  op: "Add"
  input: "eval_net_2/truncated_normal/mul"
  input: "eval_net_2/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "eval_net_2/q_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_2/q_w/Assign"
  op: "Assign"
  input: "eval_net_2/q_w"
  input: "eval_net_2/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/q_w/read"
  op: "Identity"
  input: "eval_net_2/q_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_w"
      }
    }
  }
}
node {
  name: "eval_net_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_2/q_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_2/q_b/Assign"
  op: "Assign"
  input: "eval_net_2/q_b"
  input: "eval_net_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/q_b/read"
  op: "Identity"
  input: "eval_net_2/q_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_b"
      }
    }
  }
}
node {
  name: "eval_net_2/matmul_1"
  op: "MatMul"
  input: "eval_net_2/Relu_3"
  input: "eval_net_2/q_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "eval_net_2/add_4"
  op: "AddV2"
  input: "eval_net_2/matmul_1"
  input: "eval_net_2/q_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_2/w1/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "target_net_2/w1/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.051754917949438095
      }
    }
  }
}
node {
  name: "target_net_2/w1/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.051754917949438095
      }
    }
  }
}
node {
  name: "target_net_2/w1/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "target_net_2/w1/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "target_net_2/w1/Initializer/random_uniform/sub"
  op: "Sub"
  input: "target_net_2/w1/Initializer/random_uniform/max"
  input: "target_net_2/w1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w1"
      }
    }
  }
}
node {
  name: "target_net_2/w1/Initializer/random_uniform/mul"
  op: "Mul"
  input: "target_net_2/w1/Initializer/random_uniform/RandomUniform"
  input: "target_net_2/w1/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w1"
      }
    }
  }
}
node {
  name: "target_net_2/w1/Initializer/random_uniform"
  op: "Add"
  input: "target_net_2/w1/Initializer/random_uniform/mul"
  input: "target_net_2/w1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w1"
      }
    }
  }
}
node {
  name: "target_net_2/w1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_2/w1/Assign"
  op: "Assign"
  input: "target_net_2/w1"
  input: "target_net_2/w1/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/w1/read"
  op: "Identity"
  input: "target_net_2/w1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w1"
      }
    }
  }
}
node {
  name: "target_net_2/Assign"
  op: "Assign"
  input: "target_net_2/w1"
  input: "eval_net_2/Assign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/b1/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "target_net_2/b1/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3061862289905548
      }
    }
  }
}
node {
  name: "target_net_2/b1/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3061862289905548
      }
    }
  }
}
node {
  name: "target_net_2/b1/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "target_net_2/b1/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "target_net_2/b1/Initializer/random_uniform/sub"
  op: "Sub"
  input: "target_net_2/b1/Initializer/random_uniform/max"
  input: "target_net_2/b1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b1"
      }
    }
  }
}
node {
  name: "target_net_2/b1/Initializer/random_uniform/mul"
  op: "Mul"
  input: "target_net_2/b1/Initializer/random_uniform/RandomUniform"
  input: "target_net_2/b1/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b1"
      }
    }
  }
}
node {
  name: "target_net_2/b1/Initializer/random_uniform"
  op: "Add"
  input: "target_net_2/b1/Initializer/random_uniform/mul"
  input: "target_net_2/b1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b1"
      }
    }
  }
}
node {
  name: "target_net_2/b1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_2/b1/Assign"
  op: "Assign"
  input: "target_net_2/b1"
  input: "target_net_2/b1/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/b1/read"
  op: "Identity"
  input: "target_net_2/b1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b1"
      }
    }
  }
}
node {
  name: "target_net_2/Assign_1"
  op: "Assign"
  input: "target_net_2/b1"
  input: "eval_net_2/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/Conv2D"
  op: "Conv2D"
  input: "s_"
  input: "target_net_2/Assign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/add"
  op: "AddV2"
  input: "target_net_2/Conv2D"
  input: "target_net_2/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_2/Relu"
  op: "Relu"
  input: "target_net_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_2/w2/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "target_net_2/w2/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "target_net_2/w2/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "target_net_2/w2/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "target_net_2/w2/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "target_net_2/w2/Initializer/random_uniform/sub"
  op: "Sub"
  input: "target_net_2/w2/Initializer/random_uniform/max"
  input: "target_net_2/w2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w2"
      }
    }
  }
}
node {
  name: "target_net_2/w2/Initializer/random_uniform/mul"
  op: "Mul"
  input: "target_net_2/w2/Initializer/random_uniform/RandomUniform"
  input: "target_net_2/w2/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w2"
      }
    }
  }
}
node {
  name: "target_net_2/w2/Initializer/random_uniform"
  op: "Add"
  input: "target_net_2/w2/Initializer/random_uniform/mul"
  input: "target_net_2/w2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w2"
      }
    }
  }
}
node {
  name: "target_net_2/w2"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_2/w2/Assign"
  op: "Assign"
  input: "target_net_2/w2"
  input: "target_net_2/w2/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/w2/read"
  op: "Identity"
  input: "target_net_2/w2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w2"
      }
    }
  }
}
node {
  name: "target_net_2/Assign_2"
  op: "Assign"
  input: "target_net_2/w2"
  input: "eval_net_2/Assign_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/b2/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "target_net_2/b2/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "target_net_2/b2/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "target_net_2/b2/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "target_net_2/b2/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "target_net_2/b2/Initializer/random_uniform/sub"
  op: "Sub"
  input: "target_net_2/b2/Initializer/random_uniform/max"
  input: "target_net_2/b2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b2"
      }
    }
  }
}
node {
  name: "target_net_2/b2/Initializer/random_uniform/mul"
  op: "Mul"
  input: "target_net_2/b2/Initializer/random_uniform/RandomUniform"
  input: "target_net_2/b2/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b2"
      }
    }
  }
}
node {
  name: "target_net_2/b2/Initializer/random_uniform"
  op: "Add"
  input: "target_net_2/b2/Initializer/random_uniform/mul"
  input: "target_net_2/b2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b2"
      }
    }
  }
}
node {
  name: "target_net_2/b2"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_2/b2/Assign"
  op: "Assign"
  input: "target_net_2/b2"
  input: "target_net_2/b2/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/b2/read"
  op: "Identity"
  input: "target_net_2/b2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b2"
      }
    }
  }
}
node {
  name: "target_net_2/Assign_3"
  op: "Assign"
  input: "target_net_2/b2"
  input: "eval_net_2/Assign_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/Conv2D_1"
  op: "Conv2D"
  input: "target_net_2/Relu"
  input: "target_net_2/Assign_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/add_1"
  op: "AddV2"
  input: "target_net_2/Conv2D_1"
  input: "target_net_2/Assign_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_2/Relu_1"
  op: "Relu"
  input: "target_net_2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_2/w3/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "target_net_2/w3/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "target_net_2/w3/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "target_net_2/w3/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "target_net_2/w3/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "target_net_2/w3/Initializer/random_uniform/sub"
  op: "Sub"
  input: "target_net_2/w3/Initializer/random_uniform/max"
  input: "target_net_2/w3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w3"
      }
    }
  }
}
node {
  name: "target_net_2/w3/Initializer/random_uniform/mul"
  op: "Mul"
  input: "target_net_2/w3/Initializer/random_uniform/RandomUniform"
  input: "target_net_2/w3/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w3"
      }
    }
  }
}
node {
  name: "target_net_2/w3/Initializer/random_uniform"
  op: "Add"
  input: "target_net_2/w3/Initializer/random_uniform/mul"
  input: "target_net_2/w3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w3"
      }
    }
  }
}
node {
  name: "target_net_2/w3"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_2/w3/Assign"
  op: "Assign"
  input: "target_net_2/w3"
  input: "target_net_2/w3/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/w3/read"
  op: "Identity"
  input: "target_net_2/w3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w3"
      }
    }
  }
}
node {
  name: "target_net_2/Assign_4"
  op: "Assign"
  input: "target_net_2/w3"
  input: "eval_net_2/Assign_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/b3/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "target_net_2/b3/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "target_net_2/b3/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "target_net_2/b3/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "target_net_2/b3/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "target_net_2/b3/Initializer/random_uniform/sub"
  op: "Sub"
  input: "target_net_2/b3/Initializer/random_uniform/max"
  input: "target_net_2/b3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b3"
      }
    }
  }
}
node {
  name: "target_net_2/b3/Initializer/random_uniform/mul"
  op: "Mul"
  input: "target_net_2/b3/Initializer/random_uniform/RandomUniform"
  input: "target_net_2/b3/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b3"
      }
    }
  }
}
node {
  name: "target_net_2/b3/Initializer/random_uniform"
  op: "Add"
  input: "target_net_2/b3/Initializer/random_uniform/mul"
  input: "target_net_2/b3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b3"
      }
    }
  }
}
node {
  name: "target_net_2/b3"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_2/b3/Assign"
  op: "Assign"
  input: "target_net_2/b3"
  input: "target_net_2/b3/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/b3/read"
  op: "Identity"
  input: "target_net_2/b3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b3"
      }
    }
  }
}
node {
  name: "target_net_2/Assign_5"
  op: "Assign"
  input: "target_net_2/b3"
  input: "eval_net_2/Assign_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/Conv2D_2"
  op: "Conv2D"
  input: "target_net_2/Relu_1"
  input: "target_net_2/Assign_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/add_2"
  op: "AddV2"
  input: "target_net_2/Conv2D_2"
  input: "target_net_2/Assign_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_2/Relu_2"
  op: "Relu"
  input: "target_net_2/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_2/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\207\001\000"
      }
    }
  }
}
node {
  name: "target_net_2/Reshape"
  op: "Reshape"
  input: "target_net_2/Relu_2"
  input: "target_net_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "target_net_2/fc_w1/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\207\001\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "target_net_2/fc_w1/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.007722525857388973
      }
    }
  }
}
node {
  name: "target_net_2/fc_w1/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.007722525857388973
      }
    }
  }
}
node {
  name: "target_net_2/fc_w1/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "target_net_2/fc_w1/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/fc_w1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "target_net_2/fc_w1/Initializer/random_uniform/sub"
  op: "Sub"
  input: "target_net_2/fc_w1/Initializer/random_uniform/max"
  input: "target_net_2/fc_w1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/fc_w1"
      }
    }
  }
}
node {
  name: "target_net_2/fc_w1/Initializer/random_uniform/mul"
  op: "Mul"
  input: "target_net_2/fc_w1/Initializer/random_uniform/RandomUniform"
  input: "target_net_2/fc_w1/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/fc_w1"
      }
    }
  }
}
node {
  name: "target_net_2/fc_w1/Initializer/random_uniform"
  op: "Add"
  input: "target_net_2/fc_w1/Initializer/random_uniform/mul"
  input: "target_net_2/fc_w1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/fc_w1"
      }
    }
  }
}
node {
  name: "target_net_2/fc_w1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/fc_w1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100096
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_2/fc_w1/Assign"
  op: "Assign"
  input: "target_net_2/fc_w1"
  input: "target_net_2/fc_w1/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/fc_w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/fc_w1/read"
  op: "Identity"
  input: "target_net_2/fc_w1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/fc_w1"
      }
    }
  }
}
node {
  name: "target_net_2/Assign_6"
  op: "Assign"
  input: "target_net_2/fc_w1"
  input: "eval_net_2/Assign_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/fc_w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/fc_b1/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/fc_b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "target_net_2/fc_b1/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/fc_b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "target_net_2/fc_b1/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/fc_b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "target_net_2/fc_b1/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "target_net_2/fc_b1/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/fc_b1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "target_net_2/fc_b1/Initializer/random_uniform/sub"
  op: "Sub"
  input: "target_net_2/fc_b1/Initializer/random_uniform/max"
  input: "target_net_2/fc_b1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/fc_b1"
      }
    }
  }
}
node {
  name: "target_net_2/fc_b1/Initializer/random_uniform/mul"
  op: "Mul"
  input: "target_net_2/fc_b1/Initializer/random_uniform/RandomUniform"
  input: "target_net_2/fc_b1/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/fc_b1"
      }
    }
  }
}
node {
  name: "target_net_2/fc_b1/Initializer/random_uniform"
  op: "Add"
  input: "target_net_2/fc_b1/Initializer/random_uniform/mul"
  input: "target_net_2/fc_b1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/fc_b1"
      }
    }
  }
}
node {
  name: "target_net_2/fc_b1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/fc_b1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_2/fc_b1/Assign"
  op: "Assign"
  input: "target_net_2/fc_b1"
  input: "target_net_2/fc_b1/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/fc_b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/fc_b1/read"
  op: "Identity"
  input: "target_net_2/fc_b1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/fc_b1"
      }
    }
  }
}
node {
  name: "target_net_2/Assign_7"
  op: "Assign"
  input: "target_net_2/fc_b1"
  input: "eval_net_2/Assign_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/fc_b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/MatMul"
  op: "MatMul"
  input: "target_net_2/Reshape"
  input: "target_net_2/Assign_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "target_net_2/add_3"
  op: "AddV2"
  input: "target_net_2/MatMul"
  input: "target_net_2/Assign_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_2/Relu_3"
  op: "Relu"
  input: "target_net_2/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_2/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "target_net_2/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_2/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "target_net_2/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "target_net_2/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "target_net_2/truncated_normal/mul"
  op: "Mul"
  input: "target_net_2/truncated_normal/TruncatedNormal"
  input: "target_net_2/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_2/truncated_normal"
  op: "Add"
  input: "target_net_2/truncated_normal/mul"
  input: "target_net_2/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "target_net_2/q_w"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_2/q_w/Assign"
  op: "Assign"
  input: "target_net_2/q_w"
  input: "target_net_2/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/q_w/read"
  op: "Identity"
  input: "target_net_2/q_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_w"
      }
    }
  }
}
node {
  name: "target_net_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_2/q_b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_2/q_b/Assign"
  op: "Assign"
  input: "target_net_2/q_b"
  input: "target_net_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/q_b/read"
  op: "Identity"
  input: "target_net_2/q_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_b"
      }
    }
  }
}
node {
  name: "target_net_2/matmul_1"
  op: "MatMul"
  input: "target_net_2/Relu_3"
  input: "target_net_2/q_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "target_net_2/add_4"
  op: "AddV2"
  input: "target_net_2/matmul_1"
  input: "target_net_2/q_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Max_2/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Max_2"
  op: "Max"
  input: "target_net_2/add_4"
  input: "Max_2/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "mul_6/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mul_6"
  op: "Mul"
  input: "mul_6/x"
  input: "Max_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sub_2"
  op: "Sub"
  input: "sub_2/x"
  input: "done"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_7"
  op: "Mul"
  input: "mul_6"
  input: "sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_2"
  op: "AddV2"
  input: "r"
  input: "mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_8"
  op: "Mul"
  input: "a"
  input: "eval_net_2/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sum_2/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_2"
  op: "Sum"
  input: "mul_8"
  input: "Sum_2/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "SquaredDifference_2"
  op: "SquaredDifference"
  input: "add_2"
  input: "Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Mean_2"
  op: "Mean"
  input: "SquaredDifference_2"
  input: "Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients_2/Fill"
  op: "Fill"
  input: "gradients_2/Shape"
  input: "gradients_2/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/Mean_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/Mean_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/Fill"
  input: "gradients_2/Mean_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/Mean_2_grad/Shape"
  op: "Shape"
  input: "SquaredDifference_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/Mean_2_grad/Tile"
  op: "Tile"
  input: "gradients_2/Mean_2_grad/Reshape"
  input: "gradients_2/Mean_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/Mean_2_grad/Shape_1"
  op: "Shape"
  input: "SquaredDifference_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/Mean_2_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Mean_2_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_2/Mean_2_grad/Prod"
  op: "Prod"
  input: "gradients_2/Mean_2_grad/Shape_1"
  input: "gradients_2/Mean_2_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/Mean_2_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_2/Mean_2_grad/Prod_1"
  op: "Prod"
  input: "gradients_2/Mean_2_grad/Shape_2"
  input: "gradients_2/Mean_2_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/Mean_2_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/Mean_2_grad/Maximum"
  op: "Maximum"
  input: "gradients_2/Mean_2_grad/Prod_1"
  input: "gradients_2/Mean_2_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/Mean_2_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_2/Mean_2_grad/Prod"
  input: "gradients_2/Mean_2_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/Mean_2_grad/Cast"
  op: "Cast"
  input: "gradients_2/Mean_2_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/Mean_2_grad/truediv"
  op: "RealDiv"
  input: "gradients_2/Mean_2_grad/Tile"
  input: "gradients_2/Mean_2_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/SquaredDifference_2_grad/scalar"
  op: "Const"
  input: "^gradients_2/Mean_2_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients_2/SquaredDifference_2_grad/Mul"
  op: "Mul"
  input: "gradients_2/SquaredDifference_2_grad/scalar"
  input: "gradients_2/Mean_2_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/SquaredDifference_2_grad/sub"
  op: "Sub"
  input: "add_2"
  input: "Sum_2"
  input: "^gradients_2/Mean_2_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/SquaredDifference_2_grad/mul_1"
  op: "Mul"
  input: "gradients_2/SquaredDifference_2_grad/Mul"
  input: "gradients_2/SquaredDifference_2_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/SquaredDifference_2_grad/Shape"
  op: "Shape"
  input: "add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/SquaredDifference_2_grad/Shape_1"
  op: "Shape"
  input: "Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/SquaredDifference_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/SquaredDifference_2_grad/Shape"
  input: "gradients_2/SquaredDifference_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/SquaredDifference_2_grad/Sum"
  op: "Sum"
  input: "gradients_2/SquaredDifference_2_grad/mul_1"
  input: "gradients_2/SquaredDifference_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/SquaredDifference_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/SquaredDifference_2_grad/Sum"
  input: "gradients_2/SquaredDifference_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/SquaredDifference_2_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/SquaredDifference_2_grad/mul_1"
  input: "gradients_2/SquaredDifference_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/SquaredDifference_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/SquaredDifference_2_grad/Sum_1"
  input: "gradients_2/SquaredDifference_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/SquaredDifference_2_grad/Neg"
  op: "Neg"
  input: "gradients_2/SquaredDifference_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/SquaredDifference_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/SquaredDifference_2_grad/Neg"
  input: "^gradients_2/SquaredDifference_2_grad/Reshape"
}
node {
  name: "gradients_2/SquaredDifference_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/SquaredDifference_2_grad/Reshape"
  input: "^gradients_2/SquaredDifference_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/SquaredDifference_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_2/SquaredDifference_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/SquaredDifference_2_grad/Neg"
  input: "^gradients_2/SquaredDifference_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/SquaredDifference_2_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients_2/add_2_grad/Shape"
  op: "Shape"
  input: "r"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/add_2_grad/Shape_1"
  op: "Shape"
  input: "mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/add_2_grad/Shape"
  input: "gradients_2/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/add_2_grad/Sum"
  op: "Sum"
  input: "gradients_2/SquaredDifference_2_grad/tuple/control_dependency"
  input: "gradients_2/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/add_2_grad/Sum"
  input: "gradients_2/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/SquaredDifference_2_grad/tuple/control_dependency"
  input: "gradients_2/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/add_2_grad/Sum_1"
  input: "gradients_2/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/add_2_grad/Reshape"
  input: "^gradients_2/add_2_grad/Reshape_1"
}
node {
  name: "gradients_2/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/add_2_grad/Reshape"
  input: "^gradients_2/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_2/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/add_2_grad/Reshape_1"
  input: "^gradients_2/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_2/Sum_2_grad/Shape"
  op: "Shape"
  input: "mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/Sum_2_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients_2/SquaredDifference_2_grad/tuple/control_dependency_1"
  input: "gradients_2/Sum_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/mul_7_grad/Shape"
  op: "Shape"
  input: "mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/mul_7_grad/Shape_1"
  op: "Shape"
  input: "sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/mul_7_grad/Shape"
  input: "gradients_2/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/mul_7_grad/Mul"
  op: "Mul"
  input: "gradients_2/add_2_grad/tuple/control_dependency_1"
  input: "sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/mul_7_grad/Sum"
  op: "Sum"
  input: "gradients_2/mul_7_grad/Mul"
  input: "gradients_2/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/mul_7_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/mul_7_grad/Sum"
  input: "gradients_2/mul_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/mul_7_grad/Mul_1"
  op: "Mul"
  input: "mul_6"
  input: "gradients_2/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/mul_7_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/mul_7_grad/Mul_1"
  input: "gradients_2/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/mul_7_grad/Sum_1"
  input: "gradients_2/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/mul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/mul_7_grad/Reshape"
  input: "^gradients_2/mul_7_grad/Reshape_1"
}
node {
  name: "gradients_2/mul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/mul_7_grad/Reshape"
  input: "^gradients_2/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/mul_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_2/mul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/mul_7_grad/Reshape_1"
  input: "^gradients_2/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/mul_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_2/mul_8_grad/Shape"
  op: "Shape"
  input: "a"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/mul_8_grad/Shape_1"
  op: "Shape"
  input: "eval_net_2/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/mul_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/mul_8_grad/Shape"
  input: "gradients_2/mul_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/mul_8_grad/Mul"
  op: "Mul"
  input: "gradients_2/Sum_2_grad/BroadcastTo"
  input: "eval_net_2/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/mul_8_grad/Sum"
  op: "Sum"
  input: "gradients_2/mul_8_grad/Mul"
  input: "gradients_2/mul_8_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/mul_8_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/mul_8_grad/Sum"
  input: "gradients_2/mul_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/mul_8_grad/Mul_1"
  op: "Mul"
  input: "a"
  input: "gradients_2/Sum_2_grad/BroadcastTo"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/mul_8_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/mul_8_grad/Mul_1"
  input: "gradients_2/mul_8_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/mul_8_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/mul_8_grad/Sum_1"
  input: "gradients_2/mul_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/mul_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/mul_8_grad/Reshape"
  input: "^gradients_2/mul_8_grad/Reshape_1"
}
node {
  name: "gradients_2/mul_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/mul_8_grad/Reshape"
  input: "^gradients_2/mul_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/mul_8_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_2/mul_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/mul_8_grad/Reshape_1"
  input: "^gradients_2/mul_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/mul_8_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_2/mul_6_grad/Shape"
  op: "Shape"
  input: "mul_6/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/mul_6_grad/Shape_1"
  op: "Shape"
  input: "Max_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/mul_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/mul_6_grad/Shape"
  input: "gradients_2/mul_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/mul_6_grad/Mul"
  op: "Mul"
  input: "gradients_2/mul_7_grad/tuple/control_dependency"
  input: "Max_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/mul_6_grad/Sum"
  op: "Sum"
  input: "gradients_2/mul_6_grad/Mul"
  input: "gradients_2/mul_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/mul_6_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/mul_6_grad/Sum"
  input: "gradients_2/mul_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/mul_6_grad/Mul_1"
  op: "Mul"
  input: "mul_6/x"
  input: "gradients_2/mul_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/mul_6_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/mul_6_grad/Mul_1"
  input: "gradients_2/mul_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/mul_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/mul_6_grad/Sum_1"
  input: "gradients_2/mul_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/mul_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/mul_6_grad/Reshape"
  input: "^gradients_2/mul_6_grad/Reshape_1"
}
node {
  name: "gradients_2/mul_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/mul_6_grad/Reshape"
  input: "^gradients_2/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/mul_6_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_2/mul_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/mul_6_grad/Reshape_1"
  input: "^gradients_2/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/mul_6_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_4_grad/Shape"
  op: "Shape"
  input: "eval_net_2/matmul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_4_grad/Shape_1"
  op: "Shape"
  input: "eval_net_2/q_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/eval_net_2/add_4_grad/Shape"
  input: "gradients_2/eval_net_2/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_4_grad/Sum"
  op: "Sum"
  input: "gradients_2/mul_8_grad/tuple/control_dependency_1"
  input: "gradients_2/eval_net_2/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/eval_net_2/add_4_grad/Sum"
  input: "gradients_2/eval_net_2/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/mul_8_grad/tuple/control_dependency_1"
  input: "gradients_2/eval_net_2/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/eval_net_2/add_4_grad/Sum_1"
  input: "gradients_2/eval_net_2/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/eval_net_2/add_4_grad/Reshape"
  input: "^gradients_2/eval_net_2/add_4_grad/Reshape_1"
}
node {
  name: "gradients_2/eval_net_2/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/eval_net_2/add_4_grad/Reshape"
  input: "^gradients_2/eval_net_2/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/eval_net_2/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/eval_net_2/add_4_grad/Reshape_1"
  input: "^gradients_2/eval_net_2/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/eval_net_2/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_2/Max_2_grad/Shape"
  op: "Shape"
  input: "target_net_2/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/Max_2_grad/Shape_1"
  op: "Shape"
  input: "Max_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/Max_2_grad/Equal"
  op: "Equal"
  input: "Max_2"
  input: "target_net_2/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/Max_2_grad/Cast"
  op: "Cast"
  input: "gradients_2/Max_2_grad/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/Max_2_grad/Sum"
  op: "Sum"
  input: "gradients_2/Max_2_grad/Cast"
  input: "Max_2/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/Max_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/Max_2_grad/Sum"
  input: "gradients_2/Max_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/Max_2_grad/truediv"
  op: "RealDiv"
  input: "gradients_2/Max_2_grad/Cast"
  input: "gradients_2/Max_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/Max_2_grad/mul"
  op: "Mul"
  input: "gradients_2/Max_2_grad/truediv"
  input: "gradients_2/mul_6_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/eval_net_2/matmul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients_2/eval_net_2/add_4_grad/tuple/control_dependency"
  input: "eval_net_2/q_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/eval_net_2/matmul_1_grad/MatMul_1"
  op: "MatMul"
  input: "eval_net_2/Relu_3"
  input: "gradients_2/eval_net_2/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/eval_net_2/matmul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/eval_net_2/matmul_1_grad/MatMul"
  input: "^gradients_2/eval_net_2/matmul_1_grad/MatMul_1"
}
node {
  name: "gradients_2/eval_net_2/matmul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/eval_net_2/matmul_1_grad/MatMul"
  input: "^gradients_2/eval_net_2/matmul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/eval_net_2/matmul_1_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients_2/eval_net_2/matmul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/eval_net_2/matmul_1_grad/MatMul_1"
  input: "^gradients_2/eval_net_2/matmul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/eval_net_2/matmul_1_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_4_grad/Shape"
  op: "Shape"
  input: "target_net_2/matmul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_4_grad/Shape_1"
  op: "Shape"
  input: "target_net_2/q_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/target_net_2/add_4_grad/Shape"
  input: "gradients_2/target_net_2/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_4_grad/Sum"
  op: "Sum"
  input: "gradients_2/Max_2_grad/mul"
  input: "gradients_2/target_net_2/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/target_net_2/add_4_grad/Sum"
  input: "gradients_2/target_net_2/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/Max_2_grad/mul"
  input: "gradients_2/target_net_2/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/target_net_2/add_4_grad/Sum_1"
  input: "gradients_2/target_net_2/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/target_net_2/add_4_grad/Reshape"
  input: "^gradients_2/target_net_2/add_4_grad/Reshape_1"
}
node {
  name: "gradients_2/target_net_2/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/target_net_2/add_4_grad/Reshape"
  input: "^gradients_2/target_net_2/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/target_net_2/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/target_net_2/add_4_grad/Reshape_1"
  input: "^gradients_2/target_net_2/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/target_net_2/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_2/eval_net_2/Relu_3_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_2/eval_net_2/matmul_1_grad/tuple/control_dependency"
  input: "eval_net_2/Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/target_net_2/matmul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients_2/target_net_2/add_4_grad/tuple/control_dependency"
  input: "target_net_2/q_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/target_net_2/matmul_1_grad/MatMul_1"
  op: "MatMul"
  input: "target_net_2/Relu_3"
  input: "gradients_2/target_net_2/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/target_net_2/matmul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/target_net_2/matmul_1_grad/MatMul"
  input: "^gradients_2/target_net_2/matmul_1_grad/MatMul_1"
}
node {
  name: "gradients_2/target_net_2/matmul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/target_net_2/matmul_1_grad/MatMul"
  input: "^gradients_2/target_net_2/matmul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/target_net_2/matmul_1_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients_2/target_net_2/matmul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/target_net_2/matmul_1_grad/MatMul_1"
  input: "^gradients_2/target_net_2/matmul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/target_net_2/matmul_1_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_3_grad/Shape"
  op: "Shape"
  input: "eval_net_2/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_3_grad/Shape_1"
  op: "Shape"
  input: "eval_net_2/Assign_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/eval_net_2/add_3_grad/Shape"
  input: "gradients_2/eval_net_2/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_3_grad/Sum"
  op: "Sum"
  input: "gradients_2/eval_net_2/Relu_3_grad/ReluGrad"
  input: "gradients_2/eval_net_2/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/eval_net_2/add_3_grad/Sum"
  input: "gradients_2/eval_net_2/add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/eval_net_2/Relu_3_grad/ReluGrad"
  input: "gradients_2/eval_net_2/add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/eval_net_2/add_3_grad/Sum_1"
  input: "gradients_2/eval_net_2/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/eval_net_2/add_3_grad/Reshape"
  input: "^gradients_2/eval_net_2/add_3_grad/Reshape_1"
}
node {
  name: "gradients_2/eval_net_2/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/eval_net_2/add_3_grad/Reshape"
  input: "^gradients_2/eval_net_2/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/eval_net_2/add_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/eval_net_2/add_3_grad/Reshape_1"
  input: "^gradients_2/eval_net_2/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/eval_net_2/add_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_2/target_net_2/Relu_3_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_2/target_net_2/matmul_1_grad/tuple/control_dependency"
  input: "target_net_2/Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/eval_net_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_2/eval_net_2/add_3_grad/tuple/control_dependency"
  input: "eval_net_2/Assign_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/eval_net_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "eval_net_2/Reshape"
  input: "gradients_2/eval_net_2/add_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/eval_net_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/eval_net_2/MatMul_grad/MatMul"
  input: "^gradients_2/eval_net_2/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_2/eval_net_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/eval_net_2/MatMul_grad/MatMul"
  input: "^gradients_2/eval_net_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/eval_net_2/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients_2/eval_net_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/eval_net_2/MatMul_grad/MatMul_1"
  input: "^gradients_2/eval_net_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/eval_net_2/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_3_grad/Shape"
  op: "Shape"
  input: "target_net_2/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_3_grad/Shape_1"
  op: "Shape"
  input: "target_net_2/Assign_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/target_net_2/add_3_grad/Shape"
  input: "gradients_2/target_net_2/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_3_grad/Sum"
  op: "Sum"
  input: "gradients_2/target_net_2/Relu_3_grad/ReluGrad"
  input: "gradients_2/target_net_2/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/target_net_2/add_3_grad/Sum"
  input: "gradients_2/target_net_2/add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/target_net_2/Relu_3_grad/ReluGrad"
  input: "gradients_2/target_net_2/add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/target_net_2/add_3_grad/Sum_1"
  input: "gradients_2/target_net_2/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/target_net_2/add_3_grad/Reshape"
  input: "^gradients_2/target_net_2/add_3_grad/Reshape_1"
}
node {
  name: "gradients_2/target_net_2/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/target_net_2/add_3_grad/Reshape"
  input: "^gradients_2/target_net_2/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/target_net_2/add_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/target_net_2/add_3_grad/Reshape_1"
  input: "^gradients_2/target_net_2/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/target_net_2/add_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_2/eval_net_2/Reshape_grad/Shape"
  op: "Shape"
  input: "eval_net_2/Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/eval_net_2/MatMul_grad/tuple/control_dependency"
  input: "gradients_2/eval_net_2/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_2/target_net_2/add_3_grad/tuple/control_dependency"
  input: "target_net_2/Assign_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/target_net_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "target_net_2/Reshape"
  input: "gradients_2/target_net_2/add_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/target_net_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/target_net_2/MatMul_grad/MatMul"
  input: "^gradients_2/target_net_2/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_2/target_net_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/target_net_2/MatMul_grad/MatMul"
  input: "^gradients_2/target_net_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/target_net_2/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients_2/target_net_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/target_net_2/MatMul_grad/MatMul_1"
  input: "^gradients_2/target_net_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/target_net_2/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients_2/eval_net_2/Relu_2_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_2/eval_net_2/Reshape_grad/Reshape"
  input: "eval_net_2/Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/target_net_2/Reshape_grad/Shape"
  op: "Shape"
  input: "target_net_2/Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/target_net_2/MatMul_grad/tuple/control_dependency"
  input: "gradients_2/target_net_2/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_2_grad/Shape"
  op: "Shape"
  input: "eval_net_2/Conv2D_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_2_grad/Shape_1"
  op: "Shape"
  input: "eval_net_2/Assign_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/eval_net_2/add_2_grad/Shape"
  input: "gradients_2/eval_net_2/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_2_grad/Sum"
  op: "Sum"
  input: "gradients_2/eval_net_2/Relu_2_grad/ReluGrad"
  input: "gradients_2/eval_net_2/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/eval_net_2/add_2_grad/Sum"
  input: "gradients_2/eval_net_2/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/eval_net_2/Relu_2_grad/ReluGrad"
  input: "gradients_2/eval_net_2/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/eval_net_2/add_2_grad/Sum_1"
  input: "gradients_2/eval_net_2/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/eval_net_2/add_2_grad/Reshape"
  input: "^gradients_2/eval_net_2/add_2_grad/Reshape_1"
}
node {
  name: "gradients_2/eval_net_2/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/eval_net_2/add_2_grad/Reshape"
  input: "^gradients_2/eval_net_2/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/eval_net_2/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/eval_net_2/add_2_grad/Reshape_1"
  input: "^gradients_2/eval_net_2/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/eval_net_2/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_2/target_net_2/Relu_2_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_2/target_net_2/Reshape_grad/Reshape"
  input: "target_net_2/Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/eval_net_2/Conv2D_2_grad/ShapeN"
  op: "ShapeN"
  input: "eval_net_2/Relu_1"
  input: "eval_net_2/Assign_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/Conv2D_2_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_2/eval_net_2/Conv2D_2_grad/ShapeN"
  input: "eval_net_2/Assign_4"
  input: "gradients_2/eval_net_2/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/eval_net_2/Conv2D_2_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "eval_net_2/Relu_1"
  input: "gradients_2/eval_net_2/Conv2D_2_grad/ShapeN:1"
  input: "gradients_2/eval_net_2/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/eval_net_2/Conv2D_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/eval_net_2/Conv2D_2_grad/Conv2DBackpropFilter"
  input: "^gradients_2/eval_net_2/Conv2D_2_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_2/eval_net_2/Conv2D_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/eval_net_2/Conv2D_2_grad/Conv2DBackpropInput"
  input: "^gradients_2/eval_net_2/Conv2D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/eval_net_2/Conv2D_2_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_2/eval_net_2/Conv2D_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/eval_net_2/Conv2D_2_grad/Conv2DBackpropFilter"
  input: "^gradients_2/eval_net_2/Conv2D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/eval_net_2/Conv2D_2_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_2_grad/Shape"
  op: "Shape"
  input: "target_net_2/Conv2D_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_2_grad/Shape_1"
  op: "Shape"
  input: "target_net_2/Assign_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/target_net_2/add_2_grad/Shape"
  input: "gradients_2/target_net_2/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_2_grad/Sum"
  op: "Sum"
  input: "gradients_2/target_net_2/Relu_2_grad/ReluGrad"
  input: "gradients_2/target_net_2/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/target_net_2/add_2_grad/Sum"
  input: "gradients_2/target_net_2/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/target_net_2/Relu_2_grad/ReluGrad"
  input: "gradients_2/target_net_2/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/target_net_2/add_2_grad/Sum_1"
  input: "gradients_2/target_net_2/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/target_net_2/add_2_grad/Reshape"
  input: "^gradients_2/target_net_2/add_2_grad/Reshape_1"
}
node {
  name: "gradients_2/target_net_2/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/target_net_2/add_2_grad/Reshape"
  input: "^gradients_2/target_net_2/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/target_net_2/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/target_net_2/add_2_grad/Reshape_1"
  input: "^gradients_2/target_net_2/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/target_net_2/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_2/eval_net_2/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_2/eval_net_2/Conv2D_2_grad/tuple/control_dependency"
  input: "eval_net_2/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/target_net_2/Conv2D_2_grad/ShapeN"
  op: "ShapeN"
  input: "target_net_2/Relu_1"
  input: "target_net_2/Assign_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/Conv2D_2_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_2/target_net_2/Conv2D_2_grad/ShapeN"
  input: "target_net_2/Assign_4"
  input: "gradients_2/target_net_2/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/target_net_2/Conv2D_2_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "target_net_2/Relu_1"
  input: "gradients_2/target_net_2/Conv2D_2_grad/ShapeN:1"
  input: "gradients_2/target_net_2/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/target_net_2/Conv2D_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/target_net_2/Conv2D_2_grad/Conv2DBackpropFilter"
  input: "^gradients_2/target_net_2/Conv2D_2_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_2/target_net_2/Conv2D_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/target_net_2/Conv2D_2_grad/Conv2DBackpropInput"
  input: "^gradients_2/target_net_2/Conv2D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/target_net_2/Conv2D_2_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_2/target_net_2/Conv2D_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/target_net_2/Conv2D_2_grad/Conv2DBackpropFilter"
  input: "^gradients_2/target_net_2/Conv2D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/target_net_2/Conv2D_2_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_1_grad/Shape"
  op: "Shape"
  input: "eval_net_2/Conv2D_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_1_grad/Shape_1"
  op: "Shape"
  input: "eval_net_2/Assign_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/eval_net_2/add_1_grad/Shape"
  input: "gradients_2/eval_net_2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_1_grad/Sum"
  op: "Sum"
  input: "gradients_2/eval_net_2/Relu_1_grad/ReluGrad"
  input: "gradients_2/eval_net_2/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/eval_net_2/add_1_grad/Sum"
  input: "gradients_2/eval_net_2/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/eval_net_2/Relu_1_grad/ReluGrad"
  input: "gradients_2/eval_net_2/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/eval_net_2/add_1_grad/Sum_1"
  input: "gradients_2/eval_net_2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/eval_net_2/add_1_grad/Reshape"
  input: "^gradients_2/eval_net_2/add_1_grad/Reshape_1"
}
node {
  name: "gradients_2/eval_net_2/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/eval_net_2/add_1_grad/Reshape"
  input: "^gradients_2/eval_net_2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/eval_net_2/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/eval_net_2/add_1_grad/Reshape_1"
  input: "^gradients_2/eval_net_2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/eval_net_2/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_2/target_net_2/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_2/target_net_2/Conv2D_2_grad/tuple/control_dependency"
  input: "target_net_2/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/eval_net_2/Conv2D_1_grad/ShapeN"
  op: "ShapeN"
  input: "eval_net_2/Relu"
  input: "eval_net_2/Assign_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/Conv2D_1_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_2/eval_net_2/Conv2D_1_grad/ShapeN"
  input: "eval_net_2/Assign_2"
  input: "gradients_2/eval_net_2/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/eval_net_2/Conv2D_1_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "eval_net_2/Relu"
  input: "gradients_2/eval_net_2/Conv2D_1_grad/ShapeN:1"
  input: "gradients_2/eval_net_2/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/eval_net_2/Conv2D_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/eval_net_2/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^gradients_2/eval_net_2/Conv2D_1_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_2/eval_net_2/Conv2D_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/eval_net_2/Conv2D_1_grad/Conv2DBackpropInput"
  input: "^gradients_2/eval_net_2/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/eval_net_2/Conv2D_1_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_2/eval_net_2/Conv2D_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/eval_net_2/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^gradients_2/eval_net_2/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/eval_net_2/Conv2D_1_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_1_grad/Shape"
  op: "Shape"
  input: "target_net_2/Conv2D_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_1_grad/Shape_1"
  op: "Shape"
  input: "target_net_2/Assign_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/target_net_2/add_1_grad/Shape"
  input: "gradients_2/target_net_2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_1_grad/Sum"
  op: "Sum"
  input: "gradients_2/target_net_2/Relu_1_grad/ReluGrad"
  input: "gradients_2/target_net_2/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/target_net_2/add_1_grad/Sum"
  input: "gradients_2/target_net_2/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/target_net_2/Relu_1_grad/ReluGrad"
  input: "gradients_2/target_net_2/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/target_net_2/add_1_grad/Sum_1"
  input: "gradients_2/target_net_2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/target_net_2/add_1_grad/Reshape"
  input: "^gradients_2/target_net_2/add_1_grad/Reshape_1"
}
node {
  name: "gradients_2/target_net_2/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/target_net_2/add_1_grad/Reshape"
  input: "^gradients_2/target_net_2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/target_net_2/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/target_net_2/add_1_grad/Reshape_1"
  input: "^gradients_2/target_net_2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/target_net_2/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_2/eval_net_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_2/eval_net_2/Conv2D_1_grad/tuple/control_dependency"
  input: "eval_net_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/target_net_2/Conv2D_1_grad/ShapeN"
  op: "ShapeN"
  input: "target_net_2/Relu"
  input: "target_net_2/Assign_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/Conv2D_1_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_2/target_net_2/Conv2D_1_grad/ShapeN"
  input: "target_net_2/Assign_2"
  input: "gradients_2/target_net_2/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/target_net_2/Conv2D_1_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "target_net_2/Relu"
  input: "gradients_2/target_net_2/Conv2D_1_grad/ShapeN:1"
  input: "gradients_2/target_net_2/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/target_net_2/Conv2D_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/target_net_2/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^gradients_2/target_net_2/Conv2D_1_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_2/target_net_2/Conv2D_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/target_net_2/Conv2D_1_grad/Conv2DBackpropInput"
  input: "^gradients_2/target_net_2/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/target_net_2/Conv2D_1_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_2/target_net_2/Conv2D_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/target_net_2/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^gradients_2/target_net_2/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/target_net_2/Conv2D_1_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_grad/Shape"
  op: "Shape"
  input: "eval_net_2/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_grad/Shape_1"
  op: "Shape"
  input: "eval_net_2/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/eval_net_2/add_grad/Shape"
  input: "gradients_2/eval_net_2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_grad/Sum"
  op: "Sum"
  input: "gradients_2/eval_net_2/Relu_grad/ReluGrad"
  input: "gradients_2/eval_net_2/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/eval_net_2/add_grad/Sum"
  input: "gradients_2/eval_net_2/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/eval_net_2/Relu_grad/ReluGrad"
  input: "gradients_2/eval_net_2/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/eval_net_2/add_grad/Sum_1"
  input: "gradients_2/eval_net_2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/eval_net_2/add_grad/Reshape"
  input: "^gradients_2/eval_net_2/add_grad/Reshape_1"
}
node {
  name: "gradients_2/eval_net_2/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/eval_net_2/add_grad/Reshape"
  input: "^gradients_2/eval_net_2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/eval_net_2/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_2/eval_net_2/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/eval_net_2/add_grad/Reshape_1"
  input: "^gradients_2/eval_net_2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/eval_net_2/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_2/target_net_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_2/target_net_2/Conv2D_1_grad/tuple/control_dependency"
  input: "target_net_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/eval_net_2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "s"
  input: "eval_net_2/Assign"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/eval_net_2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_2/eval_net_2/Conv2D_grad/ShapeN"
  input: "eval_net_2/Assign"
  input: "gradients_2/eval_net_2/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/eval_net_2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "s"
  input: "gradients_2/eval_net_2/Conv2D_grad/ShapeN:1"
  input: "gradients_2/eval_net_2/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/eval_net_2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/eval_net_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/eval_net_2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_2/eval_net_2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/eval_net_2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients_2/eval_net_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/eval_net_2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_2/eval_net_2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/eval_net_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/eval_net_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/eval_net_2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_grad/Shape"
  op: "Shape"
  input: "target_net_2/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_grad/Shape_1"
  op: "Shape"
  input: "target_net_2/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/target_net_2/add_grad/Shape"
  input: "gradients_2/target_net_2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_grad/Sum"
  op: "Sum"
  input: "gradients_2/target_net_2/Relu_grad/ReluGrad"
  input: "gradients_2/target_net_2/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/target_net_2/add_grad/Sum"
  input: "gradients_2/target_net_2/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/target_net_2/Relu_grad/ReluGrad"
  input: "gradients_2/target_net_2/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/target_net_2/add_grad/Sum_1"
  input: "gradients_2/target_net_2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/target_net_2/add_grad/Reshape"
  input: "^gradients_2/target_net_2/add_grad/Reshape_1"
}
node {
  name: "gradients_2/target_net_2/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/target_net_2/add_grad/Reshape"
  input: "^gradients_2/target_net_2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/target_net_2/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_2/target_net_2/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/target_net_2/add_grad/Reshape_1"
  input: "^gradients_2/target_net_2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/target_net_2/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_2/target_net_2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "s_"
  input: "target_net_2/Assign"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/target_net_2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_2/target_net_2/Conv2D_grad/ShapeN"
  input: "target_net_2/Assign"
  input: "gradients_2/target_net_2/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/target_net_2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "s_"
  input: "gradients_2/target_net_2/Conv2D_grad/ShapeN:1"
  input: "gradients_2/target_net_2/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/target_net_2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/target_net_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/target_net_2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_2/target_net_2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/target_net_2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients_2/target_net_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/target_net_2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_2/target_net_2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/target_net_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/target_net_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/target_net_2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "beta1_power_2/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power_2"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power_2/Assign"
  op: "Assign"
  input: "beta1_power_2"
  input: "beta1_power_2/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power_2/read"
  op: "Identity"
  input: "beta1_power_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_b"
      }
    }
  }
}
node {
  name: "beta2_power_2/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power_2"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power_2/Assign"
  op: "Assign"
  input: "beta2_power_2"
  input: "beta2_power_2/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power_2/read"
  op: "Identity"
  input: "beta2_power_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_b"
      }
    }
  }
}
node {
  name: "eval_net_2/q_w/opt/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "eval_net_2/q_w/opt/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_2/q_w/opt/Initializer/zeros"
  op: "Fill"
  input: "eval_net_2/q_w/opt/Initializer/zeros/shape_as_tensor"
  input: "eval_net_2/q_w/opt/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "eval_net_2/q_w/opt"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_2/q_w/opt/Assign"
  op: "Assign"
  input: "eval_net_2/q_w/opt"
  input: "eval_net_2/q_w/opt/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/q_w/opt/read"
  op: "Identity"
  input: "eval_net_2/q_w/opt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_w"
      }
    }
  }
}
node {
  name: "eval_net_2/q_w/opt_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "eval_net_2/q_w/opt_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_2/q_w/opt_1/Initializer/zeros"
  op: "Fill"
  input: "eval_net_2/q_w/opt_1/Initializer/zeros/shape_as_tensor"
  input: "eval_net_2/q_w/opt_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "eval_net_2/q_w/opt_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_2/q_w/opt_1/Assign"
  op: "Assign"
  input: "eval_net_2/q_w/opt_1"
  input: "eval_net_2/q_w/opt_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/q_w/opt_1/read"
  op: "Identity"
  input: "eval_net_2/q_w/opt_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_w"
      }
    }
  }
}
node {
  name: "eval_net_2/q_b/opt/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_2/q_b/opt"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_2/q_b/opt/Assign"
  op: "Assign"
  input: "eval_net_2/q_b/opt"
  input: "eval_net_2/q_b/opt/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/q_b/opt/read"
  op: "Identity"
  input: "eval_net_2/q_b/opt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_b"
      }
    }
  }
}
node {
  name: "eval_net_2/q_b/opt_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "eval_net_2/q_b/opt_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "eval_net_2/q_b/opt_1/Assign"
  op: "Assign"
  input: "eval_net_2/q_b/opt_1"
  input: "eval_net_2/q_b/opt_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "eval_net_2/q_b/opt_1/read"
  op: "Identity"
  input: "eval_net_2/q_b/opt_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_b"
      }
    }
  }
}
node {
  name: "target_net_2/q_w/opt/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "target_net_2/q_w/opt/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_2/q_w/opt/Initializer/zeros"
  op: "Fill"
  input: "target_net_2/q_w/opt/Initializer/zeros/shape_as_tensor"
  input: "target_net_2/q_w/opt/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "target_net_2/q_w/opt"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_2/q_w/opt/Assign"
  op: "Assign"
  input: "target_net_2/q_w/opt"
  input: "target_net_2/q_w/opt/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/q_w/opt/read"
  op: "Identity"
  input: "target_net_2/q_w/opt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_w"
      }
    }
  }
}
node {
  name: "target_net_2/q_w/opt_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "target_net_2/q_w/opt_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_2/q_w/opt_1/Initializer/zeros"
  op: "Fill"
  input: "target_net_2/q_w/opt_1/Initializer/zeros/shape_as_tensor"
  input: "target_net_2/q_w/opt_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_w"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "target_net_2/q_w/opt_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_2/q_w/opt_1/Assign"
  op: "Assign"
  input: "target_net_2/q_w/opt_1"
  input: "target_net_2/q_w/opt_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/q_w/opt_1/read"
  op: "Identity"
  input: "target_net_2/q_w/opt_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_w"
      }
    }
  }
}
node {
  name: "target_net_2/q_b/opt/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_2/q_b/opt"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_2/q_b/opt/Assign"
  op: "Assign"
  input: "target_net_2/q_b/opt"
  input: "target_net_2/q_b/opt/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/q_b/opt/read"
  op: "Identity"
  input: "target_net_2/q_b/opt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_b"
      }
    }
  }
}
node {
  name: "target_net_2/q_b/opt_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "target_net_2/q_b/opt_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "target_net_2/q_b/opt_1/Assign"
  op: "Assign"
  input: "target_net_2/q_b/opt_1"
  input: "target_net_2/q_b/opt_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "target_net_2/q_b/opt_1/read"
  op: "Identity"
  input: "target_net_2/q_b/opt_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_b"
      }
    }
  }
}
node {
  name: "opt_1/learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "opt_1/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "opt_1/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "opt_1/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "opt_1/update_eval_net_2/q_w/ApplyAdam"
  op: "ApplyAdam"
  input: "eval_net_2/q_w"
  input: "eval_net_2/q_w/opt"
  input: "eval_net_2/q_w/opt_1"
  input: "beta1_power_2/read"
  input: "beta2_power_2/read"
  input: "opt_1/learning_rate"
  input: "opt_1/beta1"
  input: "opt_1/beta2"
  input: "opt_1/epsilon"
  input: "gradients_2/eval_net_2/matmul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "opt_1/update_eval_net_2/q_b/ApplyAdam"
  op: "ApplyAdam"
  input: "eval_net_2/q_b"
  input: "eval_net_2/q_b/opt"
  input: "eval_net_2/q_b/opt_1"
  input: "beta1_power_2/read"
  input: "beta2_power_2/read"
  input: "opt_1/learning_rate"
  input: "opt_1/beta1"
  input: "opt_1/beta2"
  input: "opt_1/epsilon"
  input: "gradients_2/eval_net_2/add_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "opt_1/update_target_net_2/q_w/ApplyAdam"
  op: "ApplyAdam"
  input: "target_net_2/q_w"
  input: "target_net_2/q_w/opt"
  input: "target_net_2/q_w/opt_1"
  input: "beta1_power_2/read"
  input: "beta2_power_2/read"
  input: "opt_1/learning_rate"
  input: "opt_1/beta1"
  input: "opt_1/beta2"
  input: "opt_1/epsilon"
  input: "gradients_2/target_net_2/matmul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "opt_1/update_target_net_2/q_b/ApplyAdam"
  op: "ApplyAdam"
  input: "target_net_2/q_b"
  input: "target_net_2/q_b/opt"
  input: "target_net_2/q_b/opt_1"
  input: "beta1_power_2/read"
  input: "beta2_power_2/read"
  input: "opt_1/learning_rate"
  input: "opt_1/beta1"
  input: "opt_1/beta2"
  input: "opt_1/epsilon"
  input: "gradients_2/target_net_2/add_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "opt_1/mul"
  op: "Mul"
  input: "beta1_power_2/read"
  input: "opt_1/beta1"
  input: "^opt_1/update_eval_net_2/q_b/ApplyAdam"
  input: "^opt_1/update_eval_net_2/q_w/ApplyAdam"
  input: "^opt_1/update_target_net_2/q_b/ApplyAdam"
  input: "^opt_1/update_target_net_2/q_w/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_b"
      }
    }
  }
}
node {
  name: "opt_1/Assign"
  op: "Assign"
  input: "beta1_power_2"
  input: "opt_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "opt_1/mul_1"
  op: "Mul"
  input: "beta2_power_2/read"
  input: "opt_1/beta2"
  input: "^opt_1/update_eval_net_2/q_b/ApplyAdam"
  input: "^opt_1/update_eval_net_2/q_w/ApplyAdam"
  input: "^opt_1/update_target_net_2/q_b/ApplyAdam"
  input: "^opt_1/update_target_net_2/q_w/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_b"
      }
    }
  }
}
node {
  name: "opt_1/Assign_1"
  op: "Assign"
  input: "beta2_power_2"
  input: "opt_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@eval_net_2/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "opt_1"
  op: "NoOp"
  input: "^opt_1/Assign"
  input: "^opt_1/Assign_1"
  input: "^opt_1/update_eval_net_2/q_b/ApplyAdam"
  input: "^opt_1/update_eval_net_2/q_w/ApplyAdam"
  input: "^opt_1/update_target_net_2/q_b/ApplyAdam"
  input: "^opt_1/update_target_net_2/q_w/ApplyAdam"
}
node {
  name: "Assign_44"
  op: "Assign"
  input: "target_net_2/w1"
  input: "eval_net_2/w1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_45"
  op: "Assign"
  input: "target_net_2/b1"
  input: "eval_net_2/b1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_46"
  op: "Assign"
  input: "target_net_2/w2"
  input: "eval_net_2/w2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_47"
  op: "Assign"
  input: "target_net_2/b2"
  input: "eval_net_2/b2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_48"
  op: "Assign"
  input: "target_net_2/w3"
  input: "eval_net_2/w3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/w3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_49"
  op: "Assign"
  input: "target_net_2/b3"
  input: "eval_net_2/b3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/b3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_50"
  op: "Assign"
  input: "target_net_2/fc_w1"
  input: "eval_net_2/fc_w1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/fc_w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_51"
  op: "Assign"
  input: "target_net_2/fc_b1"
  input: "eval_net_2/fc_b1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/fc_b1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_52"
  op: "Assign"
  input: "target_net_2/q_w"
  input: "eval_net_2/q_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_53"
  op: "Assign"
  input: "target_net_2/q_b"
  input: "eval_net_2/q_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_54"
  op: "Assign"
  input: "target_net_2/q_w/opt"
  input: "eval_net_2/q_w/opt/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_55"
  op: "Assign"
  input: "target_net_2/q_w/opt_1"
  input: "eval_net_2/q_w/opt_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_56"
  op: "Assign"
  input: "target_net_2/q_b/opt"
  input: "eval_net_2/q_b/opt/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_57"
  op: "Assign"
  input: "target_net_2/q_b/opt_1"
  input: "eval_net_2/q_b/opt_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@target_net_2/q_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^beta1_power/Assign"
  input: "^beta1_power_1/Assign"
  input: "^beta1_power_2/Assign"
  input: "^beta2_power/Assign"
  input: "^beta2_power_1/Assign"
  input: "^beta2_power_2/Assign"
  input: "^eval_net_0/b1/Adam/Assign"
  input: "^eval_net_0/b1/Adam_1/Assign"
  input: "^eval_net_0/b1/Assign"
  input: "^eval_net_0/b2/Adam/Assign"
  input: "^eval_net_0/b2/Adam_1/Assign"
  input: "^eval_net_0/b2/Assign"
  input: "^eval_net_0/b3/Adam/Assign"
  input: "^eval_net_0/b3/Adam_1/Assign"
  input: "^eval_net_0/b3/Assign"
  input: "^eval_net_0/fc_b1/Adam/Assign"
  input: "^eval_net_0/fc_b1/Adam_1/Assign"
  input: "^eval_net_0/fc_b1/Assign"
  input: "^eval_net_0/fc_w1/Adam/Assign"
  input: "^eval_net_0/fc_w1/Adam_1/Assign"
  input: "^eval_net_0/fc_w1/Assign"
  input: "^eval_net_0/q_b/Adam/Assign"
  input: "^eval_net_0/q_b/Adam_1/Assign"
  input: "^eval_net_0/q_b/Assign"
  input: "^eval_net_0/q_w/Adam/Assign"
  input: "^eval_net_0/q_w/Adam_1/Assign"
  input: "^eval_net_0/q_w/Assign"
  input: "^eval_net_0/w1/Adam/Assign"
  input: "^eval_net_0/w1/Adam_1/Assign"
  input: "^eval_net_0/w1/Assign"
  input: "^eval_net_0/w2/Adam/Assign"
  input: "^eval_net_0/w2/Adam_1/Assign"
  input: "^eval_net_0/w2/Assign"
  input: "^eval_net_0/w3/Adam/Assign"
  input: "^eval_net_0/w3/Adam_1/Assign"
  input: "^eval_net_0/w3/Assign"
  input: "^eval_net_1/b1/Assign"
  input: "^eval_net_1/b2/Assign"
  input: "^eval_net_1/b3/Assign"
  input: "^eval_net_1/fc_b1/Assign"
  input: "^eval_net_1/fc_w1/Assign"
  input: "^eval_net_1/q_b/Assign"
  input: "^eval_net_1/q_b/opt/Assign"
  input: "^eval_net_1/q_b/opt_1/Assign"
  input: "^eval_net_1/q_w/Assign"
  input: "^eval_net_1/q_w/opt/Assign"
  input: "^eval_net_1/q_w/opt_1/Assign"
  input: "^eval_net_1/w1/Assign"
  input: "^eval_net_1/w2/Assign"
  input: "^eval_net_1/w3/Assign"
  input: "^eval_net_2/b1/Assign"
  input: "^eval_net_2/b2/Assign"
  input: "^eval_net_2/b3/Assign"
  input: "^eval_net_2/fc_b1/Assign"
  input: "^eval_net_2/fc_w1/Assign"
  input: "^eval_net_2/q_b/Assign"
  input: "^eval_net_2/q_b/opt/Assign"
  input: "^eval_net_2/q_b/opt_1/Assign"
  input: "^eval_net_2/q_w/Assign"
  input: "^eval_net_2/q_w/opt/Assign"
  input: "^eval_net_2/q_w/opt_1/Assign"
  input: "^eval_net_2/w1/Assign"
  input: "^eval_net_2/w2/Assign"
  input: "^eval_net_2/w3/Assign"
  input: "^target_net_0/b1/Adam/Assign"
  input: "^target_net_0/b1/Adam_1/Assign"
  input: "^target_net_0/b1/Assign"
  input: "^target_net_0/b2/Adam/Assign"
  input: "^target_net_0/b2/Adam_1/Assign"
  input: "^target_net_0/b2/Assign"
  input: "^target_net_0/b3/Adam/Assign"
  input: "^target_net_0/b3/Adam_1/Assign"
  input: "^target_net_0/b3/Assign"
  input: "^target_net_0/fc_b1/Adam/Assign"
  input: "^target_net_0/fc_b1/Adam_1/Assign"
  input: "^target_net_0/fc_b1/Assign"
  input: "^target_net_0/fc_w1/Adam/Assign"
  input: "^target_net_0/fc_w1/Adam_1/Assign"
  input: "^target_net_0/fc_w1/Assign"
  input: "^target_net_0/q_b/Adam/Assign"
  input: "^target_net_0/q_b/Adam_1/Assign"
  input: "^target_net_0/q_b/Assign"
  input: "^target_net_0/q_w/Adam/Assign"
  input: "^target_net_0/q_w/Adam_1/Assign"
  input: "^target_net_0/q_w/Assign"
  input: "^target_net_0/w1/Adam/Assign"
  input: "^target_net_0/w1/Adam_1/Assign"
  input: "^target_net_0/w1/Assign"
  input: "^target_net_0/w2/Adam/Assign"
  input: "^target_net_0/w2/Adam_1/Assign"
  input: "^target_net_0/w2/Assign"
  input: "^target_net_0/w3/Adam/Assign"
  input: "^target_net_0/w3/Adam_1/Assign"
  input: "^target_net_0/w3/Assign"
  input: "^target_net_1/b1/Assign"
  input: "^target_net_1/b2/Assign"
  input: "^target_net_1/b3/Assign"
  input: "^target_net_1/fc_b1/Assign"
  input: "^target_net_1/fc_w1/Assign"
  input: "^target_net_1/q_b/Assign"
  input: "^target_net_1/q_b/opt/Assign"
  input: "^target_net_1/q_b/opt_1/Assign"
  input: "^target_net_1/q_w/Assign"
  input: "^target_net_1/q_w/opt/Assign"
  input: "^target_net_1/q_w/opt_1/Assign"
  input: "^target_net_1/w1/Assign"
  input: "^target_net_1/w2/Assign"
  input: "^target_net_1/w3/Assign"
  input: "^target_net_2/b1/Assign"
  input: "^target_net_2/b2/Assign"
  input: "^target_net_2/b3/Assign"
  input: "^target_net_2/fc_b1/Assign"
  input: "^target_net_2/fc_w1/Assign"
  input: "^target_net_2/q_b/Assign"
  input: "^target_net_2/q_b/opt/Assign"
  input: "^target_net_2/q_b/opt_1/Assign"
  input: "^target_net_2/q_w/Assign"
  input: "^target_net_2/q_w/opt/Assign"
  input: "^target_net_2/q_w/opt_1/Assign"
  input: "^target_net_2/w1/Assign"
  input: "^target_net_2/w2/Assign"
  input: "^target_net_2/w3/Assign"
}
versions {
  producer: 175
}
